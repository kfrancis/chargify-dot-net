# Rules in this file were initially inferred by Visual Studio IntelliCode from the C:\Users\ChrisBaxter\Git\projectcyrus\chargify-dot-net\Source\Chargify.NET\ codebase based on best match to current usage at 8/08/2021
# You can modify the rules from these initially generated values to suit your own policies
# You can learn more about editorconfig here: https://docs.microsoft.com/en-us/visualstudio/ide/editorconfig-code-style-settings-reference
[*.cs]


#Core editorconfig formatting - indentation

#use soft tabs (spaces) for indentation
indent_style = space

#Formatting - indentation options

#indent switch case contents.
csharp_indent_case_contents = true
#indent switch labels
csharp_indent_switch_labels = true

#Formatting - new line options

#place else statements on a new line
csharp_new_line_before_else = true
#require braces to be on a new line for object_collection_array_initializers, accessors, types, control_blocks, methods, and properties (also known as "Allman" style)
csharp_new_line_before_open_brace = object_collection_array_initializers, accessors, types, control_blocks, methods, properties
#require elements of query expression clauses to be on separate lines
csharp_new_line_between_query_expression_clauses = true

#Formatting - organize using options

#sort System.* using directives alphabetically, and place them before other usings
dotnet_sort_system_directives_first = true

#Formatting - spacing options

#require a space between a cast and the value
csharp_space_after_cast = true
#require a space before the colon for bases or interfaces in a type declaration
csharp_space_after_colon_in_inheritance_clause = true
#require a space after a keyword in a control flow statement such as a for loop
csharp_space_after_keywords_in_control_flow_statements = true
#require a space before the colon for bases or interfaces in a type declaration
csharp_space_before_colon_in_inheritance_clause = true
#remove space within empty argument list parentheses
csharp_space_between_method_call_empty_parameter_list_parentheses = false
#remove space between method call name and opening parenthesis
csharp_space_between_method_call_name_and_opening_parenthesis = false
#do not place space characters after the opening parenthesis and before the closing parenthesis of a method call
csharp_space_between_method_call_parameter_list_parentheses = false
#remove space within empty parameter list parentheses for a method declaration
csharp_space_between_method_declaration_empty_parameter_list_parentheses = false
#place a space character after the opening parenthesis and before the closing parenthesis of a method declaration parameter list.
csharp_space_between_method_declaration_parameter_list_parentheses = false

#Formatting - wrapping options

#leave code block on single line
csharp_preserve_single_line_blocks = true
#leave statements and member declarations on the same line
csharp_preserve_single_line_statements = true

#Style - Code block preferences

#prefer no curly braces if allowed
csharp_prefer_braces = false:silent

#Style - expression bodied member options

#prefer block bodies for accessors
csharp_style_expression_bodied_accessors = false:silent
#prefer block bodies for constructors
csharp_style_expression_bodied_constructors = false:silent
#prefer block bodies for methods
csharp_style_expression_bodied_methods = false:silent
#prefer block bodies for operators
csharp_style_expression_bodied_operators = false:silent
#prefer block bodies for properties
csharp_style_expression_bodied_properties = false:silent

#Style - expression level options

#prefer the language keyword for member access expressions, instead of the type name, for types that have a keyword to represent them
dotnet_style_predefined_type_for_member_access = true:silent

#Style - Expression-level  preferences

#prefer objects to be initialized using object initializers when possible
dotnet_style_object_initializer = true:silent

#Style - implicit and explicit types

#prefer explicit type over var in all cases, unless overridden by another code style rule
csharp_style_var_elsewhere = false:silent
#prefer explicit type over var to declare variables with built-in system types such as int
csharp_style_var_for_built_in_types = false:silent
#prefer explicit type over var when the type is already mentioned on the right-hand side of a declaration
csharp_style_var_when_type_is_apparent = false:silent

#Style - language keyword and framework type options

#prefer the language keyword for local variables, method parameters, and class members, instead of the type name, for types that have a keyword to represent them
dotnet_style_predefined_type_for_locals_parameters_members = true:silent

#Style - modifier options

#prefer accessibility modifiers to be declared except for public interface members. This will currently not differ from always and will act as future proofing for if C# adds default interface methods.
dotnet_style_require_accessibility_modifiers = for_non_interface_members:silent

#Style - Modifier preferences

#when this rule is set to a list of modifiers, prefer the specified ordering.
csharp_preferred_modifier_order = public,private,internal,static,override,readonly:silent

#Style - Pattern matching

#prefer is expression with type casts instead of pattern matching
csharp_style_pattern_matching_over_as_with_null_check = false:silent

#Style - qualification options

#prefer fields not to be prefaced with this. or Me. in Visual Basic
dotnet_style_qualification_for_field = false:silent
#prefer methods not to be prefaced with this. or Me. in Visual Basic
dotnet_style_qualification_for_method = false:silent
#prefer properties not to be prefaced with this. or Me. in Visual Basic
dotnet_style_qualification_for_property = false:silent

csharp_using_directive_placement=inside_namespace:silent
csharp_prefer_simple_using_statement=true:silent
csharp_style_prefer_pattern_matching=false:silent
csharp_style_pattern_matching_over_is_with_cast_check=true:silent
csharp_style_prefer_switch_expression=true:silent
csharp_style_prefer_not_pattern=true:silent
[*.{cs,vb}]
dotnet_code_quality_unused_parameters=all:silent
# IDE0051: Remove unused private members
dotnet_diagnostic.IDE0051.severity = none
dotnet_style_parentheses_in_arithmetic_binary_operators=always_for_clarity:silent
dotnet_style_parentheses_in_other_binary_operators=always_for_clarity:silent
dotnet_style_parentheses_in_relational_binary_operators=always_for_clarity:silent
dotnet_style_parentheses_in_other_operators=never_if_unnecessary:silent
dotnet_style_qualification_for_event=false:silent


# Default severity for analyzer diagnostics with category 'Style'
dotnet_analyzer_diagnostic.category-Style.severity = silent
# CS1591: Missing XML comment for publicly visible type or member
dotnet_diagnostic.CS1591.severity = none