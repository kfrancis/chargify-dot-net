<?xml version="1.0"?>
<doc>
    <assembly>
        <name>ChargifyDotNet</name>
    </assembly>
    <members>
        <member name="T:ChargifyNET.Adjustment">
            <summary>
            Adjustments allow you to change the current balance of the subscription. Adjustments with positive
            amounts make the balance go up, adjustments with negative amounts make the balance go down (like credits)
            http://docs.chargify.com/api-adjustments
            </summary>
        </member>
        <member name="M:ChargifyNET.Adjustment.#ctor">
            <summary>
            Constructor.  Values set to default
            </summary>
        </member>
        <member name="M:ChargifyNET.Adjustment.#ctor(System.String)">
            <summary>
            Constructor
            </summary>
            <param name="adjustmentXml">XML containing adjustment info (in expected format)</param>
        </member>
        <member name="M:ChargifyNET.Adjustment.#ctor(System.Xml.XmlNode)">
            <summary>
            Constructor
            </summary>
            <param name="adjustmentNode">XML containing adjustment info (in expected format)</param>
        </member>
        <member name="M:ChargifyNET.Adjustment.#ctor(ChargifyNET.Json.JsonObject)">
            <summary>
            Constructor
            </summary>
            <param name="adjustmentObject">Json containing adjustment info (in expected format)</param>
        </member>
        <member name="M:ChargifyNET.Adjustment.LoadFromNode(System.Xml.XmlNode)">
            <summary>
            Load data from a adjustment node
            </summary>
            <param name="adjustmentNode">The adjustment node</param>
        </member>
        <member name="P:ChargifyNET.Adjustment.ID">
            <summary>
            The ID of the adjustment
            </summary>
        </member>
        <member name="P:ChargifyNET.Adjustment.AmountInCents">
            <summary>
            The amount of the adjustment (in cents)
            </summary>
        </member>
        <member name="P:ChargifyNET.Adjustment.Amount">
            <summary>
            The amount of the adjustment
            </summary>
        </member>
        <member name="P:ChargifyNET.Adjustment.EndingBalanceInCents">
            <summary>
            The subscription balance after the adjustment (in cents)
            </summary>
        </member>
        <member name="P:ChargifyNET.Adjustment.EndingBalance">
            <summary>
            The subscription balance after the adjustment
            </summary>
        </member>
        <member name="P:ChargifyNET.Adjustment.Type">
            <summary>
            The type of the adjustment
            </summary>
        </member>
        <member name="P:ChargifyNET.Adjustment.TransactionType">
            <summary>
            The type of transaction done by the adjustment
            </summary>
        </member>
        <member name="P:ChargifyNET.Adjustment.SubscriptionID">
            <summary>
            The subscription the adjustment was created for
            </summary>
        </member>
        <member name="P:ChargifyNET.Adjustment.ProductID">
            <summary>
            The subscribed product at the time of the adjustment
            </summary>
        </member>
        <member name="P:ChargifyNET.Adjustment.CreatedAt">
            <summary>
            The date the adjustment was created
            </summary>
        </member>
        <member name="P:ChargifyNET.Adjustment.Memo">
            <summary>
            A helpful explaination for the adjustment
            </summary>
        </member>
        <member name="P:ChargifyNET.Adjustment.Success">
            <summary>
            (Currently, all adjustments return as successful
            </summary>
        </member>
        <member name="M:ChargifyNET.Adjustment.CompareTo(ChargifyNET.IAdjustment)">
            <summary>
            Method for comparing two adjustments
            </summary>
            <param name="other">The adjustment to compare with</param>
            <returns>The comparison value</returns>
        </member>
        <member name="M:ChargifyNET.Adjustment.CompareTo(ChargifyNET.Adjustment)">
            <summary>
            Method for comparing two adjustments
            </summary>
            <param name="other">The adjustment to compare with</param>
            <returns>The comparison value</returns>
        </member>
        <member name="T:ChargifyNET.BillingManagementInfo">
            <summary>
            From http://docs.chargify.com/api-billing-portal
            </summary>
        </member>
        <member name="M:ChargifyNET.BillingManagementInfo.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:ChargifyNET.BillingManagementInfo.#ctor(System.String)">
            <summary>
            Constructor
            </summary>
            <param name="billingManagementInfoXml">An XML string containing a billingManagementInfo node</param>
        </member>
        <member name="M:ChargifyNET.BillingManagementInfo.#ctor(System.Xml.XmlNode)">
            <summary>
            Constructor
            </summary>
            <param name="billingManagementInfoNode">An xml node with component information</param>
        </member>
        <member name="M:ChargifyNET.BillingManagementInfo.#ctor(ChargifyNET.Json.JsonObject)">
            <summary>
            Constructor
            </summary>
            <param name="billingManagementInfoObject">An JsonObject with billing management information</param>
        </member>
        <member name="P:ChargifyNET.BillingManagementInfo.URL">
            <summary>
            The customer's management URL
            </summary>
        </member>
        <member name="P:ChargifyNET.BillingManagementInfo.FetchCount">
            <summary>
            Number of times this link has been retrieved (at 15 you will be blocked)
            </summary>
        </member>
        <member name="P:ChargifyNET.BillingManagementInfo.CreatedAt">
            <summary>
            When this link was created
            </summary>
        </member>
        <member name="P:ChargifyNET.BillingManagementInfo.NewLinkAvailableAt">
            <summary>
            When a new link will be available and fetch_count is reset (15 days from when it was created)
            </summary>
        </member>
        <member name="P:ChargifyNET.BillingManagementInfo.ExpiresAt">
            <summary>
            When this link expires (65 days from when it was created)
            </summary>
        </member>
        <member name="M:ChargifyNET.BillingManagementInfo.CompareTo(ChargifyNET.BillingManagementInfo)">
            <summary>
            Compare
            </summary>
            <param name="other"></param>
            <returns></returns>
        </member>
        <member name="M:ChargifyNET.BillingManagementInfo.CompareTo(ChargifyNET.IBillingManagementInfo)">
            <summary>
            Compare
            </summary>
            <param name="other"></param>
            <returns></returns>
        </member>
        <member name="T:ChargifyNET.Charge">
            <summary>
            The one-time charge class bump
            </summary>
        </member>
        <member name="M:ChargifyNET.Charge.#ctor">
            <summary>
            Constructor.  Values set to default
            </summary>
        </member>
        <member name="M:ChargifyNET.Charge.#ctor(System.String)">
            <summary>
            Constructor
            </summary>
            <param name="chargeXml">XML containing charge info (in expected format)</param>
        </member>
        <member name="M:ChargifyNET.Charge.#ctor(System.Xml.XmlNode)">
            <summary>
            Constructor
            </summary>
            <param name="chargeNode">XML containing charge info (in expected format)</param>
        </member>
        <member name="M:ChargifyNET.Charge.#ctor(ChargifyNET.Json.JsonObject)">
            <summary>
            Constructor
            </summary>
            <param name="chargeObject">Json containing charge info (in expected format)</param>
        </member>
        <member name="M:ChargifyNET.Charge.LoadFromNode(System.Xml.XmlNode)">
            <summary>
            Load data from a subscription node
            </summary>
            <param name="subscriptionNode">The subscription node</param>
        </member>
        <member name="P:ChargifyNET.Charge.Success">
            <summary>
            Either true or false, depending on the success of the charge.
            <remarks>At this time, all charges that are returned will return true here. 
            Flase may be returned in the future when more options are added to the charge creation API</remarks>
            </summary>
        </member>
        <member name="P:ChargifyNET.Charge.AmountInCents">
            <summary>
            Get the amount (in cents)
            </summary>
        </member>
        <member name="P:ChargifyNET.Charge.Amount">
            <summary>
            Get the amount, in dollars and cents.
            </summary>
        </member>
        <member name="P:ChargifyNET.Charge.Memo">
            <summary>
            The memo for the created charge
            </summary>
        </member>
        <member name="P:ChargifyNET.Charge.CreatedAt">
            <summary>
            The date the charge was created
            </summary>
        </member>
        <member name="P:ChargifyNET.Charge.EndingBalanceInCents">
            <summary>
            The ending balance of the subscription, in cents
            </summary>
        </member>
        <member name="P:ChargifyNET.Charge.EndingBalance">
            <summary>
            The ending balance of the subscription, in dollars and cents (formatted as decimal)
            </summary>
        </member>
        <member name="P:ChargifyNET.Charge.ID">
            <summary>
            The ID of the charge
            </summary>
        </member>
        <member name="P:ChargifyNET.Charge.Kind">
            <summary>
            The kind of charge
            </summary>
        </member>
        <member name="P:ChargifyNET.Charge.PaymentID">
            <summary>
            The ID of the payment associated with this charge
            </summary>
        </member>
        <member name="P:ChargifyNET.Charge.ProductID">
            <summary>
            The product ID the subscription was subscribed to at the time of the charge
            </summary>
        </member>
        <member name="P:ChargifyNET.Charge.SubscriptionID">
            <summary>
            The subscription ID that this charge was applied to
            </summary>
        </member>
        <member name="P:ChargifyNET.Charge.ChargeType">
            <summary>
            The type of charge
            </summary>
        </member>
        <member name="P:ChargifyNET.Charge.TransactionType">
            <summary>
            The type of transaction
            </summary>
        </member>
        <member name="P:ChargifyNET.Charge.GatewayTransactionID">
            <summary>
            The ID of the gateway transaction, useful for debugging.
            </summary>
        </member>
        <member name="M:ChargifyNET.Charge.CompareTo(ChargifyNET.ICharge)">
            <summary>
            Compare this instance to another (by AmountInCents)
            </summary>
            <param name="other">The other instance</param>
            <returns>The result of the comparison</returns>
        </member>
        <member name="M:ChargifyNET.Charge.CompareTo(ChargifyNET.Charge)">
            <summary>
            Compare this instance to another (by AmountInCents)
            </summary>
            <param name="other">The other instance</param>
            <returns>The result of the comparison</returns>
        </member>
        <member name="T:ChargifyNET.ChargifyBase">
            <summary>
            Base class for all chargify objects
            </summary>
        </member>
        <member name="M:ChargifyNET.ChargifyBase.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:ChargifyNET.ChargifyBase.ToHTMLString">
            <summary>
            Convert this object to an HTML formatted string
            </summary>
            <returns>The object represented as an HTML formatted string</returns>
        </member>
        <member name="T:ChargifyNET.ChargifyConnect">
            <summary>
            Class containing methods for interfacing with the Chargify API via XML and JSON
            </summary>
        </member>
        <member name="M:ChargifyNET.ChargifyConnect.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:ChargifyNET.ChargifyConnect.#ctor(System.String,System.String,System.String)">
            <summary>
            Constructor
            </summary>
            <param name="url">The Chargify URL</param>
            <param name="apiKey">Your Chargify api key</param>
            <param name="password">Your Chargify api password</param>
        </member>
        <member name="M:ChargifyNET.ChargifyConnect.#ctor(System.String,System.String,System.String,System.String)">
            <summary>
            Constructor
            </summary>
            <param name="url">The Chargify URL</param>
            <param name="apiKey">Your Chargify api key</param>
            <param name="password">Your Chargify api password</param>
            <param name="sharedKey">Your Chargify hosted page shared key</param>
        </member>
        <member name="P:ChargifyNET.ChargifyConnect.apiKey">
            <summary>
            Get or set the API key
            </summary>
        </member>
        <member name="P:ChargifyNET.ChargifyConnect.Password">
            <summary>
            Get or set the password
            </summary>
        </member>
        <member name="P:ChargifyNET.ChargifyConnect.URL">
            <summary>
            Get or set the URL for chargify
            </summary>
        </member>
        <member name="P:ChargifyNET.ChargifyConnect.SharedKey">
            <summary>
            SharedKey used for url generation
            </summary>
        </member>
        <member name="P:ChargifyNET.ChargifyConnect.UseJSON">
            <summary>
            Should Chargify.NET use JSON for output? XML by default, always XML for input.
            </summary>
        </member>
        <member name="P:ChargifyNET.ChargifyConnect.CvvRequired">
            <summary>
            Should the library require a CVV?
            </summary>
        </member>
        <member name="P:ChargifyNET.ChargifyConnect.ProtocolType">
            <summary>
            Allows you to specify the specific SecurityProtocolType. If not set, then
            the default is used.
            </summary>
        </member>
        <member name="P:ChargifyNET.ChargifyConnect.Timeout">
            <summary>
            The timeout (in milliseconds) for any call to Chargify. The default is 180000
            </summary>
        </member>
        <member name="P:ChargifyNET.ChargifyConnect.HasConnected">
            <summary>
            Method for determining if the properties have been set to allow this instance to connect correctly.
            </summary>
        </member>
        <member name="P:ChargifyNET.ChargifyConnect.LogRequest">
            <summary>
            Caller can plug in a delegate for logging raw Chargify requests
            </summary>
        </member>
        <member name="P:ChargifyNET.ChargifyConnect.LogResponse">
            <summary>
            Caller can plug in a delegate for logging raw Chargify responses
            </summary>
        </member>
        <member name="P:ChargifyNET.ChargifyConnect.LastResponse">
            <summary>
            Get a reference to the last Http Response from the chargify server. This is set after every call to
            a Chargify Connect method
            </summary>
        </member>
        <member name="M:ChargifyNET.ChargifyConnect.GetMetafields``1">
            <summary>
            Returns a list of all metadata for a resource.
            </summary>
            <typeparam name="T">The type of resource. Currently either Subscription or Customer</typeparam>
            <returns>The metadata result containing the response</returns>
        </member>
        <member name="M:ChargifyNET.ChargifyConnect.SetMetadataFor``1(System.Int64,System.Collections.Generic.IList{ChargifyNET.Metadata})">
            <summary>
            Allows you to set a group of metadata for a specific resource
            </summary>
            <typeparam name="T">The type of resource. Currently either Subscription or Customer</typeparam>
            <param name="chargifyId">The Chargify identifier for the resource</param>
            <param name="metadatum">The list of metadatum to set</param>
            <returns>The metadata result containing the response</returns>
        </member>
        <member name="M:ChargifyNET.ChargifyConnect.SetMetadataFor``1(System.Int64,ChargifyNET.Metadata)">
            <summary>
            Allows you to set a single metadata for a specific resource
            </summary>
            <typeparam name="T">The type of resource. Currently either Subscription or Customer</typeparam>
            <param name="chargifyId">The Chargify identifier for the resource</param>
            <param name="metadata">The list of metadata to set</param>
            <returns>The metadata result containing the response</returns>
        </member>
        <member name="M:ChargifyNET.ChargifyConnect.GetMetadataFor``1(System.Int64,System.Nullable{System.Int32})">
            <summary>
            Retrieve all metadata for a specific resource (like a specific customer or subscription).
            </summary>
            <typeparam name="T">The type of resource. Currently either Subscription or Customer</typeparam>
            <param name="resourceId">The Chargify identifier for the resource</param>
            <param name="page">Which page to return -- Chargify Indexes Metadata Page at 1</param>
            <returns>The metadata result containing the response</returns>
        </member>
        <member name="M:ChargifyNET.ChargifyConnect.GetMetadata``1">
            <summary>
            Returns a list of all metadata for a resource.
            </summary>
            <typeparam name="T">The type of resource. Currently either Subscription or Customer</typeparam>
            <returns>The metadata result containing the response</returns>
        </member>
        <member name="M:ChargifyNET.ChargifyConnect.LoadCustomer(System.Int64)">
            <summary>
            Load the requested customer from chargify
            </summary>
            <param name="chargifyId">The chargify ID of the customer</param>
            <returns>The customer with the specified chargify ID</returns>
        </member>
        <member name="M:ChargifyNET.ChargifyConnect.LoadCustomer(System.String)">
            <summary>
            Load the requested customer from chargify
            </summary>
            <param name="systemId">The system ID of the customer</param>
            <returns>The customer with the specified chargify ID</returns>
        </member>
        <member name="M:ChargifyNET.ChargifyConnect.CreateCustomer(ChargifyNET.ICustomer)">
            <summary>
            Create a new chargify customer
            </summary>
            <param name="customer">
            A customer object containing customer attributes.  The customer cannot be an existing saved chargify customer
            </param>
            <returns>The created chargify customer</returns>
        </member>
        <member name="M:ChargifyNET.ChargifyConnect.CreateCustomer(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Boolean)">
            <summary>
            Create a new chargify customer
            </summary>
            <param name="firstName">The first name of the customer</param>
            <param name="lastName">The last name of the customer</param>
            <param name="emailAddress">The email address of the customer</param>
            <param name="phone">The phone number of the customer</param>
            <param name="organization">The organization of the customer</param>
            <param name="systemId">The system ID of the customer</param>
            <param name="ccEmails">The CC Emails of the customer</param>
            <param name="shippingAddress">The shipping address of the customer, if applicable.</param>
            <param name="shippingAddress2">The shipping address (line 2) of the customer, if applicable.</param>
            <param name="shippingCity">The shipping city of the customer, if applicable.</param>
            <param name="shippingState">The shipping state of the customer, if applicable.</param>
            <param name="shippingZip">The shipping zip of the customer, if applicable.</param>
            <param name="shippingCountry">The shipping country of the customer, if applicable.</param>
            <param name="taxExempt">The tax exemption status of the customer, if applicable.</param>
            <returns>The created chargify customer</returns>
        </member>
        <member name="M:ChargifyNET.ChargifyConnect.CreateCustomer(System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Create a new chargify customer
            </summary>
            <param name="firstName">The first name of the customer</param>
            <param name="lastName">The last name of the customer</param>
            <param name="emailAddress">The email address of the customer</param>
            <param name="phone">The phone number of the customer</param>
            <param name="organization">The organization of the customer</param>
            <param name="systemId">The system ID fro the customer</param>
            <returns>The created chargify customer</returns>
        </member>
        <member name="M:ChargifyNET.ChargifyConnect.UpdateCustomer(ChargifyNET.ICustomer)">
            <summary>
            Update the specified chargify customer
            </summary>
            <param name="customer">The customer to update</param>
            <returns>The updated customer</returns>
        </member>
        <member name="M:ChargifyNET.ChargifyConnect.ProcessCustomerListResponse(System.String,System.Boolean)">
            <summary>
            Processes a list of customers from string response into a dictionary
            </summary>
            <param name="response">The API response</param>
            <param name="keyByChargifyId">If true, the dictionary will be keyed by Chargify ID and not the reference value.</param>
            <returns>A list of customers contained in the string response</returns>
        </member>
        <member name="M:ChargifyNET.ChargifyConnect.GetCustomerList(System.Int32)">
            <summary>
            Get a list of customers (will return 50 for each page)
            </summary>
            <param name="pageNumber">The page number to load</param>
            <returns>A list of customers for the specified page</returns>
        </member>
        <member name="M:ChargifyNET.ChargifyConnect.GetCustomerList(System.Int32,System.Boolean)">
            <summary>
            Get a list of customers (will return 50 for each page)
            </summary>
            <param name="pageNumber">The page number to load</param>
            <param name="keyByChargifyId">If true, the dictionary will be keyed by Chargify ID and not the reference value.</param>
            <returns>A list of customers for the specified page</returns>
        </member>
        <member name="M:ChargifyNET.ChargifyConnect.GetCustomerList">
            <summary>
            Get a list of all customers.  Be careful calling this method because a large number of
            customers will result in multiple calls to Chargify
            </summary>
            <returns>A list of customers</returns>
        </member>
        <member name="M:ChargifyNET.ChargifyConnect.GetCustomerList(System.Boolean)">
            <summary>
            Get a list of all customers.  Be careful calling this method because a large number of
            customers will result in multiple calls to Chargify
            </summary>
            <param name="keyByChargifyId">If true, the key will be the ChargifyID, otherwise it will be the reference value</param>
            <returns>A list of customers</returns>
        </member>
        <member name="M:ChargifyNET.ChargifyConnect.SearchCustomers(System.String)">
            <summary>
            Search the customers
            </summary>
            <param name="query">The search string (Email, Chargify ID, Reference, Organization)</param>
            <returns>A list of customers that satisfy the search query</returns>
        </member>
        <member name="M:ChargifyNET.ChargifyConnect.DeleteCustomer(System.Int64)">
            <summary>
            Delete the specified customer
            </summary>
            <param name="chargifyId">The integer identifier of the customer</param>
            <returns>True if the customer was deleted, false otherwise.</returns>
            <remarks>This method does not currently work, but it will once they open up the API. This will always return false, as Chargify will send a Http Forbidden everytime.</remarks>
        </member>
        <member name="M:ChargifyNET.ChargifyConnect.DeleteCustomer(System.String)">
            <summary>
            Delete the specified customer
            </summary>
            <param name="systemId">The system identifier of the customer.</param>
            <returns>True if the customer was deleted, false otherwise.</returns>
            <remarks>This method does not currently work, but it will once they open up the API. This will always return false, as Chargify will send a Http Forbidden everytime.</remarks>
        </member>
        <member name="M:ChargifyNET.ChargifyConnect.UpdateProduct(System.Int32,ChargifyNET.IProduct)">
            <summary>
            Method that updates a product
            </summary>
            <param name="productId">The ID of the product to update</param>
            <param name="updatedProduct">The details of the updated product</param>
            <returns>The updated product</returns>
        </member>
        <member name="M:ChargifyNET.ChargifyConnect.CreateProduct(System.Int32,ChargifyNET.IProduct)">
            <summary>
            Method to create a new product and add it to the site
            </summary>
            <param name="productFamilyId">The product family ID, required for adding products</param>
            <param name="newProduct">The new product details</param>
            <returns>The completed product information</returns>
            <remarks>This is largely undocumented currently, especially the fact that you need the product family ID</remarks>
        </member>
        <member name="M:ChargifyNET.ChargifyConnect.CreateProduct(System.Int32,System.String,System.String,System.Int32,System.Int32,ChargifyNET.IntervalUnit,System.String,System.String)">
            <summary>
            Allows the creation of a product
            </summary>
            <param name="productFamilyId">The family to which this product belongs</param>
            <param name="name">The name of the product</param>
            <param name="handle">The handle to be used for this product</param>
            <param name="priceInCents">The price (in cents)</param>
            <param name="interval">The time interval used to determine the recurring nature of this product</param>
            <param name="intervalUnit">Either days, or months</param>
            <param name="accountingCode">The accounting code used for this product</param>
            <param name="description">The product description</param>
            <returns>The created product</returns>
        </member>
        <member name="M:ChargifyNET.ChargifyConnect.LoadProduct(System.String)">
            <summary>
            Load the requested product from chargify by its handle
            </summary>
            <param name="handle">The Chargify ID or handle of the product</param>
            <returns>The product with the specified chargify ID</returns>
        </member>
        <member name="M:ChargifyNET.ChargifyConnect.LoadProduct(System.String,System.Boolean)">
            <summary>
            Load the requested product from chargify
            </summary>
            <param name="productId">The Chargify ID or handle of the product</param>
            <param name="isHandle">If true, then the ProductID represents the handle, if false the ProductID represents the Chargify ID</param>
            <returns>The product with the specified chargify ID</returns>
        </member>
        <member name="M:ChargifyNET.ChargifyConnect.GetProductList">
            <summary>
            Get a list of products
            </summary>
            <returns>A list of products (keyed by product handle)</returns>
        </member>
        <member name="M:ChargifyNET.ChargifyConnect.CreateProductFamily(ChargifyNET.IProductFamily)">
            <summary>
            Method for creating a new product family via the API
            </summary>
            <param name="newFamily">The new product family details</param>
            <returns>The created product family information</returns>
        </member>
        <member name="M:ChargifyNET.ChargifyConnect.GetProductFamilyList">
            <summary>
            Get a list of product families
            </summary>
            <returns>A list of product families (keyed by product family id)</returns>
        </member>
        <member name="M:ChargifyNET.ChargifyConnect.LoadProductFamily(System.String)">
            <summary>
            Load the requested product family from chargify by its handle
            </summary>
            <param name="handle">The Chargify ID or handle of the product</param>
            <returns>The product family with the specified chargify ID</returns>
        </member>
        <member name="M:ChargifyNET.ChargifyConnect.LoadProductFamily(System.Int32)">
            <summary>
            Load the requested product family from chargify by its handle
            </summary>
            <param name="id">The Chargify ID of the product</param>
            <returns>The product family with the specified chargify ID</returns>
        </member>
        <member name="M:ChargifyNET.ChargifyConnect.LoadProductFamily(System.String,System.Boolean)">
            <summary>
            Load the requested product family from chargify
            </summary>
            <param name="productFamilyIdentifier">The Chargify identifier (ID or handle) of the product family</param>
            <param name="isHandle">If true, then the ProductID represents the handle, if false the ProductFamilyID represents the Chargify ID</param>
            <returns>The product family with the specified chargify ID</returns>
        </member>
        <member name="M:ChargifyNET.ChargifyConnect.GetPrettySubscriptionUpdateURL(System.String,System.String,System.Int32)">
            <summary>
            Method to get the secure URL (with pretty id) for updating the payment details for a subscription.
            </summary>
            <param name="firstName">The first name of the customer to add to the pretty url</param>
            <param name="lastName">The last name of the customer to add to the pretty url</param>
            <param name="subscriptionId">The ID of the subscription to update</param>
            <returns>The secure url of the update page</returns>
        </member>
        <member name="M:ChargifyNET.ChargifyConnect.GetSubscriptionUpdateURL(System.Int32)">
            <summary>
            Method to get the secure URL for updating the payment details for a subscription.
            </summary>
            <param name="subscriptionId">The ID of the subscription to update</param>
            <returns>The secure url of the update page</returns>
        </member>
        <member name="M:ChargifyNET.ChargifyConnect.ReactivateSubscription(System.Int32)">
            <summary>
            Chargify offers the ability to reactivate a previously canceled subscription. For details
            on how reactivation works, and how to reactivate subscriptions through the Admin interface, see
            http://support.chargify.com/faqs/features/reactivation
            </summary>
            <param name="subscriptionId">The ID of the subscription to reactivate</param>
            <returns>The newly reactivated subscription, or nothing.</returns>
        </member>
        <member name="M:ChargifyNET.ChargifyConnect.ReactivateSubscription(System.Int32,System.Boolean)">
            <summary>
            Chargify offers the ability to reactivate a previously canceled subscription. For details
            on how reactivation works, and how to reactivate subscriptions through the Admin interface, see
            http://support.chargify.com/faqs/features/reactivation
            </summary>
            <param name="subscriptionId">The ID of the subscription to reactivate</param>
            <param name="includeTrial">If true, the reactivated subscription will include a trial if one is available.</param>
            <returns>The newly reactivated subscription, or nothing.</returns>
        </member>
        <member name="M:ChargifyNET.ChargifyConnect.ReactivateSubscription(System.Int32,System.Boolean,System.Nullable{System.Boolean},System.String)">
            <summary>
            Chargify offers the ability to reactivate a previously canceled subscription. For details
            on how reactivation works, and how to reactivate subscriptions through the Admin interface, see
            http://support.chargify.com/faqs/features/reactivation
            </summary>
            <param name="subscriptionId">The ID of the subscription to reactivate</param>
            <param name="includeTrial">If true, the reactivated subscription will include a trial if one is available.</param>
            <param name="preserveBalance">If true, the existing subscription balance will NOT be cleared/reset before adding the additional reactivation charges.</param>
            <param name="couponCode">The coupon code to be applied during reactivation.</param>
            <returns>The newly reactivated subscription, or nothing.</returns>
        </member>
        <member name="M:ChargifyNET.ChargifyConnect.DeleteSubscription(System.Int32,System.String)">
            <summary>
            Delete a subscription
            </summary>
            <param name="subscriptionId">The ID of the sucscription</param>
            <param name="cancellationMessage">The message to associate with the subscription</param>
            <returns></returns>
        </member>
        <member name="M:ChargifyNET.ChargifyConnect.PurgeSubscription(System.Int32)">
            <summary>
            Purge the specified subscription
            * This is undocumented behavior. It requires special permissions from chargify. Contact support to enable this feature. *
            ** CAUTION:  Permanently deletes subscription and all transactions. There is no way to undo this! **
            </summary>'
            https://SUBDOMAIN_HERE.chargify.com/subscriptions/SUBSCRIPTION_ID_HERE/purge.json?ack=CUSTOMER_ID_HERE
            <param name="subscriptionId">The id of the subscription</param>
            <returns>True if the subscription was purged, false otherwise.</returns>
        </member>
        <member name="M:ChargifyNET.ChargifyConnect.LoadSubscription(System.Int32)">
            <summary>
            Load the requested customer from chargify
            </summary>
            <param name="subscriptionId">The ID of the subscription</param>
            <returns>The subscription with the specified ID</returns>
        </member>
        <member name="M:ChargifyNET.ChargifyConnect.GetSubscriptionList(ChargifyNET.SubscriptionState)">
            <summary>
            Method that returns a list of subscriptions.
            </summary>
            <param name="state">The state of subscriptions to return</param>
            <returns>Null if there are no results, object otherwise.</returns>
        </member>
        <member name="M:ChargifyNET.ChargifyConnect.GetSubscriptionList">
            <summary>
            Method that returns a list of subscriptions.
            </summary>
            <returns>Null if there are no results, object otherwise.</returns>
        </member>
        <member name="M:ChargifyNET.ChargifyConnect.GetSubscriptionList(System.Int32,System.Int32)">
            <summary>
            Method that returns a list of subscriptions.
            </summary>
            <param name="page">The page number</param>
            <param name="perPage">The number of results per page (used for pagination)</param>
            <returns>Null if there are no results, object otherwise.</returns>
        </member>
        <member name="M:ChargifyNET.ChargifyConnect.GetSubscriptionListForCustomer(System.Int64)">
            <summary>
            Get a list of all subscriptions for a customer.
            </summary>
            <param name="chargifyId">The ChargifyID of the customer</param>
            <returns>A list of subscriptions</returns>
        </member>
        <member name="M:ChargifyNET.ChargifyConnect.CreateSubscription(ChargifyNET.ISubscriptionCreateOptions)">
            <summary>
            Create a subscription
            </summary>
            <param name="options">The input options for creating a subscription</param>
            <returns>The subscription</returns>
        </member>
        <member name="M:ChargifyNET.ChargifyConnect.CreateSubscription(System.String,System.Int64,System.Nullable{ChargifyNET.PaymentCollectionMethod})">
            <summary>
            Create a new subscription without passing credit card information.
            </summary>
            <param name="productHandle">The handle to the product</param>
            <param name="chargifyId">The Chargify ID of the customer</param>
            <param name="paymentCollectionMethod">Optional, type of payment collection method</param>
            <returns>The xml describing the new subsscription</returns>
        </member>
        <member name="M:ChargifyNET.ChargifyConnect.CreateSubscription(System.String,System.Int64,ChargifyNET.ICreditCardAttributes)">
            <summary>
            Create a new subscription
            </summary>
            <param name="productHandle">The handle to the product</param>
            <param name="chargifyId">The Chargify ID of the customer</param>
            <param name="creditCardAttributes">The credit card attributes</param>
            <returns>The xml describing the new subsscription</returns>
        </member>
        <member name="M:ChargifyNET.ChargifyConnect.CreateSubscription(System.String,System.Int64,ChargifyNET.ICreditCardAttributes,System.DateTime)">
            <summary>
            Create a subscription
            </summary>
            <param name="productHandle">The handle of the product</param>
            <param name="chargifyId">The ID of the customer who should be used in this new subscription</param>
            <param name="creditCardAttributes">The credit card attributes to use for the new subscription</param>
            <param name="nextBillingAt">The date that should be used for the next_billing_at</param>
            <returns>The new subscription, if successful. Null otherwise.</returns>
        </member>
        <member name="M:ChargifyNET.ChargifyConnect.CreateSubscriptionUsingCoupon(System.String,System.Int64,System.String)">
            <summary>
            Create a subscription using a coupon for discounted rate, without using credit card information.
            </summary>
            <param name="productHandle">The product to subscribe to</param>
            <param name="chargifyId">The ID of the Customer to add the subscription for</param>
            <param name="couponCode">The discount coupon code</param>
            <returns>If sucessful, the subscription object. Otherwise null.</returns>
        </member>
        <member name="M:ChargifyNET.ChargifyConnect.CreateSubscriptionUsingCoupon(System.String,System.Int64,ChargifyNET.ICreditCardAttributes,System.String)">
            <summary>
            Create a subscription using a coupon for discounted rate
            </summary>
            <param name="productHandle">The product to subscribe to</param>
            <param name="chargifyId">The ID of the Customer to add the subscription for</param>
            <param name="creditCardAttributes">The credit card attributes to use for this transaction</param>
            <param name="couponCode">The discount coupon code</param>
            <returns></returns>
        </member>
        <member name="M:ChargifyNET.ChargifyConnect.CreateSubscription(System.String,System.String)">
            <summary>
            Create a new subscription without requiring credit card information
            </summary>
            <param name="productHandle">The handle to the product</param>
            <param name="systemId">The System ID of the customer</param>
            <returns>The xml describing the new subsscription</returns>
        </member>
        <member name="M:ChargifyNET.ChargifyConnect.CreateSubscription(System.String,System.String,ChargifyNET.ICreditCardAttributes)">
            <summary>
            Create a new subscription
            </summary>
            <param name="productHandle">The handle to the product</param>
            <param name="systemId">The System ID of the customer</param>
            <param name="creditCardAttributes">The credit card attributes</param>
            <returns>The xml describing the new subsscription</returns>
        </member>
        <member name="M:ChargifyNET.ChargifyConnect.CreateSubscriptionUsingCoupon(System.String,System.String,System.String)">
            <summary>
            Create a new subscription without passing credit card info
            </summary>
            <param name="productHandle">The handle to the product</param>
            <param name="systemId">The System ID of the customer</param>
            <param name="couponCode">The discount coupon code</param>
            <returns>The xml describing the new subscription</returns>
        </member>
        <member name="M:ChargifyNET.ChargifyConnect.CreateSubscriptionUsingCoupon(System.String,System.String,ChargifyNET.ICreditCardAttributes,System.String)">
            <summary>
            Create a new subscription
            </summary>
            <param name="productHandle">The handle to the product</param>
            <param name="systemId">The System ID of the customer</param>
            <param name="creditCardAttributes">The credit card attributes</param>
            <param name="couponCode">The discount coupon code</param>
            <returns>The xml describing the new subsscription</returns>
        </member>
        <member name="M:ChargifyNET.ChargifyConnect.CreateSubscription(System.String,ChargifyNET.ICustomerAttributes,System.Nullable{ChargifyNET.PaymentCollectionMethod})">
            <summary>
            Create a new subscription and a new customer at the same time without submitting PaymentProfile attributes
            </summary>
            <param name="productHandle">The handle to the product</param>
            <param name="customerAttributes">The attributes for the new customer</param>
            <returns>The xml describing the new subsscription</returns>
            <param name="paymentCollectionMethod">The type of subscription, recurring (automatic) billing, or invoice (if applicable)</param>
        </member>
        <member name="M:ChargifyNET.ChargifyConnect.CreateSubscription(System.String,ChargifyNET.ICustomerAttributes,System.DateTime,ChargifyNET.IPaymentProfileAttributes)">
            <summary>
            Create a new subscription and a new customer at the same time and import the card data from a specific vault storage
            </summary>
            <param name="productHandle">The handle to the product</param>
            <param name="customerAttributes">The attributes for the new customer</param>
            <param name="nextBillingAt">DateTime for this customer to be assessed at</param>
            <param name="existingProfile">Data concerning the existing profile in vault storage</param>
            <returns>The xml describing the new subscription</returns>
        </member>
        <member name="M:ChargifyNET.ChargifyConnect.CreateSubscription(System.String,ChargifyNET.ICustomerAttributes,System.DateTime,System.Int32)">
            <summary>
            Create a new subscription and a new customer at the same time and use the card data from another payment profile (from the same customer).
            </summary>
            <param name="productHandle">The handle to the product</param>
            <param name="customerAttributes">The attributes for the new customer</param>
            <param name="nextBillingAt">DateTime for this customer to be assessed at</param>
            <param name="existingProfileId">The ID of the existing payment profile to use when creating the new subscription.</param>
            <returns>The new subscription</returns>
        </member>
        <member name="M:ChargifyNET.ChargifyConnect.CreateSubscription(System.String,ChargifyNET.ICustomerAttributes,ChargifyNET.ICreditCardAttributes,System.DateTime)">
            <summary>
            Create a new subscription and a new customer at the same time
            </summary>
            <param name="productHandle">The handle to the product</param>
            <param name="customerAttributes">The attributes for the new customer</param>
            <param name="creditCardAttributes">The credit card attributes</param>
            <param name="nextBillingAt">DateTime for this customer to be assessed at</param>
            <returns>The xml describing the new subscription</returns>
        </member>
        <member name="M:ChargifyNET.ChargifyConnect.CreateSubscription(System.String,ChargifyNET.ICustomerAttributes,ChargifyNET.ICreditCardAttributes)">
            <summary>
            Create a new subscription and a new customer at the same time
            </summary>
            <param name="productHandle">The handle to the product</param>
            <param name="customerAttributes">The attributes for the new customer</param>
            <param name="creditCardAttributes">The credit card attributes</param>
            <returns>The xml describing the new subsscription</returns>
        </member>
        <member name="M:ChargifyNET.ChargifyConnect.CreateSubscription(System.String,ChargifyNET.ICustomerAttributes,ChargifyNET.ICreditCardAttributes,System.Collections.Generic.Dictionary{System.Int32,System.String})">
            <summary>
            Create a new subscription and a new customer at the same time
            </summary>
            <param name="productHandle">The handle to the product</param>
            <param name="customerAttributes">The attributes for the new customer</param>
            <param name="creditCardAttributes">The credit card attributes</param>
            <param name="componentsWithQuantity">The components to set on the subscription initially</param>
            <returns></returns>
        </member>
        <member name="M:ChargifyNET.ChargifyConnect.CreateSubscriptionUsingCoupon(System.String,ChargifyNET.ICustomerAttributes,ChargifyNET.ICreditCardAttributes,System.String,System.Collections.Generic.Dictionary{System.Int32,System.String})">
            <summary>
            Create a new subscription, specifying a coupon
            </summary>
            <param name="productHandle">The product to subscribe to</param>
            <param name="customerAttributes">Details about the customer</param>
            <param name="creditCardAttributes">Payment details</param>
            <param name="couponCode">The coupon to use</param>
            <param name="componentsWithQuantity">Components to set on the subscription initially</param>
            <returns>Details about the subscription</returns>
        </member>
        <member name="M:ChargifyNET.ChargifyConnect.CreateSubscription(System.String,ChargifyNET.ICustomerAttributes,ChargifyNET.ICreditCardAttributes,System.Int32,System.Int32)">
            <summary>
            Create a new subscription and a new customer at the same time
            </summary>
            <param name="productHandle">The handle to the product</param>
            <param name="customerAttributes">The attributes for the new customer</param>
            <param name="creditCardAttributes">The credit card attributes</param>
            <param name="componentId">The component to allocate when creating the subscription</param>
            <param name="allocatedQuantity">The quantity to allocate of the component when creating the subscription</param>
            <returns>The xml describing the new subsscription</returns>
        </member>
        <member name="M:ChargifyNET.ChargifyConnect.CreateSubscriptionUsingCoupon(System.String,ChargifyNET.ICustomerAttributes,System.String)">
            <summary>
            Create a new subscription and a new customer at the same time using no credit card information
            </summary>
            <param name="productHandle">The handle to the product</param>
            <param name="customerAttributes">The attributes for the new customer</param>
            <param name="couponCode">The discount coupon code</param>
            <returns>The xml describing the new subsscription</returns>
        </member>
        <member name="M:ChargifyNET.ChargifyConnect.CreateSubscriptionUsingCoupon(System.String,ChargifyNET.ICustomerAttributes,System.String,System.DateTime,ChargifyNET.IPaymentProfileAttributes)">
            <summary>
            Create a new subscription and a new customer at the same time using no credit card information
            </summary>
            <param name="productHandle">The handle to the product</param>
            <param name="customerAttributes">The attributes for the new customer</param>
            <param name="couponCode">The discount coupon code</param>
            <param name="nextBillingAt">DateTime for this customer to be assessed at</param>
            <param name="existingProfile">Data concerning the existing profile in vault storage</param>
            <returns>The xml describing the new subsscription</returns>
        </member>
        <member name="M:ChargifyNET.ChargifyConnect.CreateSubscriptionUsingCoupon(System.String,ChargifyNET.ICustomerAttributes,System.String,System.DateTime,System.Int32)">
            <summary>
            Create a new subscription and a new customer at the same time using no credit card information
            </summary>
            <param name="productHandle">The handle to the product</param>
            <param name="customerAttributes">The attributes for the new customer</param>
            <param name="couponCode">The discount coupon code</param>
            <param name="nextBillingAt">DateTime for this customer to be assessed at</param>
            <param name="existingProfileId">The ID of the data concerning the existing profile in vault storage</param>
            <returns>The xml describing the new subsscription</returns>
        </member>
        <member name="M:ChargifyNET.ChargifyConnect.CreateSubscriptionUsingCoupon(System.String,ChargifyNET.ICustomerAttributes,ChargifyNET.ICreditCardAttributes,System.String)">
            <summary>
            Create a new subscription and a new customer at the same time
            </summary>
            <param name="productHandle">The handle to the product</param>
            <param name="customerAttributes">The attributes for the new customer</param>
            <param name="creditCardAttributes">The credit card attributes</param>
            <param name="couponCode">The discount coupon code</param>
            <returns>The xml describing the new subsscription</returns>
        </member>
        <member name="M:ChargifyNET.ChargifyConnect.CreateSubscriptionUsingCoupon(System.String,ChargifyNET.ICustomerAttributes,ChargifyNET.ICreditCardAttributes,System.DateTime,System.String)">
            <summary>
            Create a new subscription and a new customer at the same time
            </summary>
            <param name="productHandle">The handle to the product</param>
            <param name="customerAttributes">The attributes for the new customer</param>
            <param name="creditCardAttributes">The credit card attributes</param>
            <param name="couponCode">The discount coupon code</param>
            <param name="nextBillingAt">Specify the time of first assessment</param>
            <returns>The new subscription object</returns>
        </member>
        <member name="M:ChargifyNET.ChargifyConnect.CreateSubscriptionUsingCoupon(System.String,ChargifyNET.ICustomerAttributes,ChargifyNET.ICreditCardAttributes,System.String,System.Int32,System.Int32)">
            <summary>
            Create a new subscription and a new customer at the same time
            </summary>
            <param name="productHandle">The handle to the product</param>
            <param name="customerAttributes">The attributes for the new customer</param>
            <param name="creditCardAttributes">The credit card attributes</param>
            <param name="couponCode">The discount coupon code</param>
            <param name="componentId">The component to allocate when creating the subscription</param>
            <param name="allocatedQuantity">The quantity to allocate of the component when creating the subscription</param>
            <returns>The xml describing the new subsscription</returns>
        </member>
        <member name="M:ChargifyNET.ChargifyConnect.CreateSubscription(System.String,System.Int64,System.String,System.Nullable{ChargifyNET.PaymentCollectionMethod})">
            <summary>
            Create a new subscription
            </summary>
            <param name="productHandle">The handle to the product</param>
            <param name="chargifyId">The Chargify ID of the customer</param>
            <param name="couponCode">The discount coupon code</param>
            <param name="paymentCollectionMethod">Optional, type of payment collection method</param>
            <returns>The xml describing the new subsscription</returns>
        </member>
        <member name="M:ChargifyNET.ChargifyConnect.CreateSubscription(System.String,System.Int64,System.String,System.Int32,System.Int32,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Create a new subscription
            </summary>
            <param name="productHandle">The handle to the product</param>
            <param name="chargifyId">The Chargify ID of the customer</param>
            <param name="fullNumber">The full number of the credit card</param>
            <param name="expirationMonth">The expritation month of the credit card</param>
            <param name="expirationYear">The expiration year of the credit card</param>
            <param name="cvv">The CVV for the credit card</param>
            <param name="billingAddress">The billing address</param>
            <param name="billingCity">The billing city</param>
            <param name="billingState">The billing state or province</param>
            <param name="billingZip">The billing zip code or postal code</param>
            <param name="billingCountry">The billing country</param>
            <param name="couponCode">The discount coupon code</param>
            <param name="firstName">The first name, as it appears on the credit card</param>
            <param name="lastName">The last name, as it appears on the credit card</param>
            <returns>The xml describing the new subsscription</returns>
        </member>
        <member name="M:ChargifyNET.ChargifyConnect.CreateSubscription(System.String,System.Int64,System.String,System.Int32,System.Int32,System.String,System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Create a new subscription
            </summary>
            <param name="productHandle">The handle to the product</param>
            <param name="chargifyId">The Chargify ID of the customer</param>
            <param name="fullNumber">The full number of the credit card</param>
            <param name="expirationMonth">The expritation month of the credit card</param>
            <param name="expirationYear">The expiration year of the credit card</param>
            <param name="cvv">The CVV for the credit card</param>
            <param name="billingAddress">The billing address</param>
            <param name="billingCity">The billing city</param>
            <param name="billingState">The billing state or province</param>
            <param name="billingZip">The billing zip code or postal code</param>
            <param name="billingCountry">The billing country</param>
            <param name="couponCode">The discount coupon code</param>
            <returns>The xml describing the new subsscription</returns>
        </member>
        <member name="M:ChargifyNET.ChargifyConnect.CreateSubscription(System.String,System.String,System.String)">
            <summary>
            Create a new subscription
            </summary>
            <param name="productHandle">The handle to the product</param>
            <param name="systemId">The System ID of the customer</param>
            <param name="couponCode">The discount coupon code</param>
            <returns>The xml describing the new subsscription</returns>
        </member>
        <member name="M:ChargifyNET.ChargifyConnect.CreateSubscription(System.String,System.String,System.String,System.Int32,System.Int32,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Create a new subscription
            </summary>
            <param name="productHandle">The handle to the product</param>
            <param name="systemId">The System ID of the customer</param>
            <param name="fullNumber">The full number of the credit card</param>
            <param name="expirationMonth">The expritation month of the credit card</param>
            <param name="expirationYear">The expiration year of the credit card</param>
            <param name="cvv">The CVV for the credit card</param>
            <param name="billingAddress">The billing address</param>
            <param name="billingCity">The billing city</param>
            <param name="billingState">The billing state or province</param>
            <param name="billingZip">The billing zip code or postal code</param>
            <param name="billingCountry">The billing country</param>
            <param name="couponCode">The discount coupon code</param>
            <param name="firstName">The first name, as listed on the credit card</param>
            <param name="lastName">The last name, as listed on the credit card</param>
            <returns>The xml describing the new subsscription</returns>
        </member>
        <member name="M:ChargifyNET.ChargifyConnect.CreateSubscription(System.String,System.String,System.String,System.Int32,System.Int32,System.String,System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Create a new subscription
            </summary>
            <param name="productHandle">The handle to the product</param>
            <param name="systemId">The System ID of the customer</param>
            <param name="fullNumber">The full number of the credit card</param>
            <param name="expirationMonth">The expritation month of the credit card</param>
            <param name="expirationYear">The expiration year of the credit card</param>
            <param name="cvv">The CVV for the credit card</param>
            <param name="billingAddress">The billing address</param>
            <param name="billingCity">The billing city</param>
            <param name="billingState">The billing state or province</param>
            <param name="billingZip">The billing zip code or postal code</param>
            <param name="billingCountry">The billing country</param>
            <param name="couponCode">The discount coupon code</param>
            <returns>The xml describing the new subsscription</returns>
        </member>
        <member name="M:ChargifyNET.ChargifyConnect.CreateSubscription(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.DateTime,System.Int32)">
            <summary>
            Create a new subscription
            </summary>
            <param name="productHandle">The handle to the product</param>
            <param name="newSystemId">The reference field value of the customer</param>
            <param name="firstName">The first name of the customer</param>
            <param name="lastName">The last name of the customer</param>
            <param name="emailAddress">The email address of the customer</param>
            <param name="phone">The phone number of the customer</param>
            <param name="organization">The customer's organization</param>
            <param name="couponCode">The discount coupon code</param>
            <param name="nextBillingAt">The next date that the billing should be processed (DateTime.Min if unspecified)</param>
            <param name="paymentProfileId">The id of the payment profile to use when creating the subscription (existing data)</param>
            <returns>The xml describing the new subsscription</returns>
        </member>
        <member name="M:ChargifyNET.ChargifyConnect.CreateSubscription(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.DateTime,ChargifyNET.IPaymentProfileAttributes,System.Nullable{ChargifyNET.PaymentCollectionMethod})">
            <summary>
            Create a new subscription
            </summary>
            <param name="productHandle">The handle to the product</param>
            <param name="newSystemId">The reference field value of the customer</param>
            <param name="firstName">The first name of the customer</param>
            <param name="lastName">The last name of the customer</param>
            <param name="emailAddress">The email address of the customer</param>
            <param name="phone">The phone number of the customer</param>
            <param name="organization">The customer's organization</param>
            <param name="couponCode">The discount coupon code</param>
            <param name="nextBillingAt">The next date that the billing should be processed</param>
            <param name="paymentProfile">The paymentProfile object to use when creating the subscription (existing data)</param>
            <param name="paymentCollectionMethod">The type of subscription, recurring (automatic) billing, or invoice (if applicable)</param>
            <returns>The xml describing the new subsscription</returns>
        </member>
        <member name="M:ChargifyNET.ChargifyConnect.CreateSubscription(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Int32,System.Int32,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Int32,System.Int32)">
            <summary>
            Create a new subscription and a new customer at the same time
            </summary>
            <param name="productHandle">The handle to the product</param>
            <param name="newSystemId">The system ID for the new customer</param>
            <param name="firstName">The first name of the new customer</param>
            <param name="lastName">The last nameof the new customer</param>
            <param name="emailAddress">The email address for the new customer</param>
            <param name="phone">The phone number for the customer</param>
            <param name="organization">The organization of the new customer</param>
            <param name="vatNumber">The value added tax number</param>
            <param name="shippingAddress">The shipping address of the customer</param>
            <param name="shippingCity">The shipping city of the customer</param>
            <param name="shippingState">The shipping state of the customer</param>
            <param name="shippingZip">The shipping zip of the customer</param>
            <param name="shippingCountry">The shipping country of the customer</param>
            <param name="fullNumber">The full number of the credit card</param>
            <param name="expirationMonth">The expritation month of the credit card</param>
            <param name="expirationYear">The expiration year of the credit card</param>
            <param name="cvv">The CVV for the credit card</param>
            <param name="billingAddress">The billing address</param>
            <param name="billingCity">The billing city</param>
            <param name="billingState">The billing state or province</param>
            <param name="billingZip">The billing zip code or postal code</param>
            <param name="billingCountry">The billing country</param>
            <param name="couponCode">The discount coupon code</param>
            <param name="componentId">The component to add while creating the subscription</param>
            <param name="allocatedQuantity">The quantity of the component to allocate when creating the component usage for the new subscription</param>
            <returns>The xml describing the new subsscription</returns>
        </member>
        <member name="M:ChargifyNET.ChargifyConnect.UpdateSubscriptionCreditCard(ChargifyNET.ISubscription,ChargifyNET.ICreditCardAttributes)">
            <summary>
            Update the credit card information for an existing subscription
            </summary>
            <param name="subscription">The subscription to update credit card info for</param>
            <param name="creditCardAttributes">The attributes for the updated credit card</param>
            <returns>The new subscription resulting from the change</returns>
        </member>
        <member name="M:ChargifyNET.ChargifyConnect.UpdateSubscriptionCreditCard(System.Int32,ChargifyNET.ICreditCardAttributes)">
            <summary>
            Update the credit card information for an existing subscription
            </summary>
            <param name="subscriptionId">The ID of the suscription to update</param>
            <param name="creditCardAttributes">The attributes for the update credit card</param>
            <returns>The new subscription resulting from the change</returns>
        </member>
        <member name="M:ChargifyNET.ChargifyConnect.UpdateSubscriptionCreditCard(ChargifyNET.ISubscription,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Update the credit card information for an existing subscription
            </summary>
            <param name="subscription">The subscription to update credit card info for</param>
            <param name="fullNumber">The full number of the credit card (optional - set to null if not required)</param>
            <param name="expirationMonth">The expiration month of the credit card (optional - set to null if not required)</param>
            <param name="expirationYear">The expiration year of the credit card (optional - set to null if not required)</param>
            <param name="cvv">The CVV for the credit card (optional - set to null if not required)</param>
            <param name="billingAddress">The billing address (optional - set to null if not required)</param>
            <param name="billingCity">The billing city (optional - set to null if not required)</param>
            <param name="billingState">The billing state or province (optional - set to null if not required)</param>
            <param name="billingZip">The billing zip code or postal code (optional - set to null if not required)</param>
            <param name="billingCountry">The billing country (optional - set to null if not required)</param>
            <returns>The new subscription resulting from the change</returns>
        </member>
        <member name="M:ChargifyNET.ChargifyConnect.UpdateSubscriptionCreditCard(System.Int32,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Update the credit card information for an existing subscription
            </summary>
            <param name="subscriptionId">The ID of the suscription to update</param>
            <param name="fullNumber">The full number of the credit card (optional - set to null if not required)</param>
            <param name="expirationMonth">The expiration month of the credit card (optional - set to null if not required)</param>
            <param name="expirationYear">The expiration year of the credit card (optional - set to null if not required)</param>
            <param name="cvv">The CVV for the credit card (optional - set to null if not required)</param>
            <param name="billingAddress">The billing address (optional - set to null if not required)</param>
            <param name="billingCity">The billing city (optional - set to null if not required)</param>
            <param name="billingState">The billing state or province (optional - set to null if not required)</param>
            <param name="billingZip">The billing zip code or postal code (optional - set to null if not required)</param>
            <param name="billingCountry">The billing country (optional - set to null if not required)</param>
            <returns>The new subscription resulting from the change</returns>
        </member>
        <member name="M:ChargifyNET.ChargifyConnect.UpdateSubscriptionCreditCard(System.Int32,System.String,System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Update the credit card information for an existing subscription
            </summary>
            <param name="subscriptionId">The ID of the suscription to update</param>
            <param name="firstName">The billing first name (first name on the card)</param>
            <param name="lastName">The billing last name (last name on the card)</param>
            <param name="fullNumber">The full number of the credit card (optional - set to null if not required)</param>
            <param name="expirationMonth">The expiration month of the credit card (optional - set to null if not required)</param>
            <param name="expirationYear">The expiration year of the credit card (optional - set to null if not required)</param>
            <param name="cvv">The CVV for the credit card (optional - set to null if not required)</param>
            <param name="billingAddress">The billing address (optional - set to null if not required)</param>
            <param name="billingCity">The billing city (optional - set to null if not required)</param>
            <param name="billingState">The billing state or province (optional - set to null if not required)</param>
            <param name="billingZip">The billing zip code or postal code (optional - set to null if not required)</param>
            <param name="billingCountry">The billing country (optional - set to null if not required)</param>
            <returns>The new subscription resulting from the change</returns>
        </member>
        <member name="M:ChargifyNET.ChargifyConnect.UpdateTheSubscriptionCreditCard(System.Int32,System.String,System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Method to update the payment profile
            </summary>
            <param name="subscriptionId">The subscription to update</param>
            <param name="firstName">The billing first name</param>
            <param name="lastName">The billing last name</param>
            <param name="fullNumber">The credit card number</param>
            <param name="expirationMonth">The expiration month</param>
            <param name="expirationYear">The expiration year</param>
            <param name="cvv">The CVV as written on the back of the card</param>
            <param name="billingAddress">The billing address</param>
            <param name="billingCity">The billing city</param>
            <param name="billingState">The billing state</param>
            <param name="billingZip">The billing zip/postal code</param>
            <param name="billingCountry">The billing country</param>
            <returns>The updated subscription</returns>
        </member>
        <member name="M:ChargifyNET.ChargifyConnect.UpdateSubscription(ChargifyNET.ISubscription)">
            <summary>
            Update the specified chargify subscription
            </summary>
            <param name="subscription">The subscription to update</param>
            <returns>The updated subscriptionn, null otherwise.</returns>
        </member>
        <member name="M:ChargifyNET.ChargifyConnect.MigrateSubscriptionProduct(ChargifyNET.ISubscription,ChargifyNET.IProduct,System.Boolean,System.Boolean)">
            <summary>
            Method to change the subscription product WITH proration.
            </summary>
            <param name="subscription">The subscription to migrate</param>
            <param name="product">The product to migrate the subscription to</param>
            <param name="includeTrial">Boolean, default false. If true, the customer will migrate to the new product
            if one is available. If false, the trial period will be ignored.</param>
            <param name="includeInitialCharge">Boolean, default false. If true, initial charges will be assessed.
            If false, initial charges will be ignored.</param>
            <returns></returns>
        </member>
        <member name="M:ChargifyNET.ChargifyConnect.MigrateSubscriptionProduct(System.Int32,ChargifyNET.IProduct,System.Boolean,System.Boolean)">
            <summary>
            Method to change the subscription product WITH proration.
            </summary>
            <param name="subscriptionId">The subscription to migrate</param>
            <param name="product">The product to migrate to</param>
            <param name="includeTrial">Boolean, default false. If true, the customer will migrate to the new product
            if one is available. If false, the trial period will be ignored.</param>
            <param name="includeInitialCharge">Boolean, default false. If true, initial charges will be assessed.
            If false, initial charges will be ignored.</param>
            <returns>The completed subscription if migrated successfully, null otherwise.</returns>
        </member>
        <member name="M:ChargifyNET.ChargifyConnect.MigrateSubscriptionProduct(ChargifyNET.ISubscription,System.String,System.Boolean,System.Boolean)">
            <summary>
            Method to change the subscription product WITH proration.
            </summary>
            <param name="subscription">The subscription to migrate</param>
            <param name="productHandle">The product handle of the product to migrate to</param>
            <param name="includeTrial">Boolean, default false. If true, the customer will migrate to the new product
            if one is available. If false, the trial period will be ignored.</param>
            <param name="includeInitialCharge">Boolean, default false. If true, initial charges will be assessed.
            If false, initial charges will be ignored.</param>
            <returns>The completed subscription if migrated successfully, null otherwise.</returns>
        </member>
        <member name="M:ChargifyNET.ChargifyConnect.MigrateSubscriptionProduct(System.Int32,System.String,System.Boolean,System.Boolean)">
            <summary>
            Method to change the subscription product WITH proration.
            </summary>
            <param name="subscriptionId">The subscription to migrate</param>
            <param name="productHandle">The product handle of the product to migrate to</param>
            <param name="includeTrial">Boolean, default false. If true, the customer will migrate to the new product
            if one is available. If false, the trial period will be ignored.</param>
            <param name="includeInitialCharge">Boolean, default false. If true, initial charges will be assessed.
            If false, initial charges will be ignored.</param>
            <returns>The completed subscription if migrated successfully, null otherwise.</returns>
        </member>
        <member name="M:ChargifyNET.ChargifyConnect.EditSubscriptionProduct(ChargifyNET.ISubscription,ChargifyNET.IProduct,System.Nullable{System.Boolean})">
            <summary>
            Update the product information for an existing subscription
            </summary>
            <remarks>Does NOT prorate. Use MigrateSubscriptionProduct to get proration to work.</remarks>
            <param name="subscription">The suscription to update</param>
            <param name="product">The new product</param>
            <param name="productChangeDelayed">Optional, determines if the product change should be done immediately or at the time of assessment.</param>
            <returns>The new subscription resulting from the change</returns>
        </member>
        <member name="M:ChargifyNET.ChargifyConnect.EditSubscriptionProduct(System.Int32,ChargifyNET.IProduct,System.Nullable{System.Boolean})">
            <summary>
            Update the product information for an existing subscription
            </summary>
            <remarks>Does NOT prorate. Use MigrateSubscriptionProduct to get proration to work.</remarks>
            <param name="subscriptionId">The ID of the suscription to update</param>
            <param name="product">The new product</param>
            <param name="productChangeDelayed">Optional, determines if the product change should be done immediately or at the time of assessment.</param>
            <returns>The new subscription resulting from the change</returns>
        </member>
        <member name="M:ChargifyNET.ChargifyConnect.EditSubscriptionProduct(ChargifyNET.ISubscription,System.String,System.Nullable{System.Boolean})">
            <summary>
            Update the product information for an existing subscription
            </summary>
            <remarks>Does NOT prorate. Use MigrateSubscriptionProduct to get proration to work.</remarks>
            <param name="subscription">The suscription to update</param>
            <param name="productHandle">The handle to the new product</param>
            <param name="productChangeDelayed">Optional, determines if the product change should be done immediately or at the time of assessment.</param>
            <returns>The new subscription resulting from the change</returns>
        </member>
        <member name="M:ChargifyNET.ChargifyConnect.EditSubscriptionProduct(System.Int32,System.String,System.Nullable{System.Boolean})">
            <summary>
            Update the product information for an existing subscription
            </summary>
            <remarks>Does NOT prorate. Use MigrateSubscriptionProduct to get proration to work.</remarks>
            <param name="subscriptionId">The ID of the suscription to update</param>
            <param name="productHandle">The handle to the new product</param>
            <param name="productChangeDelayed">Optional, determines if the product change should be done immediately or at the time of assessment.</param>
            <returns>The new subscription resulting from the change</returns>
        </member>
        <member name="M:ChargifyNET.ChargifyConnect.CancelDelayedProductChange(System.Int32)">
            <summary>
            Change the delayed product, or cancel by setting it null
            </summary>
            <param name="subscriptionId">The id of the subscription</param>
            <returns>The subscription</returns>
        </member>
        <member name="M:ChargifyNET.ChargifyConnect.UpdateSubscription(System.Int32,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Update a subscription changing customer, product and credit card information at the same time
            </summary>
            <param name="subscriptionId">The ID of the subscription to update</param>
            <param name="productHandle">The handle to the product (optional - set to null if not required)</param>
            <param name="systemId">The system ID for the customer (optional - set to Guid.Empty if not required)</param>
            <param name="firstName">The first name of the new customer (optional - set to null if not required)</param>
            <param name="lastName">The last name of the new customer (optional - set to null if not required)</param>
            <param name="emailAddress">The email address for the new customer (optional - set to null if not required)</param>
            <param name="phone">The phone number of the customer (optional - set to null if not required)</param>
            <param name="organization">The organization of the new customer (optional - set to null if not required)</param>
            <param name="fullNumber">The full number of the credit card (optional - set to null if not required)</param>
            <param name="expirationMonth">The expritation month of the credit card (optional - set to null if not required)</param>
            <param name="expirationYear">The expiration year of the credit card (optional - set to null if not required)</param>
            <param name="cvv">The CVV for the credit card (optional - set to null if not required)</param>
            <param name="billingAddress">The billing address (optional - set to null if not required)</param>
            <param name="billingCity">The billing city (optional - set to null if not required)</param>
            <param name="billingState">The billing state or province (optional - set to null if not required)</param>
            <param name="billingZip">The billing zip code or postal code (optional - set to null if not required)</param>
            <param name="billingCountry">The billing country (optional - set to null if not required)</param>
            <returns>The xml describing the new subsscription</returns>
        </member>
        <member name="M:ChargifyNET.ChargifyConnect.UpdateBillingDateForSubscription(System.Int32,System.DateTime)">
            <summary>
            Method to allow users to change the next_assessment_at date
            </summary>
            <param name="subscriptionId">The subscription to modify</param>
            <param name="nextBillingAt">The date to next bill the customer</param>
            <returns>Subscription if successful, null otherwise.</returns>
        </member>
        <member name="M:ChargifyNET.ChargifyConnect.UpdateDelayedCancelForSubscription(System.Int32,System.Boolean,System.String)">
            <summary>
            Method to allow users to change the cancel_at_end_of_period flag
            </summary>
            <param name="subscriptionId">The subscription to modify</param>
            <param name="cancelAtEndOfPeriod">True if the subscription should cancel at the end of the current period</param>
            <param name="cancellationMessage">The reason for cancelling the subscription</param>
            <returns>Subscription if successful, null otherwise.</returns>
        </member>
        <member name="M:ChargifyNET.ChargifyConnect.ResetSubscriptionBalance(System.Int32)">
            <summary>
            Method for reseting a subscription balance to zero (removes outstanding balance).
            Useful when reactivating subscriptions, and making sure not to charge the user
            their existing balance when then cancelled.
            </summary>
            <param name="subscriptionId">The ID of the subscription to modify.</param>
            <returns>True if successful, false otherwise.</returns>
        </member>
        <member name="M:ChargifyNET.ChargifyConnect.UpdatePaymentCollectionMethod(System.Int32,ChargifyNET.PaymentCollectionMethod)">
            <summary>
            Update the collection method of the subscription
            </summary>
            <param name="subscriptionId">The ID of the subscription of who's collection method should be updated</param>
            <param name="paymentCollectionMethod">The collection method to set</param>
            <returns>The full details of the updated subscription</returns>
        </member>
        <member name="M:ChargifyNET.ChargifyConnect.PauseSubscription(System.Int32,System.Nullable{System.DateTime})">
            <summary>
            This will place the subscription in the on_hold state and it will not renew.
            </summary>
            <param name="subscriptionId">The (chargify) id of the subscription</param>
            <param name="automaticResumeDate">The date the subscription will automatically resume, if applicable</param>
            <returns>The subscription data, if successful</returns>
            <remarks>https://reference.chargify.com/v1/subscriptions/hold-subscription</remarks>
        </member>
        <member name="M:ChargifyNET.ChargifyConnect.ResumeSubscription(System.Int32)">
            <summary>
            Resume a paused (on-hold) subscription. If the normal next renewal date has not passed,
            the subscription will return to active and will renew on that date. Otherwise, it will
            behave like a reactivation, setting the billing date to 'now' and charging the subscriber.
            </summary>
            <param name="subscriptionId">The (Chargify) id of the subscription</param>
            <returns>The subscription data, if successful</returns>
            <remarks>https://reference.chargify.com/v1/subscriptions/resume-subscription</remarks>
        </member>
        <member name="M:ChargifyNET.ChargifyConnect.CreateSubscriptionPreview(ChargifyNET.ISubscriptionCreateOptions)">
            <summary>
            Return a preview of charges for a subscription creation
            </summary>
            <param name="options"></param>
            <returns></returns>
        </member>
        <member name="M:ChargifyNET.ChargifyConnect.SetSubscriptionOverride(System.Int32,ChargifyNET.ISubscriptionOverride)">
            <summary>
            This API endpoint allows you to set certain subscription fields that are usually managed for you automatically. Some of the fields can be set via the normal Subscriptions Update API, but others can only be set using this endpoint.
            </summary>
            <param name="subscriptionId"></param>
            <param name="overrideDetails"></param>
            <returns>The details returned by Chargify</returns>
        </member>
        <member name="M:ChargifyNET.ChargifyConnect.SetSubscriptionOverride(System.Int32,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.String,System.Nullable{System.DateTime})">
            <summary>
            This API endpoint allows you to set certain subscription fields that are usually managed for you automatically. Some of the fields can be set via the normal Subscriptions Update API, but others can only be set using this endpoint.
            </summary>
            <param name="subscriptionId"></param>
            <param name="activatedAt"></param>
            <param name="canceledAt"></param>
            <param name="cancellationMessage"></param>
            <param name="expiresAt"></param>
            <returns>The details returned by Chargify</returns>
        </member>
        <member name="M:ChargifyNET.ChargifyConnect.PreviewMigrateSubscriptionProduct(System.Int32,System.Int32,System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean})">
            <summary>
            Return a preview of charges for a subscription product migrations
            </summary>
            <param name="subscriptionId">SubscriptionID</param>
            <param name="productId">ProductID</param>
            <param name="includeCoupons">Should the migration preview consider subscription coupons?</param>
            <param name="includeInitialCharge">Should the migration preview consider a setup fee</param>
            <param name="includeTrial">Should the migration preview consider the product trial?</param>
            <returns></returns>
        </member>
        <member name="M:ChargifyNET.ChargifyConnect.PreviewMigrateSubscriptionProduct(System.Int32,System.Int32)">
            <summary>
            Return a preview of charges for a subscription product migrations
            </summary>
            <param name="subscriptionId">Active Subscription</param>
            <param name="productId">Active Product</param>
            <returns>The migration preview data, if able. Null otherwise.</returns>
        </member>
        <member name="M:ChargifyNET.ChargifyConnect.PreviewMigrateSubscriptionProduct(ChargifyNET.ISubscription,ChargifyNET.IProduct)">
            <summary>
            Return a preview of charges for a subscription product migrations
            </summary>
            <param name="subscription">Active Subscription</param>
            <param name="product">Active Product</param>
            <returns>The migration preview data, if able. Null otherwise.</returns>
        </member>
        <member name="M:ChargifyNET.ChargifyConnect.LoadCoupon(System.Int32,System.Int32)">
            <summary>
            Method for retrieving information about a coupon using the ID of that coupon.
            </summary>
            <param name="productFamilyId">The ID of the product family that the coupon belongs to</param>
            <param name="couponId">The ID of the coupon</param>
            <returns>The object if found, null otherwise.</returns>
        </member>
        <member name="M:ChargifyNET.ChargifyConnect.GetAllCoupons(System.Int32)">
            <summary>
            Method for retrieving information about a coupon using the ID of that coupon.
            </summary>
            <param name="productFamilyID">The ID of the product family that the coupon belongs to</param>
            <returns>A dictionary of objects if found, empty collection otherwise.</returns>
        </member>
        <member name="M:ChargifyNET.ChargifyConnect.GetCouponUsage(System.Int32)">
            <summary>
            Method for retrieving information about a coupon usage using the ID of that coupon.
            </summary>
            <param name="couponId">The ID of the coupon</param>
            <returns>The object if found, null otherwise.</returns>
        </member>
        <member name="M:ChargifyNET.ChargifyConnect.FindCoupon(System.Int32,System.String)">
            <summary>
            Retrieve the coupon corresponding to the coupon code, useful for coupon validation.
            </summary>
            <param name="productFamilyId">The ID of the product family the coupon belongs to</param>
            <param name="couponCode">The code used to represent the coupon</param>
            <returns>The object if found, otherwise null.</returns>
        </member>
        <member name="M:ChargifyNET.ChargifyConnect.AddCoupon(System.Int32,System.String)">
            <summary>
            Method to add a coupon to a subscription using the API
            </summary>
            <param name="subscriptionId">The ID of the subscription to modify</param>
            <param name="couponCode">The code of the coupon to apply to the subscription</param>
            <returns>The subscription details if successful, null otherwise.</returns>
        </member>
        <member name="M:ChargifyNET.ChargifyConnect.RemoveCoupon(System.Int32,System.String)">
            <summary>
            Method to remove a coupon to a subscription using the API
            </summary>
            <param name="subscriptionID">The ID of the subscription to modify</param>
            <param name="couponCode">The code of the coupon to remove from the subscription</param>
            <returns>True if successful, false otherwise.</returns>
        </member>
        <member name="M:ChargifyNET.ChargifyConnect.CreateCoupon(ChargifyNET.ICoupon,System.Int32)">
            <summary>
            Create a new one-time credit
            </summary>
            <param name="coupon">The coupon parameters</param>
            <param name="productFamilyId">The ID of the product family to add this coupon to.</param>
            <returns>The object if successful, null otherwise.</returns>
        </member>
        <member name="M:ChargifyNET.ChargifyConnect.UpdateCoupon(ChargifyNET.ICoupon)">
            <summary>
            Update an existing coupon
            </summary>
            <param name="coupon">Coupon object</param>
            <returns>The updated coupon if successful, null otherwise.</returns>
        </member>
        <member name="M:ChargifyNET.ChargifyConnect.BuildCouponXml(System.Int32,System.String,System.String,System.String,System.Decimal,System.Decimal,System.Boolean,System.Boolean,System.Int32,System.DateTime)">
            <summary>
            Builds the coupon XML based on all the coupon values entered.
            </summary>
            <param name="productFamilyId">The id of the product family the coupon should belong to</param>
            <param name="name">The name of the coupon</param>
            <param name="code">The code for the coupon</param>
            <param name="description">The description of the coupons effect</param>
            <param name="amount">The amount of the coupon</param>
            <param name="percentage">If percentage based, the percentage the coupon affects.</param>
            <param name="allowNegativeBalance">If true, credits will carry forward to the next billing. Otherwise discount may not exceed total charges.</param>
            <param name="recurring">This this a recurring coupon?</param>
            <param name="durationPeriodCount">How long does the coupon last?</param>
            <param name="endDate">At what point will the coupon no longer be valid?</param>
            <returns></returns>
        </member>
        <member name="M:ChargifyNET.ChargifyConnect.CreateCharge(System.Int32,ChargifyNET.IChargeCreateOptions)">
            <summary>
            Create a new one-time charge
            </summary>
            <param name="subscriptionId">The subscription that will be charged</param>
            <param name="options">The charge parameters</param>
            <returns></returns>
        </member>
        <member name="M:ChargifyNET.ChargifyConnect.CreateCharge(System.Int32,ChargifyNET.ICharge)">
            <summary>
            Create a new one-time charge
            </summary>
            <param name="subscriptionId">The subscription that will be charged</param>
            <param name="charge">The charge parameters</param>
            <returns></returns>
        </member>
        <member name="M:ChargifyNET.ChargifyConnect.CreateCharge(System.Int32,System.Decimal,System.String,System.Boolean,System.Boolean)">
            <summary>
            Create a new one-time charge, with options
            </summary>
            <param name="subscriptionId">The subscription that will be charged</param>
            <param name="amount">The amount to charge the customer</param>
            <param name="memo">A description of the charge</param>
            <param name="delayCharge">(Optional) Should the charge be billed during the next assessment? Default = false</param>
            <param name="useNegativeBalance">(Optional) Should the subscription balance be taken into consideration? Default = true</param>
            <returns>The charge details</returns>
        </member>
        <member name="M:ChargifyNET.ChargifyConnect.CreateCredit(System.Int32,ChargifyNET.ICredit)">
            <summary>
            Create a new one-time credit
            </summary>
            <param name="subscriptionId">The subscription that will be credited</param>
            <param name="credit">The credit parameters</param>
            <returns>The object if successful, null otherwise.</returns>
        </member>
        <member name="M:ChargifyNET.ChargifyConnect.CreateCredit(System.Int32,System.Decimal,System.String)">
            <summary>
            Create a new one-time credit
            </summary>
            <param name="subscriptionId">The subscription that will be credited</param>
            <param name="amount">The amount to credit the customer</param>
            <param name="memo">A note regarding the reason for the credit</param>
            <returns>The object if successful, null otherwise.</returns>
        </member>
        <member name="M:ChargifyNET.ChargifyConnect.FormatPriceXml(System.Collections.Generic.IEnumerable{ChargifyDotNet.ComponentPrice},System.Boolean)">
            <summary>
            Format ComponentPrice Lists
            </summary>
            <param name="prices">The prices to format</param>
            <param name="isJson">Is the eventual result going to be JSON? We need to slightly adjust if that's the case</param>
            <returns>The xml formatted prices string</returns>
        </member>
        <member name="M:ChargifyNET.ChargifyConnect.UpdateComponentAllocationForSubscription(System.Int32,System.Int32,System.Int32)">
            <summary>
            Method to update the allocated amount of a component for a subscription
            </summary>
            <param name="subscriptionId">The ID of the subscription to modify the allocation for</param>
            <param name="componentId">The ID of the component</param>
            <param name="newAllocatedQuantity">The amount of component to allocate to the subscription</param>
            <returns>The ComponentAttributes object with UnitBalance filled in, null otherwise.</returns>
        </member>
        <member name="M:ChargifyNET.ChargifyConnect.GetComponentInfoForSubscription(System.Int32,System.Int32)">
            <summary>
            Method to retrieve the current information (including allocation) of a component against a subscription
            </summary>
            <param name="subscriptionId">The ID of the subscription in question</param>
            <param name="componentId">The ID of the component</param>
            <returns>The ComponentAttributes object, null otherwise.</returns>
        </member>
        <member name="M:ChargifyNET.ChargifyConnect.GetComponentsForSubscription(System.Int32)">
            <summary>
            Returns all components "attached" to that subscription.
            </summary>
            <param name="subscriptionId">The ID of the subscription to query about</param>
            <returns>A dictionary of components, if applicable.</returns>
        </member>
        <member name="M:ChargifyNET.ChargifyConnect.GetComponentsForProductFamily(System.Int64,System.Boolean)">
            <summary>
            Method for getting a list of components for a specific product family
            </summary>
            <param name="chargifyId">The product family ID</param>
            <param name="includeArchived">Filter flag for archived components</param>
            <returns>A dictionary of components if there are results, null otherwise.</returns>
        </member>
        <member name="M:ChargifyNET.ChargifyConnect.GetComponentsForProductFamily(System.Int64)">
            <summary>
            Method for getting a list of components for a specific product family
            </summary>
            <param name="chargifyId">The product family ID</param>
            <returns>A dictionary of components if there are results, null otherwise.</returns>
        </member>
        <member name="M:ChargifyNET.ChargifyConnect.GetComponentList(System.Int32,System.Int32)">
            <summary>
            Method for getting a list of component usages for a specific subscription
            </summary>
            <param name="subscriptionId">The subscription ID to examine</param>
            <param name="componentId">The ID of the component to examine</param>
            <returns>A dictionary of usages if there are results, null otherwise.</returns>
        </member>
        <member name="M:ChargifyNET.ChargifyConnect.AddUsage(System.Int32,System.Int32,System.Int32,System.String)">
            <summary>
            Method for adding a metered component usage to the subscription
            </summary>
            <param name="subscriptionId">The subscriptionID to modify</param>
            <param name="componentId">The ID of the (metered or quantity) component to add a usage of</param>
            <param name="quantity">The number of usages to add</param>
            <param name="memo">The memo for the usage</param>
            <returns>The usage added if successful, otherwise null.</returns>
        </member>
        <member name="M:ChargifyNET.ChargifyConnect.SetComponent(System.Int32,System.Int32,System.Boolean)">
            <summary>
            Method for turning on or off a component
            </summary>
            <param name="subscriptionId">The ID of the subscription to modify</param>
            <param name="componentId">The ID of the component (on/off only) to modify</param>
            <param name="setEnabled">True if wanting to turn the component "on", false otherwise.</param>
            <returns>IComponentAttributes object if successful, null otherwise.</returns>
        </member>
        <member name="M:ChargifyNET.ChargifyConnect.GetAllocationListForSubscriptionComponent(System.Int32,System.Int32,System.Nullable{System.Int32})">
            <summary>
            Returns the 50 most recent Allocations, ordered by most recent first.
            </summary>
            <param name="subscriptionId">The subscriptionID to scope this request</param>
            <param name="componentId">The componentID to scope this request</param>
            <param name="page">Pass an integer in the page parameter via the query string to access subsequent pages of 50 transactions</param>
            <returns>A dictionary of allocation objects keyed by ComponentID, or null.</returns>
        </member>
        <member name="M:ChargifyNET.ChargifyConnect.CreateComponentAllocation(System.Int32,System.Int32,ChargifyNET.ComponentAllocation)">
            <summary>
            Creates a new Allocation, setting the current allocated quantity for the component and recording a memo.
            </summary>
            <param name="subscriptionId"></param>
            <param name="componentId"></param>
            <param name="allocation"></param>
            <returns></returns>
        </member>
        <member name="M:ChargifyNET.ChargifyConnect.CreateComponentAllocation(System.Int32,System.Int32,System.Int32)">
            <summary>
            Creates a new Allocation, setting the current allocated quantity for the component and recording a memo.
            </summary>
            <param name="subscriptionId">The ID of the subscription to apply this quantity allocation to</param>
            <param name="componentId">The ID of the component to apply this quantity allocation to</param>
            <param name="quantity">The allocated quantity to which to set the line-items allocated quantity. This should always be an integer. For On/Off components, use 1 for on and 0 for off.</param>
            <returns></returns>
        </member>
        <member name="M:ChargifyNET.ChargifyConnect.CreateComponentAllocation(System.Int32,System.Int32,System.Int32,System.String)">
            <summary>
            Creates a new Allocation, setting the current allocated quantity for the component and recording a memo.
            </summary>
            <param name="subscriptionId">The ID of the subscription to apply this quantity allocation to</param>
            <param name="componentId">The ID of the component to apply this quantity allocation to</param>
            <param name="quantity">The allocated quantity to which to set the line-items allocated quantity. This should always be an integer. For On/Off components, use 1 for on and 0 for off.</param>
            <param name="memo">(optional) A memo to record along with the allocation</param>
            <returns></returns>
        </member>
        <member name="M:ChargifyNET.ChargifyConnect.CreateComponentAllocation(System.Int32,System.Int32,System.Int32,System.String,ChargifyNET.ComponentUpgradeProrationScheme,ChargifyNET.ComponentDowngradeProrationScheme)">
            <summary>
            Creates a new Allocation, setting the current allocated quantity for the component and recording a memo.
            </summary>
            <param name="subscriptionId">The ID of the subscription to apply this quantity allocation to</param>
            <param name="componentId">The ID of the component to apply this quantity allocation to</param>
            <param name="quantity">The allocated quantity to which to set the line-items allocated quantity. This should always be an integer. For On/Off components, use 1 for on and 0 for off.</param>
            <param name="memo">(optional) A memo to record along with the allocation</param>
            <param name="upgradeScheme">(optional) The scheme used if the proration is an upgrade. Defaults to the site setting if one is not provided.</param>
            <param name="downgradeScheme">(optional) The scheme used if the proration is a downgrade. Defaults to the site setting if one is not provided.</param>
            <returns>The component allocation object, null otherwise.</returns>
        </member>
        <member name="M:ChargifyNET.ChargifyConnect.BuildComponentAllocationXml(System.Int32,System.String,ChargifyNET.ComponentUpgradeProrationScheme,ChargifyNET.ComponentDowngradeProrationScheme)">
            <summary>
            Constructs the XML needed to create a component allocation
            </summary>
            <param name="quantity">The allocated quantity to which to set the line-items allocated quantity. This should always be an integer. For On/Off components, use 1 for on and 0 for off.</param>
            <param name="memo">(optional) A memo to record along with the allocation</param>
            <param name="upgradeScheme">(optional) The scheme used if the proration is an upgrade. Defaults to the site setting if one is not provided.</param>
            <param name="downgradeScheme">(optional) The scheme used if the proration is a downgrade. Defaults to the site setting if one is not provided.</param>
            <returns>The formatted XML</returns>
        </member>
        <member name="M:ChargifyNET.ChargifyConnect.GetTransactionList(System.Boolean)">
            <summary>
            Method for getting a list of transactions
            </summary>
            <param name="descending">Should the results in in descending order?</param>
            <returns>The dictionary of transaction records if successful, otherwise null.</returns>
        </member>
        <member name="M:ChargifyNET.ChargifyConnect.GetTransactionList(System.Collections.Generic.List{ChargifyNET.TransactionType},System.Boolean)">
            <summary>
            Method for getting a list of transactions
            </summary>
            <param name="kinds">A list of the types of transactions to return.</param>
            <param name="descending">Should the results in in descending order?</param>
            <returns>The dictionary of transaction records if successful, otherwise null.</returns>
        </member>
        <member name="M:ChargifyNET.ChargifyConnect.GetTransactionList(System.Collections.Generic.List{ChargifyNET.TransactionType},System.Int32,System.Int32,System.Boolean)">
            <summary>
            Method for getting a list of transactions
            </summary>
            <param name="kinds">A list of transaction types to return.</param>
            <param name="sinceId">Returns transactions with an ID greater than or equal to the one specified. Use int.MinValue to not specify a since_id.</param>
            <param name="maxId">Returns transactions with an id less than or equal to the one specified. Use int.MinValue to not specify a max_id.</param>
            <param name="descending">Should the results in in descending order?</param>
            <returns>The dictionary of transaction records if successful, otherwise null.</returns>
        </member>
        <member name="M:ChargifyNET.ChargifyConnect.GetTransactionList(System.Collections.Generic.List{ChargifyNET.TransactionType},System.Int32,System.Int32,System.DateTime,System.DateTime,System.Boolean)">
            <summary>
            Method for getting a list of transactions
            </summary>
            <param name="kinds">A list of transaction types to return.</param>
            <param name="sinceId">Returns transactions with an ID greater than or equal to the one specified. Use int.MinValue to not specify a since_id.</param>
            <param name="maxId">Returns transactions with an id less than or equal to the one specified. Use int.MinValue to not specify a max_id.</param>
            <param name="sinceDate">Returns transactions with a created_at date greater than or equal to the one specified. Use DateTime.MinValue to not specify a since_date.</param>
            <param name="untilDate">Returns transactions with a created_at date less than or equal to the one specified. Use DateTime.MinValue to not specify an until_date.</param>
            <param name="descending">Should the results in in descending order?</param>
            <returns>The dictionary of transaction records if successful, otherwise null.</returns>
        </member>
        <member name="M:ChargifyNET.ChargifyConnect.GetTransactionList(System.Int32,System.Int32,System.Boolean)">
            <summary>
            Method for getting a list of transactions
            </summary>
            <param name="page">The page number</param>
            <param name="perPage">The number of results per page (used for pagination)</param>
            <param name="descending">Should the results in in descending order?</param>
            <returns>The dictionary of transaction records if successful, otherwise null.</returns>
        </member>
        <member name="M:ChargifyNET.ChargifyConnect.GetTransactionList(System.Int32,System.Int32,System.Collections.Generic.List{ChargifyNET.TransactionType},System.Boolean)">
            <summary>
            Method for getting a list of transactions
            </summary>
            <param name="page">The page number</param>
            <param name="perPage">The number of results per page (used for pagination)</param>
            <param name="kinds">A list of the types of transactions to return.</param>
            <param name="descending">Should the results in in descending order?</param>
            <returns>The dictionary of transaction records if successful, otherwise null.</returns>
        </member>
        <member name="M:ChargifyNET.ChargifyConnect.GetTransactionList(System.Int32,System.Int32,System.Collections.Generic.List{ChargifyNET.TransactionType},System.Int32,System.Int32,System.Boolean)">
            <summary>
            Method for getting a list of transactions
            </summary>
            <param name="page">The page number</param>
            <param name="perPage">The number of results per page (used for pagination)</param>
            <param name="kinds">A list of transaction types to return.</param>
            <param name="sinceId">Returns transactions with an ID greater than or equal to the one specified. Use int.MinValue to not specify a since_id.</param>
            <param name="maxId">Returns transactions with an id less than or equal to the one specified. Use int.MinValue to not specify a max_id.</param>
            <param name="descending">Should the results in in descending order?</param>
            <returns>The dictionary of transaction records if successful, otherwise null.</returns>
        </member>
        <member name="M:ChargifyNET.ChargifyConnect.GetTransactionList(System.Int32,System.Int32,System.Collections.Generic.List{ChargifyNET.TransactionType},System.Int32,System.Int32,System.DateTime,System.DateTime,System.Boolean)">
            <summary>
            Method for getting a list of transactions
            </summary>
            <param name="page">The page number</param>
            <param name="perPage">The number of results per page (used for pagination)</param>
            <param name="kinds">A list of transaction types to return.</param>
            <param name="sinceId">Returns transactions with an ID greater than or equal to the one specified. Use int.MinValue to not specify a since_id.</param>
            <param name="maxId">Returns transactions with an id less than or equal to the one specified. Use int.MinValue to not specify a max_id.</param>
            <param name="sinceDate">Returns transactions with a created_at date greater than or equal to the one specified. Use DateTime.MinValue to not specify a since_date.</param>
            <param name="untilDate">Returns transactions with a created_at date less than or equal to the one specified. Use DateTime.MinValue to not specify an until_date.</param>
            <param name="descending">Should the results in in descending order?</param>
            <returns>The dictionary of transaction records if successful, otherwise null.</returns>
        </member>
        <member name="M:ChargifyNET.ChargifyConnect.GetTransactionsForSubscription(System.Int32)">
            <summary>
            Method for getting the list of transactions for a subscription
            </summary>
            <param name="subscriptionId">The subscriptionID to get a list of transactions for</param>
            <returns>A dictionary of transactions if successful, otherwise null.</returns>
        </member>
        <member name="M:ChargifyNET.ChargifyConnect.GetTransactionsForSubscription(System.Int32,System.Collections.Generic.List{ChargifyNET.TransactionType})">
            <summary>
            Method for getting the list of transactions for a subscription
            </summary>
            <param name="subscriptionId">The subscriptionID to get a list of transactions for</param>
            <param name="kinds">A list of the types of transactions to return.</param>
            <returns>A dictionary of transactions if successful, otherwise null.</returns>
        </member>
        <member name="M:ChargifyNET.ChargifyConnect.GetTransactionsForSubscription(System.Int32,System.Collections.Generic.List{ChargifyNET.TransactionType},System.Int32,System.Int32)">
            <summary>
            Method for getting the list of transactions for a subscription
            </summary>
            <param name="subscriptionId">The subscriptionID to get a list of transactions for</param>
            <param name="kinds">A list of the types of transactions to return.</param>
            <param name="sinceId">Returns transactions with an ID greater than or equal to the one specified. Use int.MinValue to not specify a since_id.</param>
            <param name="maxId">Returns transactions with an id less than or equal to the one specified. Use int.MinValue to not specify a max_id.</param>
            <returns>A dictionary of transactions if successful, otherwise null.</returns>
        </member>
        <member name="M:ChargifyNET.ChargifyConnect.GetTransactionsForSubscription(System.Int32,System.Collections.Generic.List{ChargifyNET.TransactionType},System.Int32,System.Int32,System.DateTime,System.DateTime)">
            <summary>
            Method for getting the list of transactions for a subscription
            </summary>
            <param name="subscriptionId">The subscriptionID to get a list of transactions for</param>
            <param name="kinds">A list of the types of transactions to return.</param>
            <param name="sinceId">Returns transactions with an ID greater than or equal to the one specified. Use int.MinValue to not specify a since_id.</param>
            <param name="maxId">Returns transactions with an id less than or equal to the one specified. Use int.MinValue to not specify a max_id.</param>
            <param name="sinceDate">Returns transactions with a created_at date greater than or equal to the one specified. Use DateTime.MinValue to not specify a since_date.</param>
            <param name="untilDate">Returns transactions with a created_at date less than or equal to the one specified. Use DateTime.MinValue to not specify an until_date.</param>
            <returns>A dictionary of transactions if successful, otherwise null.</returns>
        </member>
        <member name="M:ChargifyNET.ChargifyConnect.GetTransactionsForSubscription(System.Int32,System.Int32,System.Int32)">
            <summary>
            Method for getting the list of transactions for a subscription
            </summary>
            <param name="subscriptionId">The subscriptionID to get a list of transactions for</param>
            <param name="page">The page number</param>
            <param name="perPage">The number of results per page (used for pagination)</param>
            <returns>A dictionary of transactions if successful, otherwise null.</returns>
        </member>
        <member name="M:ChargifyNET.ChargifyConnect.GetTransactionsForSubscription(System.Int32,System.Int32,System.Int32,System.Collections.Generic.List{ChargifyNET.TransactionType})">
            <summary>
            Method for getting the list of transactions for a subscription
            </summary>
            <param name="subscriptionId">The subscriptionID to get a list of transactions for</param>
            <param name="page">The page number</param>
            <param name="perPage">The number of results per page (used for pagination)</param>
            <param name="kinds">A list of the types of transactions to return.</param>
            <returns>A dictionary of transactions if successful, otherwise null.</returns>
        </member>
        <member name="M:ChargifyNET.ChargifyConnect.GetTransactionsForSubscription(System.Int32,System.Int32,System.Int32,System.Collections.Generic.List{ChargifyNET.TransactionType},System.Int32,System.Int32)">
            <summary>
            Method for getting the list of transactions for a subscription
            </summary>
            <param name="subscriptionId">The subscriptionID to get a list of transactions for</param>
            <param name="page">The page number</param>
            <param name="perPage">The number of results per page (used for pagination)</param>
            <param name="kinds">A list of the types of transactions to return.</param>
            <param name="sinceId">Returns transactions with an ID greater than or equal to the one specified. Use int.MinValue to not specify a since_id.</param>
            <param name="maxId">Returns transactions with an id less than or equal to the one specified. Use int.MinValue to not specify a max_id.</param>
            <returns>A dictionary of transactions if successful, otherwise null.</returns>
        </member>
        <member name="M:ChargifyNET.ChargifyConnect.GetTransactionsForSubscription(System.Int32,System.Int32,System.Int32,System.Collections.Generic.List{ChargifyNET.TransactionType},System.Int32,System.Int32,System.DateTime,System.DateTime)">
            <summary>
            Method for getting the list of transactions for a subscription
            </summary>
            <param name="subscriptionId">The subscriptionID to get a list of transactions for</param>
            <param name="page">The page number</param>
            <param name="perPage">The number of results per page (used for pagination)</param>
            <param name="kinds">A list of the types of transactions to return.</param>
            <param name="sinceId">Returns transactions with an ID greater than or equal to the one specified. Use int.MinValue to not specify a since_id.</param>
            <param name="maxId">Returns transactions with an id less than or equal to the one specified. Use int.MinValue to not specify a max_id.</param>
            <param name="sinceDate">Returns transactions with a created_at date greater than or equal to the one specified. Use DateTime.MinValue to not specify a since_date.</param>
            <param name="untilDate">Returns transactions with a created_at date less than or equal to the one specified. Use DateTime.MinValue to not specify an until_date.</param>
            <returns>A dictionary of transactions if successful, otherwise null.</returns>
        </member>
        <member name="M:ChargifyNET.ChargifyConnect.LoadTransaction(System.Int32)">
            <summary>
            Load the requested transaction from Chargify
            </summary>
            <param name="id">The ID of the transaction</param>
            <returns>The transaction with the specified ID</returns>
        </member>
        <member name="M:ChargifyNET.ChargifyConnect.CreateRefund(System.Int32,System.Int32,System.Decimal,System.String)">
            <summary>
            Create a refund
            </summary>
            <param name="subscriptionId">The ID of the subscription to modify</param>
            <param name="paymentId">The ID of the payment that the credit will be applied to</param>
            <param name="amount">The amount (in dollars and cents) like 10.00 is $10.00</param>
            <param name="memo">A helpful explanation for the refund.</param>
            <returns>The IRefund object indicating successful, or unsuccessful.</returns>
        </member>
        <member name="M:ChargifyNET.ChargifyConnect.CreateRefund(System.Int32,System.Int32,System.Int32,System.String)">
            <summary>
            Create a refund
            </summary>
            <param name="subscriptionId">The ID of the subscription to modify</param>
            <param name="paymentId">The ID of the payment that the credit will be applied to</param>
            <param name="amountInCents">The amount (in cents only) like 100 is $1.00</param>
            <param name="memo">A helpful explanation for the refund.</param>
            <returns>The IRefund object indicating successful, or unsuccessful.</returns>
        </member>
        <member name="M:ChargifyNET.ChargifyConnect.LoadStatement(System.Int32)">
            <summary>
            Method for getting a specific statement
            </summary>
            <param name="statementId">The ID of the statement to retrieve</param>
            <returns>The statement if found, null otherwise.</returns>
        </member>
        <member name="M:ChargifyNET.ChargifyConnect.LoadStatementPDF(System.Int32)">
            <summary>
            Individual PDF Statements can be retrieved by using the Accept/Content-Type header application/pdf or appending .pdf as the format portion of the URL:
            </summary>
            <param name="statementId">The ID of the statement to retrieve the byte[] for</param>
            <returns>A byte[] of the PDF data, to be sent to the user in a download</returns>
        </member>
        <member name="M:ChargifyNET.ChargifyConnect.GetStatementIDs(System.Int32)">
            <summary>
            Method for getting a list of statment ids for a specific subscription
            </summary>
            <param name="subscriptionId">The ID of the subscription to retrieve the statements for</param>
            <returns>The list of statements, an empty dictionary otherwise.</returns>
        </member>
        <member name="M:ChargifyNET.ChargifyConnect.GetStatementIDs(System.Int32,System.Int32,System.Int32)">
            <summary>
            Method for getting a list of statment ids for a specific subscription
            </summary>
            <param name="subscriptionId">The ID of the subscription to retrieve the statements for</param>
            <param name="page">The page number to return</param>
            <param name="perPage">The number of results to return per page</param>
            <returns>The list of statements, an empty dictionary otherwise.</returns>
        </member>
        <member name="M:ChargifyNET.ChargifyConnect.GetStatementList(System.Int32)">
            <summary>
            Method for getting a list of statments for a specific subscription
            </summary>
            <param name="subscriptionId">The ID of the subscription to retrieve the statements for</param>
            <returns>The list of statements, an empty dictionary otherwise.</returns>
        </member>
        <member name="M:ChargifyNET.ChargifyConnect.GetStatementList(System.Int32,System.Int32,System.Int32)">
            <summary>
            Method for getting a list of statments for a specific subscription
            </summary>
            <param name="subscriptionId">The ID of the subscription to retrieve the statements for</param>
            <param name="page">The page number to return</param>
            <param name="perPage">The number of results to return per page</param>
            <returns>The list of statements, an empty dictionary otherwise.</returns>
        </member>
        <member name="M:ChargifyNET.ChargifyConnect.GetSiteStatistics">
            <summary>
            Method for getting the statstics of a Chargify site
            </summary>
            <returns>The site statistics if applicable.</returns>
        </member>
        <member name="M:ChargifyNET.ChargifyConnect.CreateAdjustment(System.Int32,System.Decimal,System.String)">
            <summary>
            Method for applying an adjustment to a subscription
            </summary>
            <param name="subscriptionId">The ID of the subscription to adjust</param>
            <param name="amount">The amount (in dollars and cents)</param>
            <param name="memo">A helpful explaination of the adjustment</param>
            <returns>The adjustment object if successful, null otherwise.</returns>
        </member>
        <member name="M:ChargifyNET.ChargifyConnect.CreateAdjustment(System.Int32,System.Decimal,System.String,ChargifyNET.AdjustmentMethod)">
            <summary>
            Method for applying an adjustment to a subscription
            </summary>
            <param name="subscriptionId">The ID of the subscription to adjust</param>
            <param name="amount">The amount (in dollars and cents)</param>
            <param name="memo">A helpful explaination of the adjustment</param>
            <param name="method">A string that toggles how the adjustment should be applied</param>
            <returns>The adjustment object if successful, null otherwise.</returns>
        </member>
        <member name="M:ChargifyNET.ChargifyConnect.CreateAdjustment(System.Int32,System.Int32,System.String)">
            <summary>
            Method for applying an adjustment to a subscription
            </summary>
            <param name="subscriptionId">The ID of the subscription to adjust</param>
            <param name="amountInCents">The amount (in cents)</param>
            <param name="memo">A helpful explaination of the adjustment</param>
            <returns>The adjustment object if successful, null otherwise.</returns>
        </member>
        <member name="M:ChargifyNET.ChargifyConnect.CreateAdjustment(System.Int32,System.Int32,System.String,ChargifyNET.AdjustmentMethod)">
            <summary>
            Method for applying an adjustment to a subscription
            </summary>
            <param name="subscriptionId">The ID of the subscription to adjust</param>
            <param name="amountInCents">The amount (in cents)</param>
            <param name="memo">A helpful explaination of the adjustment</param>
            <param name="method">A string that toggles how the adjustment should be applied</param>
            <returns>The adjustment object if successful, null otherwise.</returns>
        </member>
        <member name="M:ChargifyNET.ChargifyConnect.CreateAdjustment(System.Int32,System.Decimal,System.Int32,System.String,ChargifyNET.AdjustmentMethod)">
            <summary>
            Method for applying an adjustment to a subscription
            </summary>
            <param name="subscriptionId">The ID of the subscription to adjust</param>
            <param name="amount">The amount (in dollars and cents)</param>
            <param name="amountInCents">The amount (in cents)</param>
            <param name="memo">A helpful explaination of the adjustment</param>
            <param name="method">A string that toggles how the adjustment should be applied</param>
            <returns>The adjustment object if successful, null otherwise.</returns>
        </member>
        <member name="M:ChargifyNET.ChargifyConnect.GetManagementLink(System.Int64)">
            <summary>
            From http://docs.chargify.com/api-billing-portal
            </summary>
        </member>
        <member name="M:ChargifyNET.ChargifyConnect.EnableBillingPortalAccess(System.Int64,System.Boolean)">
            <summary>
            From http://docs.chargify.com/api-billing-portal
            </summary>
            <param name="chargifyId">The chargify ID of the customer</param>
            <param name="autoInvite">Should an email be automatically sent to customer with billing portal link</param>
            <returns>True if success, otherwise error is thrown</returns>
        </member>
        <member name="M:ChargifyNET.ChargifyConnect.EnableBillingPortalAccess(System.String,System.Boolean)">
            <summary>
            From http://docs.chargify.com/api-billing-portal
            </summary>
            <param name="systemId">The system ID of the customer</param>
            <param name="autoInvite">Should an email be automatically sent to customer with billing portal link</param>
            <returns>True if success, otherwise error is thrown</returns>
        </member>
        <member name="M:ChargifyNET.ChargifyConnect.RevokeBillingPortalAccess(System.Int64)">
            <summary>
            From http://docs.chargify.com/api-billing-portal
            </summary>
            <param name="chargifyId">The chargify ID of the customer</param>
            <returns>True if success, otherwise error is thrown</returns>
        </member>
        <member name="M:ChargifyNET.ChargifyConnect.RevokeBillingPortalAccess(System.String)">
            <summary>
            From http://docs.chargify.com/api-billing-portal
            </summary>
            <param name="systemId">The system ID of the customer</param>
            <returns>True if success, otherwise error is thrown</returns>
        </member>
        <member name="M:ChargifyNET.ChargifyConnect.GetInvoiceList">
            <summary>
            Gets a list of invoices
            </summary>
            <returns></returns>
        </member>
        <member name="M:ChargifyNET.ChargifyConnect.AddInvoicePayment(System.Int32,System.Decimal,System.String)">
            <summary>
            Add a payment to a specific invoice
            </summary>
            <param name="invoiceId">The id of the invoice</param>
            <param name="amount">The amount of the payment (in dollars and cents)</param>
            <param name="memo">A memo, if applicable</param>
            <returns>Payment details, if successful. Null otherwise.</returns>
        </member>
        <member name="M:ChargifyNET.ChargifyConnect.AddInvoicePayment(System.Int32,System.Int32,System.String)">
            <summary>
            Add a payment to a specific invoice
            </summary>
            <param name="invoiceId">The id of the invoice</param>
            <param name="amountInCents">The amount of the payment (in cents)</param>
            <param name="memo">A memo, if applicable</param>
            <returns>Payment details, if successful. Null otherwise.</returns>
        </member>
        <member name="M:ChargifyNET.ChargifyConnect.ClearTestSite(System.Nullable{ChargifyNET.SiteCleanupScope})">
            <summary>
            Clean up a site in test mode.
            </summary>
            <param name="cleanupScope">What should be cleaned? DEFAULT IS CUSTOMERS ONLY.</param>
            <returns>True if complete, false otherwise</returns>
            <remarks>If used against a production site, the result will always be false.</remarks>
        </member>
        <member name="M:ChargifyNET.ChargifyConnect.AddPayment(System.Int32,System.Decimal,System.String)">
            <summary>
            Chargify allows you to record payments that occur outside of the normal flow of payment processing.
            These payments are considered external payments.A common case to apply such a payment is when a
            customer pays by check or some other means for their subscription.
            </summary>
            <param name="subscriptionId">The ID of the subscription to apply this manual payment record to</param>
            <param name="amount">The decimal amount of the payment (ie. 10.00 for $10)</param>
            <param name="memo">The memo to include with the manual payment</param>
            <returns>The payment result, null otherwise.</returns>
        </member>
        <member name="M:ChargifyNET.ChargifyConnect.AddPayment(System.Int32,System.Int32,System.String)">
            <summary>
            Chargify allows you to record payments that occur outside of the normal flow of payment processing.
            These payments are considered external payments.A common case to apply such a payment is when a
            customer pays by check or some other means for their subscription.
            </summary>
            <param name="subscriptionId">The ID of the subscription to apply this manual payment record to</param>
            <param name="amountInCents">The amount in cents of the payment (ie. $10 would be 1000 cents)</param>
            <param name="memo">The memo to include with the manual payment</param>
            <returns>The payment result, null otherwise.</returns>
        </member>
        <member name="M:ChargifyNET.ChargifyConnect.LoadPaymentProfile(System.Int32)">
            <summary>
            Retrieve a payment profile
            </summary>
            <param name="id">The ID of the payment profile</param>
            <returns>The payment profile, null if not found.</returns>
        </member>
        <member name="M:ChargifyNET.ChargifyConnect.UpdatePaymentProfile(ChargifyNET.PaymentProfileView)">
            <summary>
            Updates a payment profile
            </summary>
            <param name="paymentProfile">The payment profile object</param>
            <returns>The updated payment profile if successful, null or exception otherwise.</returns>
        </member>
        <member name="M:ChargifyNET.ChargifyConnect.PreviewRenewal(System.Int32)">
            <summary>
            Renewal Preview is an object representing a subscription’s next assessment.
            You can retrieve it to see a snapshot of how much your customer will be charged on their next renewal.
            </summary>
            <param name="subscriptionId">Integer, the id for the subscription that is to be previewed</param>
            <returns>The snapshot of how much your customer will be charged on their next renewal</returns>
        </member>
        <member name="M:ChargifyNET.ChargifyConnect.CreateNote(ChargifyNET.INote)">
            <summary>
            Create a note
            </summary>
            <param name="note">The note to create</param>
            <returns>The note details, if successful. Null otherwise.</returns>
        </member>
        <member name="M:ChargifyNET.ChargifyConnect.CreateNote(System.Int32,System.String,System.Boolean)">
            <summary>
            Create a note
            </summary>
            <param name="subscriptionId">The subscription to add the note to</param>
            <param name="body">The note content</param>
            <param name="sticky">Is the note "sticky"</param>
            <returns>The note details, if successful. Null otherwise.</returns>
        </member>
        <member name="M:ChargifyNET.ChargifyConnect.GetNotesForSubscription(System.Int32)">
            <summary>
            Retrieve the notes
            </summary>
            <param name="subscriptionId"></param>
            <returns></returns>
        </member>
        <member name="M:ChargifyNET.ChargifyConnect.LoadNote(System.Int32,System.Int32)">
            <summary>
            Load the note
            </summary>
            <param name="subscriptionId">The id of the subscription</param>
            <param name="noteId">The id of the note to retrieve</param>
            <returns></returns>
        </member>
        <member name="M:ChargifyNET.ChargifyConnect.DeleteNote(System.Int32,System.Int32)">
            <summary>
            Deletes a note from a subscription
            </summary>
            <param name="subscriptionId">The id of the subscription</param>
            <param name="noteId">The id of the note to delete</param>
            <returns></returns>
        </member>
        <member name="M:ChargifyNET.ChargifyConnect.UpdateNote(System.Int32,ChargifyNET.INote)">
            <summary>
            Updates a note
            </summary>
            <param name="subscriptionId">The id of the subscription</param>
            <param name="note">The updated note</param>
            <returns>Returns the updated note, or the same note if unsuccessful</returns>
        </member>
        <member name="M:ChargifyNET.ChargifyConnect.ValidateReferralCode(System.String)">
            <summary>
            Method for retrieving information about a coupon using the ID of that referral code.
            </summary>
            <param name="referralCode">Referral code</param>
            <returns>The object if found, null otherwise.</returns>
        </member>
        <member name="M:ChargifyNET.ChargifyConnect.GetMethodExtension">
            <summary>
            Should the URI method extension be json or xml?
            </summary>
            <returns>Either "json" or "xml" depending on how UseJSON is set.</returns>
        </member>
        <member name="M:ChargifyNET.ChargifyConnect.DoRequest(System.String)">
            <summary>
            Make a GET request to Chargify
            </summary>
            <param name="methodString">The method string for the request.  This is appended to the base URL</param>
            <returns>The xml response to the request</returns>
        </member>
        <member name="M:ChargifyNET.ChargifyConnect.DoFileRequest(System.String,ChargifyNET.HttpRequestMethod,System.String)">
            <summary>
            Method for retrieving a file via the API
            </summary>
            <param name="methodString"></param>
            <param name="requestMethod"></param>
            <param name="postData"></param>
            <returns></returns>
        </member>
        <member name="M:ChargifyNET.ChargifyConnect.DoRequest(System.String,ChargifyNET.HttpRequestMethod,System.String)">
            <summary>
            Make a request to Chargify
            </summary>
            <param name="methodString">The method string for the request.  This is appended to the base URL</param>
            <param name="requestMethod">The request method (GET or POST)</param>
            <param name="postData">The data included as part of a POST, PUT or DELETE request</param>
            <returns>The xml response to the request</returns>
        </member>
        <member name="M:ChargifyNET.ChargifyConnect.DoNewRequest(System.String,ChargifyNET.HttpRequestMethod,System.Object)">
            <summary>
            Make a request to Chargify
            </summary>
            <param name="methodString">The root chargify url string for the request. This is appended to the base URL. This should not include xml or json</param>
            <param name="requestMethod">The request method (GET or POST)</param>
            <param name="postData">The data as an anonymous object included as part of a POST, PUT or DELETE request</param>
            <returns>The xml response to the request</returns>
        </member>
        <member name="M:ChargifyNET.ChargifyConnect.Require(System.String,System.String)">
            <summary>
            Checks whether a string is null or empty. Throws an InvalidOperationException.
            </summary>
        </member>
        <member name="M:ChargifyNET.ChargifyConnect.RequireNotNull(System.String,System.Object)">
            <summary>
            Checks whether an object is null, or if it is a string, not empty. Throws ArgumentNullException
            </summary>
            <param name="name"></param>
            <param name="str"></param>
        </member>
        <member name="T:ChargifyNET.ChargifyEntity">
            <summary>
            The model object for every ID-based object in Chargify
            </summary>
        </member>
        <member name="F:ChargifyNET.ChargifyEntity.IDKey">
            <summary>
            The json/xml key for the ID field
            </summary>
        </member>
        <member name="P:ChargifyNET.ChargifyEntity.ID">
            <summary>
            The unique id within Chargify
            </summary>
        </member>
        <member name="F:ChargifyNET.ChargifyEntity.m_id">
            <summary>
            The id value
            </summary>
        </member>
        <member name="T:ChargifyNET.IChargifyEntity">
            <summary>
            The model object for every ID-based object in Chargify
            </summary>
        </member>
        <member name="P:ChargifyNET.IChargifyEntity.ID">
            <summary>
            The unique id within Chargify
            </summary>
        </member>
        <member name="T:ChargifyNET.ChargifyError">
            <summary>
            Error returned from Chargify after an unsuccessful operation
            </summary>
        </member>
        <member name="P:ChargifyNET.ChargifyError.Message">
            <summary>
            The message from Chargify
            </summary>
        </member>
        <member name="M:ChargifyNET.ChargifyError.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:ChargifyNET.ChargifyError.#ctor(System.String)">
            <summary>
            Constructor
            </summary>
            <param name="message">The string error message to relay to the user</param>
        </member>
        <member name="M:ChargifyNET.ChargifyError.#ctor(System.Xml.XmlNode)">
            <summary>
            Constructor
            </summary>
            <param name="errorNode">The XML node that contains the error message</param>
        </member>
        <member name="M:ChargifyNET.ChargifyError.#ctor(ChargifyNET.Json.JsonString)">
            <summary>
            Constructor
            </summary>
            <param name="errorStr">The JsonString obj that contains the error message</param>
        </member>
        <member name="M:ChargifyNET.ChargifyError.ParseChargifyErrors(System.Net.HttpWebResponse)">
            <summary>
            Method to parse the errors returned from Chargify after an unsuccessful interaction
            </summary>
            <param name="response">The HttpWebResponse instance which contains the error response</param>
            <returns>The list of errors returned from Chargify</returns>
        </member>
        <member name="T:ChargifyNET.ChargifyNetException">
            <summary>
            Exception thrown by Chargify.NET library when things don't add up
            </summary>
        </member>
        <member name="M:ChargifyNET.ChargifyNetException.#ctor(System.String)">
            <summary>
            Constructor
            </summary>
            <param name="message">The message of this exception</param>
        </member>
        <member name="T:ChargifyNET.ChargifyException">
            <summary>
            Exception thrown by the chargify system when a request fails
            </summary>
        </member>
        <member name="M:ChargifyNET.ChargifyException.#ctor(System.Net.HttpWebResponse,System.Net.WebException)">
            <summary>
            Constructor
            </summary>
            <param name="errorResponse">The response that caused the exception</param>
            <param name="wex">The original web exception.  This becomes the inner exception of ths exception</param>
        </member>
        <member name="M:ChargifyNET.ChargifyException.#ctor(System.Net.HttpWebResponse,System.Net.WebException,System.String)">
            <summary>
            Constructor
            </summary>
            <param name="errorResponse">The response that caused the exception</param>
            <param name="wex">The original web exception.  This becomes the inner exception of ths exception</param>
            <param name="postData">The data posted that could have potentially caused the exception.</param>
        </member>
        <member name="P:ChargifyNET.ChargifyException.StatusDescription">
            <summary>
            Get the status description
            </summary>
        </member>
        <member name="P:ChargifyNET.ChargifyException.StatusCode">
            <summary>
            Get the status code
            </summary>
        </member>
        <member name="P:ChargifyNET.ChargifyException.LastDataPosted">
            <summary>
            Get the last data posted that potentially caused the exception
            </summary>
        </member>
        <member name="P:ChargifyNET.ChargifyException.ErrorMessages">
            <summary>
            List of ChargifyErrors returned from Chargify.
            </summary>
        </member>
        <member name="M:ChargifyNET.ChargifyException.ToString">
            <summary>
            Pretty output for this exception
            </summary>
            <returns>Request, response and errors</returns>
        </member>
        <member name="T:ChargifyNET.Component">
            <summary>
            Metered Components are a way to offer Customers a product that is billed on a per-usage basis.
            </summary>
        </member>
        <member name="M:ChargifyNET.Component.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:ChargifyNET.Component.#ctor(System.String)">
            <summary>
            Constructor
            </summary>
            <param name="componentXml">An XML string containing a component node</param>
        </member>
        <member name="M:ChargifyNET.Component.#ctor(System.Xml.XmlNode)">
            <summary>
            Constructor
            </summary>
            <param name="usageNode">An xml node with usage information</param>
        </member>
        <member name="M:ChargifyNET.Component.#ctor(ChargifyNET.Json.JsonObject)">
            <summary>
            Constructor
            </summary>
            <param name="usageObject">An JsonObject with usage information</param>
        </member>
        <member name="P:ChargifyNET.Component.ID">
            <summary>
            The ID for this metered component
            </summary>
        </member>
        <member name="P:ChargifyNET.Component.Quantity">
            <summary>
            The amount of units used
            </summary>
        </member>
        <member name="P:ChargifyNET.Component.Memo">
            <summary>
            An optional description for this metered component
            </summary>
        </member>
        <member name="M:ChargifyNET.Component.CompareTo(ChargifyNET.IComponent)">
            <summary>
            Compare this IComponent to another
            </summary>
        </member>
        <member name="M:ChargifyNET.Component.CompareTo(ChargifyNET.Component)">
            <summary>
            Compare this Component to another
            </summary>
        </member>
        <member name="T:ChargifyNET.ComponentAllocation">
            <summary>
            Specific class when getting or setting information specfic to a components allocation history
            </summary>
            <remarks>See http://docs.chargify.com/api-allocations </remarks>
        </member>
        <member name="F:ChargifyNET.ComponentAllocation.AllocationRootKey">
            <summary>
            The XML or JSON key of which the child values correspond to the members of the ComponentAllocation class
            </summary>
        </member>
        <member name="F:ChargifyNET.ComponentAllocation.AllocationsRootKey">
            <summary>
            The XML key which represents a collection of ComponentAllocation's
            </summary>
        </member>
        <member name="M:ChargifyNET.ComponentAllocation.#ctor">
            <summary>
            Default Constructor
            </summary>
        </member>
        <member name="M:ChargifyNET.ComponentAllocation.#ctor(System.String)">
            <summary>
            Constructor
            </summary>
            <param name="componentAllocationXml">The raw XML containing the component allocation node</param>
        </member>
        <member name="M:ChargifyNET.ComponentAllocation.#ctor(ChargifyNET.Json.JsonObject)">
            <summary>
            Constructor
            </summary>
            <param name="componentAllocationObject">The JSON component allocation object</param>
        </member>
        <member name="M:ChargifyNET.ComponentAllocation.#ctor(System.Xml.XmlNode)">
            <summary>
            Constructor
            </summary>
            <param name="componentAllocationNode">The XML component allocation node</param>
        </member>
        <member name="P:ChargifyNET.ComponentAllocation.Quantity">
            <summary>
            The allocated quantity set in to effect by the allocation
            </summary>
        </member>
        <member name="P:ChargifyNET.ComponentAllocation.PreviousQuantity">
            <summary>
            The allocated quantity that was in effect before this allocation was created
            </summary>
        </member>
        <member name="P:ChargifyNET.ComponentAllocation.ComponentID">
            <summary>
            The integer component ID for the allocation. This references a component that you have created in your Product setup
            </summary>
        </member>
        <member name="P:ChargifyNET.ComponentAllocation.SubscriptionID">
            <summary>
            The integer subscription ID for the allocation. This references a unique subscription in your Site
            </summary>
        </member>
        <member name="P:ChargifyNET.ComponentAllocation.Memo">
            <summary>
            The memo passed when the allocation was created
            </summary>
        </member>
        <member name="P:ChargifyNET.ComponentAllocation.TimeStamp">
            <summary>
            The time that the allocation was recorded, in ISO 8601 format and UTC timezone, i.e. 2012-11-20T22:00:37Z
            </summary>
        </member>
        <member name="P:ChargifyNET.ComponentAllocation.UpgradeScheme">
            <summary>
            The scheme used if the proration was an upgrade. This is only present when the allocation was created mid-period.
            </summary>
        </member>
        <member name="P:ChargifyNET.ComponentAllocation.DowngradeScheme">
            <summary>
            The scheme used if the proration was a downgrade. This is only present when the allocation was created mid-period.
            </summary>
        </member>
        <member name="M:ChargifyNET.ComponentAllocation.CompareTo(ChargifyNET.ComponentAllocation)">
            <summary>
            
            </summary>
            <param name="other"></param>
            <returns></returns>
        </member>
        <member name="T:ChargifyNET.ComponentAttributes">
            <summary>
            Specfic class when getting information about a component as set to a specific subscription 
            as specified here: http://support.chargify.com/faqs/technical/quantity-based-components
            </summary>
        </member>
        <member name="M:ChargifyNET.ComponentAttributes.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:ChargifyNET.ComponentAttributes.#ctor(System.String)">
            <summary>
            Constructor
            </summary>
            <param name="componentAttributesXml">An XML string containing a component node</param>
        </member>
        <member name="M:ChargifyNET.ComponentAttributes.#ctor(System.Xml.XmlNode)">
            <summary>
            Constructor
            </summary>
            <param name="componentAttributeNode">An xml node with usage information</param>
        </member>
        <member name="M:ChargifyNET.ComponentAttributes.#ctor(ChargifyNET.Json.JsonObject)">
            <summary>
            Constructor
            </summary>
            <param name="componentAttributesObject">An JsonObject with component information</param>
        </member>
        <member name="P:ChargifyNET.ComponentAttributes.Name">
            <summary>
            The name of the component as created by the Chargify user
            </summary>
        </member>
        <member name="P:ChargifyNET.ComponentAttributes.Kind">
            <summary>
            The kind of component, either quantity-based or metered component
            </summary>
        </member>
        <member name="P:ChargifyNET.ComponentAttributes.SubscriptionID">
            <summary>
            The ID of the subscription that this component applies to
            </summary>
        </member>
        <member name="P:ChargifyNET.ComponentAttributes.ComponentID">
            <summary>
            The ID of the component itself
            </summary>
        </member>
        <member name="P:ChargifyNET.ComponentAttributes.AllocatedQuantity">
            <summary>
            The quantity allocated to this subscription
            </summary>
        </member>
        <member name="P:ChargifyNET.ComponentAttributes.PricingScheme">
            <summary>
            The method used to charge, either: per-unit, volume, tiered or stairstep
            </summary>
        </member>
        <member name="P:ChargifyNET.ComponentAttributes.UnitName">
            <summary>
            The name for the unit this component is measured in.
            </summary>
        </member>
        <member name="P:ChargifyNET.ComponentAttributes.UnitBalance">
            <summary>
            The balance of units of this component against the subscription
            </summary>
        </member>
        <member name="P:ChargifyNET.ComponentAttributes.Enabled">
            <summary>
            The status of whether this component is enabled or disabled.
            (On/Off components only)
            </summary>
        </member>
        <member name="M:ChargifyNET.ComponentAttributes.CompareTo(ChargifyNET.ComponentAttributes)">
            <summary>
            Compare this ComponentAttributes to another
            </summary>
        </member>
        <member name="M:ChargifyNET.ComponentAttributes.CompareTo(ChargifyNET.IComponentAttributes)">
            <summary>
            Compare this IComponentAttributes to another
            </summary>
        </member>
        <member name="T:ChargifyNET.ComponentInfo">
            <summary>
            Specfic class when getting information about a component as set to a specific product family
            </summary>
        </member>
        <member name="M:ChargifyNET.ComponentInfo.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:ChargifyNET.ComponentInfo.#ctor(System.String)">
            <summary>
            Constructor
            </summary>
            <param name="componentInfoXml">An XML string containing a component node</param>
        </member>
        <member name="M:ChargifyNET.ComponentInfo.#ctor(System.Xml.XmlNode)">
            <summary>
            Constructor
            </summary>
            <param name="componentInfoNode">An xml node with component information</param>
        </member>
        <member name="M:ChargifyNET.ComponentInfo.#ctor(ChargifyNET.Json.JsonObject)">
            <summary>
            Constructor
            </summary>
            <param name="componentInfoObject">An JsonObject with component information</param>
        </member>
        <member name="P:ChargifyNET.ComponentInfo.CreatedAt">
            <summary>
            Date and time that this component was created
            </summary>
        </member>
        <member name="P:ChargifyNET.ComponentInfo.ID">
            <summary>
            The ID of this component
            </summary>
        </member>
        <member name="P:ChargifyNET.ComponentInfo.Name">
            <summary>
            The name of the component as created by the Chargify user
            </summary>
        </member>
        <member name="P:ChargifyNET.ComponentInfo.Description">
            <summary>
            The description of the component as created by the Chargify user
            </summary>
        </member>
        <member name="P:ChargifyNET.ComponentInfo.PricePerUnitInCents">
            <summary>
            Price of the component per unit (in cents)
            </summary>
        </member>
        <member name="P:ChargifyNET.ComponentInfo.PricePerUnit">
            <summary>
            Price of the component per unit (in dollars and cents)
            </summary>
        </member>
        <member name="P:ChargifyNET.ComponentInfo.PricingScheme">
            <summary>
            The type of pricing scheme for this component
            </summary>
        </member>
        <member name="P:ChargifyNET.ComponentInfo.ProductFamilyID">
            <summary>
            The ID of the product family this component was created for
            </summary>
        </member>
        <member name="P:ChargifyNET.ComponentInfo.UnitName">
            <summary>
            The name for the unit this component is measured in.
            </summary>
        </member>
        <member name="P:ChargifyNET.ComponentInfo.UpdatedAt">
            <summary>
            Date/Time that this component was last updated.
            </summary>
        </member>
        <member name="P:ChargifyNET.ComponentInfo.Kind">
            <summary>
            The kind of component, either quantity-based or metered component
            </summary>
        </member>
        <member name="P:ChargifyNET.ComponentInfo.UnitPrice">
            <summary>
            The amount the customer will be charged per unit. This field is only populated for 'per_unit' pricing schemes.
            </summary>
        </member>
        <member name="P:ChargifyNET.ComponentInfo.Prices">
            <summary>
            An list of price brackets. If the component uses the 'per_unit' pricing scheme, an empty list will be returned.
            </summary>
        </member>
        <member name="P:ChargifyNET.ComponentInfo.Archived">
            <summary>
            Boolean flag describing whether a component is archived or not
            </summary>
        </member>
        <member name="M:ChargifyNET.ComponentInfo.CompareTo(ChargifyNET.IComponentInfo)">
            <summary>
            Compare method for ComponentInfo
            </summary>
            <param name="other">The object to compare to.</param>
            <returns>The CompareTo value based on comparing IDs</returns>
        </member>
        <member name="M:ChargifyNET.ComponentInfo.CompareTo(ChargifyNET.ComponentInfo)">
            <summary>
            Compare method for ComponentInfo
            </summary>
            <param name="other">The object to compare to.</param>
            <returns>The CompareTo value based on comparing IDs</returns>
        </member>
        <member name="T:ChargifyNET.PriceBracketInfo">
            <summary>
            The description for a single bracket of a components price
            </summary>
        </member>
        <member name="P:ChargifyNET.PriceBracketInfo.StartingQuantity">
            <summary>
            The starting quantity for the component
            </summary>
        </member>
        <member name="P:ChargifyNET.PriceBracketInfo.EndingQuantity">
            <summary>
            The ending quantity for the component
            </summary>
        </member>
        <member name="P:ChargifyNET.PriceBracketInfo.UnitPrice">
            <summary>
            The unit price for the component
            </summary>
        </member>
        <member name="T:ChargifyNET.Coupon">
            <summary>
            Object representing coupon in Chargify
            </summary>
        </member>
        <member name="M:ChargifyNET.Coupon.#ctor">
            <summary>
            Constructor.  Values set to default
            </summary>
        </member>
        <member name="M:ChargifyNET.Coupon.#ctor(System.String)">
            <summary>
            Constructor
            </summary>
            <param name="couponXml">XML containing coupon info (in expected format)</param>
        </member>
        <member name="M:ChargifyNET.Coupon.#ctor(System.Xml.XmlNode)">
            <summary>
            Constructor
            </summary>
            <param name="couponNode">XML containing coupon info (in expected format)</param>
        </member>
        <member name="M:ChargifyNET.Coupon.#ctor(ChargifyNET.Json.JsonObject)">
            <summary>
            Constructor
            </summary>
            <param name="couponObject">JsonObject containing coupon info (in expected format)</param>
        </member>
        <member name="M:ChargifyNET.Coupon.LoadFromJson(ChargifyNET.Json.JsonObject)">
            <summary>
            Load data from a JsonObject
            </summary>
            <param name="obj">The JsonObject containing coupon data</param>
        </member>
        <member name="M:ChargifyNET.Coupon.LoadFromNode(System.Xml.XmlNode)">
            <summary>
            Load data from a coupon node
            </summary>
            <param name="couponNode">The coupon node</param>
        </member>
        <member name="P:ChargifyNET.Coupon.AmountInCents">
            <summary>
            The amount of the coupon, in cents.
            </summary>
        </member>
        <member name="P:ChargifyNET.Coupon.Amount">
            <summary>
            The amount of the coupon
            </summary>
        </member>
        <member name="P:ChargifyNET.Coupon.Code">
            <summary>
            The string code that represents this coupon
            </summary>
        </member>
        <member name="P:ChargifyNET.Coupon.CreatedAt">
            <summary>
            The date this coupon was created
            </summary>
        </member>
        <member name="P:ChargifyNET.Coupon.Description">
            <summary>
            The description of this coupon
            </summary>
        </member>
        <member name="P:ChargifyNET.Coupon.EndDate">
            <summary>
            The date that this coupon is no longer valid for use
            </summary>
        </member>
        <member name="P:ChargifyNET.Coupon.ID">
            <summary>
            The ID of this coupon
            </summary>
        </member>
        <member name="P:ChargifyNET.Coupon.Name">
            <summary>
            The internal name of this coupon in the Chargify site
            </summary>
        </member>
        <member name="P:ChargifyNET.Coupon.ProductFamilyID">
            <summary>
            The ID of the product family this coupon belongs to
            </summary>
        </member>
        <member name="P:ChargifyNET.Coupon.StartDate">
            <summary>
            The date this coupon became active
            </summary>
        </member>
        <member name="P:ChargifyNET.Coupon.UpdatedAt">
            <summary>
            The date this coupon was last updated
            </summary>
        </member>
        <member name="P:ChargifyNET.Coupon.DurationInterval">
            <summary>
            The coupon duration interval
            </summary>
        </member>
        <member name="P:ChargifyNET.Coupon.DurationUnit">
            <summary>
            The coupon duration unit 
            </summary>
        </member>
        <member name="P:ChargifyNET.Coupon.DurationPeriodCount">
            <summary>
            The coupon period count
            </summary>
        </member>
        <member name="P:ChargifyNET.Coupon.Percentage">
            <summary>
            If percentage based, the percentage. Int.MinValue otherwise.
            </summary>
        </member>
        <member name="P:ChargifyNET.Coupon.IsRecurring">
            <summary>
            Is this a recurring coupon?
            </summary>
        </member>
        <member name="P:ChargifyNET.Coupon.ArchivedAt">
            <summary>
             The date this coupon was archived
            </summary>
        </member>
        <member name="P:ChargifyNET.Coupon.AllowNegativeBalance">
            <summary>
            Allow negative balance
            </summary>
        </member>
        <member name="M:ChargifyNET.Coupon.CompareTo(ChargifyNET.ICoupon)">
            <summary>
            Method for comparing one coupon to another
            </summary>
        </member>
        <member name="M:ChargifyNET.Coupon.CompareTo(ChargifyNET.Coupon)">
            <summary>
            Method for comparing one coupon to another
            </summary>
        </member>
        <member name="T:ChargifyNET.CouponUsage">
            <summary>
            Coupon usage
            </summary>
        </member>
        <member name="M:ChargifyNET.CouponUsage.#ctor">
            <summary>
            Constructor.  Values set to default
            </summary>
        </member>
        <member name="M:ChargifyNET.CouponUsage.#ctor(System.String)">
            <summary>
            Constructor
            </summary>
            <param name="couponUsageXml">XML containing coupon usage info (in expected format)</param>
        </member>
        <member name="M:ChargifyNET.CouponUsage.#ctor(System.Xml.XmlNode)">
            <summary>
            Constructor
            </summary>
            <param name="couponUsageNode">XML containing coupon info (in expected format)</param>
        </member>
        <member name="M:ChargifyNET.CouponUsage.#ctor(ChargifyNET.Json.JsonObject)">
            <summary>
            Constructor
            </summary>
            <param name="couponUsageObject">JsonObject containing coupon usage info (in expected format)</param>
        </member>
        <member name="M:ChargifyNET.CouponUsage.LoadFromJson(ChargifyNET.Json.JsonObject)">
            <summary>
            Load data from a JsonObject
            </summary>
            <param name="obj">The JsonObject containing coupon data</param>
        </member>
        <member name="M:ChargifyNET.CouponUsage.LoadFromNode(System.Xml.XmlNode)">
            <summary>
            Load data from a coupon node
            </summary>
            <param name="couponNode">The coupon node</param>
        </member>
        <member name="P:ChargifyNET.CouponUsage.ProductName">
            <summary>
             Product name
            </summary>
        </member>
        <member name="P:ChargifyNET.CouponUsage.ProductId">
            <summary>
             Product ID
            </summary>
        </member>
        <member name="P:ChargifyNET.CouponUsage.Revenue">
            <summary>
            Revenue from subscriptions that used coupon
            </summary>
        </member>
        <member name="P:ChargifyNET.CouponUsage.Signups">
            <summary>
            Number of signups that used coupon
            </summary>
        </member>
        <member name="P:ChargifyNET.CouponUsage.Savings">
            <summary>
            Savings given by the coupon for this product
            </summary>
        </member>
        <member name="M:ChargifyNET.CouponUsage.CompareTo(ChargifyNET.ICouponUsage)">
            <summary>
            Method for comparing one coupon usage to another
            </summary>
        </member>
        <member name="M:ChargifyNET.CouponUsage.CompareTo(ChargifyNET.CouponUsage)">
            <summary>
            Method for comparing one coupon usage to another
            </summary>
        </member>
        <member name="T:ChargifyNET.Credit">
            <summary>
            One-time (or one-off) credit for arbitrary amount
            </summary>
        </member>
        <member name="M:ChargifyNET.Credit.#ctor">
            <summary>
            Constructor.  Values set to default
            </summary>
        </member>
        <member name="M:ChargifyNET.Credit.#ctor(System.String)">
            <summary>
            Constructor
            </summary>
            <param name="creditXml">XML containing credit info (in expected format)</param>
        </member>
        <member name="M:ChargifyNET.Credit.#ctor(System.Xml.XmlNode)">
            <summary>
            Constructor
            </summary>
            <param name="creditNode">XML containing credit info (in expected format)</param>
        </member>
        <member name="M:ChargifyNET.Credit.#ctor(ChargifyNET.Json.JsonObject)">
            <summary>
            Constructor
            </summary>
            <param name="creditObject">JsonObject containing credit info (in expected format)</param>
        </member>
        <member name="M:ChargifyNET.Credit.LoadFromJson(ChargifyNET.Json.JsonObject)">
            <summary>
            Load data from a JsonObject
            </summary>
            <param name="obj">The JsonObject with credit data</param>
        </member>
        <member name="M:ChargifyNET.Credit.LoadFromNode(System.Xml.XmlNode)">
            <summary>
            Load data from a credit node
            </summary>
            <param name="creditNode">The credit node</param>
        </member>
        <member name="P:ChargifyNET.Credit.Success">
            <summary>
            Either true or false, depending on the success of the credit
            </summary>
        </member>
        <member name="P:ChargifyNET.Credit.AmountInCents">
            <summary>
            Get the amount, in cents
            </summary>
        </member>
        <member name="P:ChargifyNET.Credit.Amount">
            <summary>
            Get the amount, in dollars and cents
            </summary>
        </member>
        <member name="P:ChargifyNET.Credit.Memo">
            <summary>
            The memo for the created credit
            </summary>
        </member>
        <member name="M:ChargifyNET.Credit.CompareTo(ChargifyNET.ICredit)">
            <summary>
            Compare this credit to another
            </summary>
        </member>
        <member name="M:ChargifyNET.Credit.CompareTo(ChargifyNET.Credit)">
            <summary>
            Compare this credit to another
            </summary>
        </member>
        <member name="T:ChargifyNET.CreditCardAttributes">
            <summary>
            Class representing credit card attributes associated with a new subscription
            </summary>
        </member>
        <member name="M:ChargifyNET.CreditCardAttributes.#ctor">
            <summary>
            Contructor
            </summary>
        </member>
        <member name="M:ChargifyNET.CreditCardAttributes.#ctor(System.String,System.String,System.String,System.Int32,System.Int32,System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Constructor
            </summary>
            <param name="firstName">The first name on the credit card</param>
            <param name="lastName">The last name on the credit card</param>
            <param name="fullNumber">The full credit card number</param>
            <param name="expirationYear">The expiration year</param>
            <param name="expirationMonth">The expiration month</param>
            <param name="cvv">The CVV number of the credit card</param>
            <param name="billingAddress">THe billing address of the credit card</param>
            <param name="billingCity">The billing city of the credit card</param>
            <param name="billingState">The billing state or province of the credit card</param>
            <param name="billingZip">The billing zip code or postal code of the credit card</param>
            <param name="billingCountry">The billing country of the credit card</param>
        </member>
        <member name="P:ChargifyNET.CreditCardAttributes.CVV">
            <summary>
            Get or set the CVV number on the credit card
            </summary>
        </member>
        <member name="M:ChargifyNET.CreditCardAttributes.ShouldSerializeCvv">
            <summary>
            Ignore, used for determining if the value should be serialized
            </summary>
        </member>
        <member name="M:ChargifyNET.CreditCardAttributes.op_Equality(ChargifyNET.CreditCardAttributes,ChargifyNET.CreditCardAttributes)">
            <summary>
            Equals operator for two credit card attributes
            </summary>
            <returns>True if the credit card attributes are equal</returns>
        </member>
        <member name="M:ChargifyNET.CreditCardAttributes.op_Inequality(ChargifyNET.CreditCardAttributes,ChargifyNET.CreditCardAttributes)">
            <summary>
            Unequal operator for two credit card attributes
            </summary>
            <returns>True if the credit card attributes are unequal</returns>
        </member>
        <member name="M:ChargifyNET.CreditCardAttributes.op_Equality(ChargifyNET.ICreditCardAttributes,ChargifyNET.CreditCardAttributes)">
            <summary>
            Equals operator for two credit card attributes
            </summary>
            <returns>True if the credit card attributes are equal</returns>
        </member>
        <member name="M:ChargifyNET.CreditCardAttributes.op_Inequality(ChargifyNET.ICreditCardAttributes,ChargifyNET.CreditCardAttributes)">
            <summary>
            Unequal operator for two credit card attributes
            </summary>
            <returns>True if the credit card attributes are unequal</returns>
        </member>
        <member name="M:ChargifyNET.CreditCardAttributes.op_Equality(ChargifyNET.CreditCardAttributes,ChargifyNET.ICreditCardAttributes)">
            <summary>
            Equals operator for two credit card attributes
            </summary>
            <returns>True if the credit card attributes are equal</returns>
        </member>
        <member name="M:ChargifyNET.CreditCardAttributes.op_Inequality(ChargifyNET.CreditCardAttributes,ChargifyNET.ICreditCardAttributes)">
            <summary>
            Unequal operator for two credit card attributes
            </summary>
            <returns>True if the credit card attributes are unequal</returns>
        </member>
        <member name="M:ChargifyNET.CreditCardAttributes.ToString">
            <summary>
            Represent this object as a string
            </summary>
            <returns>A string representation of the object</returns>
        </member>
        <member name="M:ChargifyNET.CreditCardAttributes.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns></returns>
        </member>
        <member name="M:ChargifyNET.CreditCardAttributes.Equals(System.Object)">
            <summary>
            Equal operator
            </summary>
            <param name="obj">the object to compare</param>
            <returns>true if they are equal</returns>
        </member>
        <member name="T:ChargifyNET.Customer">
            <summary>
            Class representing a chargify customer
            </summary>
        </member>
        <member name="M:ChargifyNET.Customer.#ctor">
            <summary>
            Constructor.  Values set to default
            </summary>
        </member>
        <member name="M:ChargifyNET.Customer.#ctor(System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Constructor.  Values specified
            </summary>
            <param name="firstName">The customer's first name</param>
            <param name="lastName">The customer's last name</param>
            <param name="email">The customer's email address</param>
            <param name="organization">The customer's organization</param>
            <param name="systemId">The customer's system ID</param>
        </member>
        <member name="M:ChargifyNET.Customer.#ctor(System.String)">
            <summary>
            Constructor
            </summary>
            <param name="customerXml">XML containing customer info (in expected format)</param>
        </member>
        <member name="M:ChargifyNET.Customer.#ctor(System.Xml.XmlNode)">
            <summary>
            Constructor
            </summary>
            <param name="customerNode">XML containing customer info (in expected format)</param>
        </member>
        <member name="M:ChargifyNET.Customer.#ctor(ChargifyNET.Json.JsonObject)">
            <summary>
            Constructor
            </summary>
            <param name="customerObject">JsonObject containing customer info (in expected format)</param>
        </member>
        <member name="M:ChargifyNET.Customer.LoadFromJSON(ChargifyNET.Json.JsonObject)">
            <summary>
            Load data from a JsonObject
            </summary>
            <param name="obj">The JsonObject containing customer data</param>
        </member>
        <member name="M:ChargifyNET.Customer.LoadFromNode(System.Xml.XmlNode)">
            <summary>
            Load data from a customer node
            </summary>
            <param name="customerNode">The customer node</param>
        </member>
        <member name="P:ChargifyNET.Customer.ChargifyID">
            <summary>
            Get the customer's chargify ID
            </summary>
        </member>
        <member name="P:ChargifyNET.Customer.Created">
            <summary>
            Get the date and time the customer was created a Chargify
            </summary>
        </member>
        <member name="P:ChargifyNET.Customer.LastUpdated">
            <summary>
            Get the date and time the customer was last updated at chargify
            </summary>
        </member>
        <member name="P:ChargifyNET.Customer.IsSaved">
            <summary>
            Get a boolean value that indicates whether or not this customer is currently saved
            in the Chargify system
            </summary>
        </member>
        <member name="M:ChargifyNET.Customer.op_Equality(ChargifyNET.Customer,ChargifyNET.Customer)">
            <summary>
            Equals operator for two customers
            </summary>
            <returns>True if the Customers are equal</returns>
        </member>
        <member name="M:ChargifyNET.Customer.op_Equality(ChargifyNET.Customer,ChargifyNET.ICustomer)">
            <summary>
            Equals operator for two customers
            </summary>
            <returns>True if the Customers are equal</returns>
        </member>
        <member name="M:ChargifyNET.Customer.op_Equality(ChargifyNET.ICustomer,ChargifyNET.Customer)">
            <summary>
            Equals operator for two customers
            </summary>
            <returns>True if the Customers are equal</returns>
        </member>
        <member name="M:ChargifyNET.Customer.op_Inequality(ChargifyNET.Customer,ChargifyNET.Customer)">
            <summary>
            Not Equals operator for two customers
            </summary>
            <returns>True if the Customers are not equal</returns>
        </member>
        <member name="M:ChargifyNET.Customer.op_Inequality(ChargifyNET.Customer,ChargifyNET.ICustomer)">
            <summary>
            Not Equals operator for two customers
            </summary>
            <returns>True if the Customers are not equal</returns>
        </member>
        <member name="M:ChargifyNET.Customer.op_Inequality(ChargifyNET.ICustomer,ChargifyNET.Customer)">
            <summary>
            Not Equals operator for two customers
            </summary>
            <returns>True if the Customers are not equal</returns>
        </member>
        <member name="M:ChargifyNET.Customer.GetHashCode">
            <summary>
            Get Hash code
            </summary>
        </member>
        <member name="M:ChargifyNET.Customer.Equals(System.Object)">
            <summary>
            Equals
            </summary>
            <param name="obj"></param>
        </member>
        <member name="M:ChargifyNET.Customer.ToString">
            <summary>
            Convert object to a string
            </summary>
            <returns>The string representation of the object</returns>
        </member>
        <member name="M:ChargifyNET.Customer.CompareTo(ChargifyNET.ICustomer)">
            <summary>
            Compare this instance to another (by FullName)
            </summary>
            <param name="other">The other instance</param>
            <returns>The result of the comparison</returns>
        </member>
        <member name="M:ChargifyNET.Customer.CompareTo(ChargifyNET.Customer)">
            <summary>
            Compare this instance to another (by FullName)
            </summary>
            <param name="other">The other instance</param>
            <returns>The result of the comparison</returns>
        </member>
        <member name="T:ChargifyNET.CustomerAttributes">
            <summary>
            Class representing basic attributes for a customer
            </summary>
        </member>
        <member name="M:ChargifyNET.CustomerAttributes.#ctor">
            <summary>
            Constructor.  Values set to default
            </summary>
        </member>
        <member name="M:ChargifyNET.CustomerAttributes.#ctor(System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Constructor.  Values specified
            </summary>
            <param name="firstName">The customer's first name</param>
            <param name="lastName">The customer's last name</param>
            <param name="email">The customer's email address</param>
            <param name="organization">The customer's organization</param>
            <param name="systemId">The customer's system ID</param>
        </member>
        <member name="M:ChargifyNET.CustomerAttributes.#ctor(System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Constructor.  Values specified
            </summary>
            <param name="firstName">The customer's first name</param>
            <param name="lastName">The customer's last name</param>
            <param name="email">The customer's email address</param>
            <param name="phone">The customer's phone number</param>
            <param name="organization">The customer's organization</param>
            <param name="systemId">The customer's system ID</param>
        </member>
        <member name="M:ChargifyNET.CustomerAttributes.#ctor(System.String)">
            <summary>
            Constructor
            </summary>
            <param name="customerAttributesXml">XML containing customer info (in expected format)</param>
        </member>
        <member name="M:ChargifyNET.CustomerAttributes.#ctor(System.Xml.XmlNode)">
            <summary>
            Constructor
            </summary>
            <param name="customerAttributesNode">XML node containing customer info (in expected format)</param>
        </member>
        <member name="M:ChargifyNET.CustomerAttributes.#ctor(ChargifyNET.Json.JsonObject)">
            <summary>
            Constructor
            </summary>
            <param name="customerAttributesObject">JsonObject containing customer info (in expected format)</param>
        </member>
        <member name="M:ChargifyNET.CustomerAttributes.LoadFromJson(ChargifyNET.Json.JsonObject)">
            <summary>
            Load data from a JsonObject
            </summary>
            <param name="obj">The JsonObject containing customer attribute data</param>
        </member>
        <member name="M:ChargifyNET.CustomerAttributes.LoadFromNode(System.Xml.XmlNode)">
            <summary>
            Load data from a customer node
            </summary>
            <param name="customerNode">The customer node</param>
        </member>
        <member name="P:ChargifyNET.CustomerAttributes.FirstName">
            <summary>
            Get or set the customer's first name
            </summary>
        </member>
        <member name="M:ChargifyNET.CustomerAttributes.ShouldSerializeFirstName">
            <summary>
            Ignore, used for determining if the value should be serialized
            </summary>
        </member>
        <member name="P:ChargifyNET.CustomerAttributes.LastName">
            <summary>
            Get or set the customer's last name
            </summary>
        </member>
        <member name="M:ChargifyNET.CustomerAttributes.ShouldSerializeLastName">
            <summary>
            Ignore, used for determining if the value should be serialized
            </summary>
        </member>
        <member name="P:ChargifyNET.CustomerAttributes.Email">
            <summary>
            Get or set the customer's email address
            </summary>
        </member>
        <member name="M:ChargifyNET.CustomerAttributes.ShouldSerializeEmail">
            <summary>
            Ignore, used for determining if the value should be serialized
            </summary>
        </member>
        <member name="P:ChargifyNET.CustomerAttributes.Phone">
            <summary>
            The customer's phone number
            </summary>
        </member>
        <member name="M:ChargifyNET.CustomerAttributes.ShouldSerializePhone">
            <summary>
            Ignore, used for determining if the value should be serialized
            </summary>
        </member>
        <member name="P:ChargifyNET.CustomerAttributes.Organization">
            <summary>
            Get or set the customer's organization
            </summary>
        </member>
        <member name="M:ChargifyNET.CustomerAttributes.ShouldSerializeOrganization">
            <summary>
            Ignore, used for determining if the value should be serialized
            </summary>
        </member>
        <member name="P:ChargifyNET.CustomerAttributes.VatNumber">
            <summary>
            The customers vat number
            </summary>
        </member>
        <member name="M:ChargifyNET.CustomerAttributes.ShouldSerializeVatNumber">
            <summary>
            Ignore, used for determining if the value should be serialized
            </summary>
        </member>
        <member name="P:ChargifyNET.CustomerAttributes.ShippingAddress">
            <summary>
            The customers shipping address
            </summary>
        </member>
        <member name="M:ChargifyNET.CustomerAttributes.ShouldSerializeShippingAddress">
            <summary>
            Ignore, used for determining if the value should be serialized
            </summary>
        </member>
        <member name="P:ChargifyNET.CustomerAttributes.ShippingAddress2">
            <summary>
            The customers shipping address 2
            </summary>
        </member>
        <member name="M:ChargifyNET.CustomerAttributes.ShouldSerializeShippingAddress2">
            <summary>
            Ignore, used for determining if the value should be serialized
            </summary>
        </member>
        <member name="P:ChargifyNET.CustomerAttributes.ShippingCity">
            <summary>
            The customers shipping city
            </summary>
        </member>
        <member name="M:ChargifyNET.CustomerAttributes.ShouldSerializeShippingCity2">
            <summary>
            Ignore, used for determining if the value should be serialized
            </summary>
        </member>
        <member name="P:ChargifyNET.CustomerAttributes.ShippingZip">
            <summary>
            The customers shipping zip/postal code
            </summary>
        </member>
        <member name="M:ChargifyNET.CustomerAttributes.ShouldSerializeShippingZip">
            <summary>
            Ignore, used for determining if the value should be serialized
            </summary>
        </member>
        <member name="P:ChargifyNET.CustomerAttributes.ShippingState">
            <summary>
            The customers shipping state
            </summary>
        </member>
        <member name="M:ChargifyNET.CustomerAttributes.ShouldSerializeShippingState">
            <summary>
            Ignore, used for determining if the value should be serialized
            </summary>
        </member>
        <member name="P:ChargifyNET.CustomerAttributes.ShippingCountry">
            <summary>
            The customers shipping country
            </summary>
        </member>
        <member name="M:ChargifyNET.CustomerAttributes.ShouldSerializeShippingCountry">
            <summary>
            Ignore, used for determining if the value should be serialized
            </summary>
        </member>
        <member name="P:ChargifyNET.CustomerAttributes.TaxExempt">
            <summary>
            Get or Set the customer's tax exemption status
            </summary>
        </member>
        <member name="M:ChargifyNET.CustomerAttributes.ShouldSerializeTaxExempt">
            <summary>
            Ignore, used for determining if the value should be serialized
            </summary>
        </member>
        <member name="P:ChargifyNET.CustomerAttributes.SystemID">
            <summary>
            Get or set the customer's ID in the calling system
            </summary>
        </member>
        <member name="M:ChargifyNET.CustomerAttributes.ShouldSerializeSystemId">
            <summary>
            Ignore, used for determining if the value should be serialized
            </summary>
        </member>
        <member name="P:ChargifyNET.CustomerAttributes.CCEmails">
            <summary>
            Get or set the customer's cc emails
            </summary>
        </member>
        <member name="M:ChargifyNET.CustomerAttributes.ShouldSerializeCCEmails">
            <summary>
            Ignore, used for determining if the value should be serialized
            </summary>
        </member>
        <member name="P:ChargifyNET.CustomerAttributes.FullName">
            <summary>
            Get the full name LastName FirstName for the customer
            </summary>
        </member>
        <member name="M:ChargifyNET.CustomerAttributes.CompareTo(ChargifyNET.ICustomerAttributes)">
            <summary>
            Compare this instance to another (by FullName)
            </summary>
            <param name="other">The other instance</param>
            <returns>The result of the comparison</returns>
        </member>
        <member name="M:ChargifyNET.CustomerAttributes.CompareTo(ChargifyNET.CustomerAttributes)">
            <summary>
            Compare this instance to another (by FullName)
            </summary>
            <param name="other">The other instance</param>
            <returns>The result of the comparison</returns>
        </member>
        <member name="M:ChargifyNET.CustomerAttributes.ToString">
            <summary>
            Returns the string equivalent of the CustomerAttribute object.
            </summary>
            <returns>The full name of the customer</returns>
        </member>
        <member name="T:ChargifyNET.Data.CountryNameLookup">
            <summary>
            Since Chargify suggests using ISO 3166-1 Alpha 2 for the country codes, provide some data to users.
            </summary>
        </member>
        <member name="M:ChargifyNET.Data.CountryNameLookup.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:ChargifyNET.Data.CountryNameLookup.GetCountryName(System.String)">
            <summary>
            Method for retrieving the country name from the 2 letter country code (as defined in the ISON 3166-1 Alpha 2 list)
            </summary>
            <param name="countryCode2">The two letter country code</param>
            <returns>Return the name of the country if applicable, String.Empty otherwise.</returns>
        </member>
        <member name="M:ChargifyNET.Data.CountryNameLookup.GetData">
            <summary>
            Method for getting a Dictionary of the country/codes listed in ISO 3166-1 Alpha 2 list
            http://en.wikipedia.org/wiki/ISO_3166-1_alpha-2
            </summary>
            <returns>The dictionary of data in ISO 3166-1 Alpha 2</returns>
        </member>
        <member name="T:ChargifyNET.HttpRequestMethod">
            <summary>
            The type of REST request
            </summary>
        </member>
        <member name="F:ChargifyNET.HttpRequestMethod.Get">
            <summary>
            Requests a representation of the specified resource
            </summary>
        </member>
        <member name="F:ChargifyNET.HttpRequestMethod.Post">
            <summary>
            Requests that the server accept the entity enclosed in the request as a new subordinate of the web resource identified by the URI
            </summary>
        </member>
        <member name="F:ChargifyNET.HttpRequestMethod.Put">
            <summary>
            Requests that the enclosed entity be stored under the supplied URI
            </summary>
        </member>
        <member name="F:ChargifyNET.HttpRequestMethod.Delete">
            <summary>
            Deletes the specified resource
            </summary>
        </member>
        <member name="T:ChargifyNET.PaymentProfileType">
            <summary>
            The type of payment profile
            </summary>
        </member>
        <member name="F:ChargifyNET.PaymentProfileType.Credit_Card">
            <summary>
            Credit card
            </summary>
        </member>
        <member name="F:ChargifyNET.PaymentProfileType.Bank_Account">
            <summary>
            Direct bank account
            </summary>
        </member>
        <member name="F:ChargifyNET.PaymentProfileType.PayPal_Account">
            <summary>
            Paypal account
            </summary>
        </member>
        <member name="T:ChargifyNET.AdjustmentMethod">
            <summary>
            The method to use when adjusting
            </summary>
        </member>
        <member name="F:ChargifyNET.AdjustmentMethod.Default">
            <summary>
            Add (or subtract) from the subscription balance
            </summary>
        </member>
        <member name="F:ChargifyNET.AdjustmentMethod.Target">
            <summary>
            Set the subscription balance to the AmountInCents
            </summary>
        </member>
        <member name="T:ChargifyNET.IAdjustment">
            <summary>
            Adjustments allow you to change the current balance of a subscription.
            </summary>
        </member>
        <member name="P:ChargifyNET.IAdjustment.ID">
            <summary>
            The ID of the adjustment
            </summary>
        </member>
        <member name="P:ChargifyNET.IAdjustment.Success">
            <summary>
            (Currently, all adjustments return as successful
            </summary>
        </member>
        <member name="P:ChargifyNET.IAdjustment.Memo">
            <summary>
            A helpful explaination for the adjustment
            </summary>
        </member>
        <member name="P:ChargifyNET.IAdjustment.AmountInCents">
            <summary>
            The amount of the adjustment (in cents)
            </summary>
        </member>
        <member name="P:ChargifyNET.IAdjustment.Amount">
            <summary>
            The amount of the adjustment
            </summary>
        </member>
        <member name="P:ChargifyNET.IAdjustment.EndingBalanceInCents">
            <summary>
            The subscription balance after the adjustment (in cents)
            </summary>
        </member>
        <member name="P:ChargifyNET.IAdjustment.EndingBalance">
            <summary>
            The subscription balance after the adjustment
            </summary>
        </member>
        <member name="P:ChargifyNET.IAdjustment.Type">
            <summary>
            The type of the adjustment
            </summary>
        </member>
        <member name="P:ChargifyNET.IAdjustment.TransactionType">
            <summary>
            The type of transaction done by the adjustment
            </summary>
        </member>
        <member name="P:ChargifyNET.IAdjustment.SubscriptionID">
            <summary>
            The subscription the adjustment was created for
            </summary>
        </member>
        <member name="P:ChargifyNET.IAdjustment.ProductID">
            <summary>
            The subscribed product at the time of the adjustment
            </summary>
        </member>
        <member name="P:ChargifyNET.IAdjustment.CreatedAt">
            <summary>
            The date the adjustment was created
            </summary>
        </member>
        <member name="T:ChargifyNET.IBillingManagementInfo">
            <summary>
            From http://docs.chargify.com/api-billing-portal
            </summary>
        </member>
        <member name="P:ChargifyNET.IBillingManagementInfo.URL">
            <summary>
            The customer's management URL
            </summary>
        </member>
        <member name="P:ChargifyNET.IBillingManagementInfo.FetchCount">
            <summary>
            Number of times this link has been retrieved (at 15 you will be blocked)
            </summary>
        </member>
        <member name="P:ChargifyNET.IBillingManagementInfo.CreatedAt">
            <summary>
            When this link was created
            </summary>
        </member>
        <member name="P:ChargifyNET.IBillingManagementInfo.NewLinkAvailableAt">
            <summary>
            When a new link will be available and fetch_count is reset (15 days from when it was created)
            </summary>
        </member>
        <member name="P:ChargifyNET.IBillingManagementInfo.ExpiresAt">
            <summary>
            When this link expires (65 days from when it was created)
            </summary>
        </member>
        <member name="T:ChargifyNET.IChargeCreateOptions">
            <summary>
            Charge create/input options
            </summary>
        </member>
        <member name="P:ChargifyNET.IChargeCreateOptions.Amount">
            <summary>
            The amount of the charge
            </summary>
        </member>
        <member name="P:ChargifyNET.IChargeCreateOptions.AmountInCents">
            <summary>
            The amount of the charge (in cents)
            </summary>
        </member>
        <member name="P:ChargifyNET.IChargeCreateOptions.Memo">
            <summary>
            The charge memo/description
            </summary>
        </member>
        <member name="P:ChargifyNET.IChargeCreateOptions.UseNegativeBalance">
            <summary>
            Should the negative balance be used when processing this charge?
            </summary>
        </member>
        <member name="P:ChargifyNET.IChargeCreateOptions.DelayCapture">
            <summary>
            Should the charge be delayed until the next assessment date?
            </summary>
        </member>
        <member name="P:ChargifyNET.IChargeCreateOptions.AccrueOnFailure">
            <summary>
            Should the charge accrue on the balance if the charge failed now
            </summary>
        </member>
        <member name="P:ChargifyNET.IChargeCreateOptions.Taxable">
            <summary>
            Is the charge taxable?
            </summary>
        </member>
        <member name="P:ChargifyNET.IChargeCreateOptions.PaymentCollectionMethod">
            <summary>
            The collection method for this charge
            </summary>
        </member>
        <member name="T:ChargifyNET.ChargeCreateOptions">
            <summary>
            The charge create/input options
            </summary>
        </member>
        <member name="P:ChargifyNET.ChargeCreateOptions.Amount">
            <summary>
            The amount of the charge
            </summary>
        </member>
        <member name="M:ChargifyNET.ChargeCreateOptions.ShouldSerializeAmount">
            <summary>
            Ignore, used to determine if the field should be serialized
            </summary>
        </member>
        <member name="P:ChargifyNET.ChargeCreateOptions.AmountInCents">
            <summary>
            The amount of the charge (in cents)
            </summary>
        </member>
        <member name="M:ChargifyNET.ChargeCreateOptions.ShouldSerializeAmountInCents">
            <summary>
            Ignore, used to determine if the field should be serialized
            </summary>
        </member>
        <member name="P:ChargifyNET.ChargeCreateOptions.Memo">
            <summary>
            The charge memo/description
            </summary>
        </member>
        <member name="M:ChargifyNET.ChargeCreateOptions.ShouldSerializeMemo">
            <summary>
            Ignore, used to determine if the field should be serialized
            </summary>
        </member>
        <member name="P:ChargifyNET.ChargeCreateOptions.UseNegativeBalance">
            <summary>
            Should the negative balance be used when processing this charge?
            </summary>
        </member>
        <member name="M:ChargifyNET.ChargeCreateOptions.ShouldSerializeUseNegativeBalance">
            <summary>
            Ignore, used to determine if the field should be serialized
            </summary>
        </member>
        <member name="P:ChargifyNET.ChargeCreateOptions.DelayCapture">
            <summary>
            Should the charge be delayed until the next assessment date?
            </summary>
        </member>
        <member name="M:ChargifyNET.ChargeCreateOptions.ShouldSerializeDelayCapture">
            <summary>
            Ignore, used to determine if the field should be serialized
            </summary>
        </member>
        <member name="P:ChargifyNET.ChargeCreateOptions.AccrueOnFailure">
            <summary>
            Should the charge accrue on the balance if the charge failed now
            </summary>
        </member>
        <member name="M:ChargifyNET.ChargeCreateOptions.ShouldSerializeAccrueOnFailure">
            <summary>
            Ignore, used to determine if the field should be serialized
            </summary>
        </member>
        <member name="P:ChargifyNET.ChargeCreateOptions.Taxable">
            <summary>
            Is the charge taxable?
            </summary>
        </member>
        <member name="M:ChargifyNET.ChargeCreateOptions.ShouldSerializeTaxable">
            <summary>
            Ignore, used to determine if the field should be serialized
            </summary>
        </member>
        <member name="P:ChargifyNET.ChargeCreateOptions.PaymentCollectionMethod">
            <summary>
            The collection method for this charge
            </summary>
        </member>
        <member name="M:ChargifyNET.ChargeCreateOptions.ShouldSerializePaymentCollectionMethod">
            <summary>
            Ignore, used to determine if the field should be serialized
            </summary>
        </member>
        <member name="T:ChargifyNET.ICharge">
            <summary>
            The one time charge class
            </summary>
        </member>
        <member name="P:ChargifyNET.ICharge.Success">
            <summary>
            Either true or false, depending on the success of the charge.
            <remarks>At this time, all charges that are returned will return true here. 
            Flase may be returned in the future when more options are added to the charge creation API</remarks>
            </summary>
        </member>
        <member name="P:ChargifyNET.ICharge.AmountInCents">
            <summary>
            Get the amount (in cents)
            </summary>
        </member>
        <member name="P:ChargifyNET.ICharge.Amount">
            <summary>
            Get the amount, in dollars and cents.
            </summary>
        </member>
        <member name="P:ChargifyNET.ICharge.Memo">
            <summary>
            The memo for the created charge
            </summary>
        </member>
        <member name="P:ChargifyNET.ICharge.CreatedAt">
            <summary>
            The date the charge was created
            </summary>
        </member>
        <member name="P:ChargifyNET.ICharge.EndingBalanceInCents">
            <summary>
            The ending balance of the subscription, in cents
            </summary>
        </member>
        <member name="P:ChargifyNET.ICharge.EndingBalance">
            <summary>
            The ending balance of the subscription, in dollars and cents (formatted as decimal)
            </summary>
        </member>
        <member name="P:ChargifyNET.ICharge.ID">
            <summary>
            The ID of the charge
            </summary>
        </member>
        <member name="P:ChargifyNET.ICharge.Kind">
            <summary>
            The kind of charge
            </summary>
        </member>
        <member name="P:ChargifyNET.ICharge.PaymentID">
            <summary>
            The ID of the payment associated with this charge
            </summary>
        </member>
        <member name="P:ChargifyNET.ICharge.ProductID">
            <summary>
            The product ID the subscription was subscribed to at the time of the charge
            </summary>
        </member>
        <member name="P:ChargifyNET.ICharge.SubscriptionID">
            <summary>
            The subscription ID that this charge was applied to
            </summary>
        </member>
        <member name="P:ChargifyNET.ICharge.ChargeType">
            <summary>
            The type of charge
            </summary>
        </member>
        <member name="P:ChargifyNET.ICharge.TransactionType">
            <summary>
            The type of transaction
            </summary>
        </member>
        <member name="P:ChargifyNET.ICharge.GatewayTransactionID">
            <summary>
            The ID of the gateway transaction, useful for debugging.
            </summary>
        </member>
        <member name="T:ChargifyNET.IChargifyConnect">
            <summary>
            Wrapper interface
            </summary>
        </member>
        <member name="M:ChargifyNET.IChargifyConnect.CreateAdjustment(System.Int32,System.Decimal,System.String)">
            <summary>
            Method for applying an adjustment to a subscription
            </summary>
            <param name="SubscriptionID">The ID of the subscription to adjust</param>
            <param name="amount">The amount (in dollars and cents)</param>
            <param name="memo">A helpful explaination of the adjustment</param>
            <returns>The adjustment object if successful, null otherwise.</returns>
        </member>
        <member name="M:ChargifyNET.IChargifyConnect.CreateAdjustment(System.Int32,System.Decimal,System.String,ChargifyNET.AdjustmentMethod)">
            <summary>
            Method for applying an adjustment to a subscription
            </summary>
            <param name="SubscriptionID">The ID of the subscription to adjust</param>
            <param name="amount">The amount (in dollars and cents)</param>
            <param name="memo">A helpful explaination of the adjustment</param>
            <param name="method">A string that toggles how the adjustment should be applied</param>
            <returns>The adjustment object if successful, null otherwise.</returns>
        </member>
        <member name="M:ChargifyNET.IChargifyConnect.CreateAdjustment(System.Int32,System.Int32,System.String)">
            <summary>
            Method for applying an adjustment to a subscription
            </summary>
            <param name="SubscriptionID">The ID of the subscription to adjust</param>        
            <param name="amount_in_cents">The amount (in cents)</param>
            <param name="memo">A helpful explaination of the adjustment</param>
            <returns>The adjustment object if successful, null otherwise.</returns>
        </member>
        <member name="M:ChargifyNET.IChargifyConnect.CreateAdjustment(System.Int32,System.Int32,System.String,ChargifyNET.AdjustmentMethod)">
            <summary>
            Method for applying an adjustment to a subscription
            </summary>
            <param name="SubscriptionID">The ID of the subscription to adjust</param>        
            <param name="amount_in_cents">The amount (in cents)</param>
            <param name="memo">A helpful explaination of the adjustment</param>
            <param name="method">A string that toggles how the adjustment should be applied</param>
            <returns>The adjustment object if successful, null otherwise.</returns>
        </member>
        <member name="M:ChargifyNET.IChargifyConnect.PreviewMigrateSubscriptionProduct(System.Int32,System.Int32,System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean})">
            <summary>
            Method that returns information about what would be done to the subscription if you migrated using these settings
            </summary>
            <param name="SubscriptionID">The subscription to run this preview against</param>
            <param name="ProductID">The product ID to migrate to</param>
            <param name="IncludeTrial">Should the trial be included?</param>
            <param name="IncludeInitialCharge">Should the initial charge (if applicable) be included?</param>
            <param name="IncludeCoupons">Should existing coupons be included?</param>
            <returns>Details about the migration, if successful. Null otherwise.</returns>
        </member>
        <member name="M:ChargifyNET.IChargifyConnect.PreviewMigrateSubscriptionProduct(System.Int32,System.Int32)">
            <summary>
            Method that returns information about what would be done to the subscription if you migrated using these settings
            </summary>
            <param name="SubscriptionID">The subscription to run this preview against</param>
            <param name="ProductID">The product ID to migrate to</param>
            <returns>Details about the migration, if successful. Null otherwise.</returns>
        </member>
        <member name="M:ChargifyNET.IChargifyConnect.PreviewMigrateSubscriptionProduct(ChargifyNET.ISubscription,ChargifyNET.IProduct)">
            <summary>
            Method that returns information about what would be done to the subscription if you migrated using these settings
            </summary>
            <param name="Subscription">The subscription to run this preview against</param>
            <param name="Product">The product ID to migrate to</param>
            <returns>Details about the migration, if successful. Null otherwise.</returns>
        </member>
        <member name="M:ChargifyNET.IChargifyConnect.SetComponent(System.Int32,System.Int32,System.Boolean)">
            <summary>
            Method for turning on or off a component
            </summary>
            <param name="SubscriptionID">The ID of the subscription to modify</param>
            <param name="ComponentID">The ID of the component (on/off only) to modify</param>
            <param name="SetEnabled">True if wanting to turn the component "on", false otherwise.</param>
            <returns>IComponentAttributes object if successful, null otherwise.</returns>
        </member>
        <member name="M:ChargifyNET.IChargifyConnect.GetComponentList(System.Int32,System.Int32)">
            <summary>
            Method for getting a list of component usages for a specific subscription
            </summary>
            <param name="SubscriptionID">The subscription ID to examine</param>
            <param name="ComponentID">The ID of the component to examine</param>
            <returns>A dictionary of usages if there are results, null otherwise.</returns>
        </member>
        <member name="M:ChargifyNET.IChargifyConnect.GetComponentsForProductFamily(System.Int64)">
            <summary>
            Method for getting a list of components for a specific product family
            </summary>
            <param name="chargifyId">The product family ID</param>
            <returns>A dictionary of components if there are results, null otherwise.</returns>
        </member>
        <member name="M:ChargifyNET.IChargifyConnect.GetComponentsForProductFamily(System.Int64,System.Boolean)">
            <summary>
            Method for getting a list of components for a specific product family
            </summary>
            <param name="chargifyId">The product family ID</param>
            <param name="includeArchived">Filter flag for archived components</param>
            <returns>A dictionary of components if there are results, null otherwise.</returns>
        </member>
        <member name="M:ChargifyNET.IChargifyConnect.GetComponentsForSubscription(System.Int32)">
            <summary>
            Returns all components "attached" to that subscription.
            </summary>
            <param name="SubscriptionID">The ID of the subscription to query about</param>
            <returns>A dictionary of components, if applicable.</returns>
        </member>
        <member name="M:ChargifyNET.IChargifyConnect.UpdateComponentAllocationForSubscription(System.Int32,System.Int32,System.Int32)">
            <summary>
            Method to update the allocated amount of a component for a subscription
            </summary>
            <param name="SubscriptionID">The ID of the subscription to modify the allocation for</param>
            <param name="ComponentID">The ID of the component</param>
            <param name="NewAllocatedQuantity">The quantity of component to allocate to the subscription</param>
        </member>
        <member name="M:ChargifyNET.IChargifyConnect.GetComponentInfoForSubscription(System.Int32,System.Int32)">
            <summary>
            Method to retrieve the current information (including allocation) of a component against a subscription
            </summary>
            <param name="SubscriptionID">The ID of the subscription in question</param>
            <param name="ComponentID">The ID of the component</param>
            <returns>The ComponentAttributes object, null otherwise.</returns>
        </member>
        <member name="M:ChargifyNET.IChargifyConnect.GetAllocationListForSubscriptionComponent(System.Int32,System.Int32,System.Nullable{System.Int32})">
            <summary>
            Returns the 50 most recent Allocations, ordered by most recent first.
            </summary>
            <param name="SubscriptionID">The subscriptionID to scope this request</param>
            <param name="ComponentID">The componentID to scope this request</param>
            <param name="Page">Pass an integer in the page parameter via the query string to access subsequent pages of 50 transactions</param>
            <returns>A dictionary of allocation objects keyed by ComponentID, or null.</returns>
        </member>
        <member name="M:ChargifyNET.IChargifyConnect.CreateComponentAllocation(System.Int32,System.Int32,ChargifyNET.ComponentAllocation)">
            <summary>
            Creates a new Allocation, setting the current allocated quantity for the component and recording a memo.
            </summary>
            <param name="SubscriptionID"></param>
            <param name="ComponentID"></param>
            <param name="Allocation"></param>
            <returns></returns>
        </member>
        <member name="M:ChargifyNET.IChargifyConnect.CreateComponentAllocation(System.Int32,System.Int32,System.Int32)">
            <summary>
            Creates a new Allocation, setting the current allocated quantity for the component and recording a memo.
            </summary>
            <param name="SubscriptionID">The ID of the subscription to apply this quantity allocation to</param>
            <param name="ComponentID">The ID of the component to apply this quantity allocation to</param>
            <param name="Quantity">The allocated quantity to which to set the line-items allocated quantity. This should always be an integer. For On/Off components, use 1 for on and 0 for off.</param>
            <returns></returns>
        </member>
        <member name="M:ChargifyNET.IChargifyConnect.CreateComponentAllocation(System.Int32,System.Int32,System.Int32,System.String)">
            <summary>
            Creates a new Allocation, setting the current allocated quantity for the component and recording a memo.
            </summary>
            <param name="SubscriptionID">The ID of the subscription to apply this quantity allocation to</param>
            <param name="ComponentID">The ID of the component to apply this quantity allocation to</param>
            <param name="Quantity">The allocated quantity to which to set the line-items allocated quantity. This should always be an integer. For On/Off components, use 1 for on and 0 for off.</param>
            <param name="Memo">(optional) A memo to record along with the allocation</param>
            <returns></returns>
        </member>
        <member name="M:ChargifyNET.IChargifyConnect.CreateComponentAllocation(System.Int32,System.Int32,System.Int32,System.String,ChargifyNET.ComponentUpgradeProrationScheme,ChargifyNET.ComponentDowngradeProrationScheme)">
            <summary>
            Creates a new Allocation, setting the current allocated quantity for the component and recording a memo.
            </summary>
            <param name="SubscriptionID">The ID of the subscription to apply this quantity allocation to</param>
            <param name="ComponentID">The ID of the component to apply this quantity allocation to</param>
            <param name="Quantity">The allocated quantity to which to set the line-items allocated quantity. This should always be an integer. For On/Off components, use 1 for on and 0 for off.</param>
            <param name="Memo">(optional) A memo to record along with the allocation</param>
            <param name="UpgradeScheme">(optional) The scheme used if the proration is an upgrade. Defaults to the site setting if one is not provided.</param>
            <param name="DowngradeScheme">(optional) The scheme used if the proration is a downgrade. Defaults to the site setting if one is not provided.</param>
            <returns>The component allocation object, null otherwise.</returns>
        </member>
        <member name="M:ChargifyNET.IChargifyConnect.AddCoupon(System.Int32,System.String)">
            <summary>
            Method to add a coupon to a subscription using the API
            </summary>
            <param name="SubscriptionID">The ID of the subscription to modify</param>
            <param name="CouponCode">The code of the coupon to apply to the subscription</param>
            <returns>The subscription details if successful, null otherwise.</returns>
        </member>
        <member name="M:ChargifyNET.IChargifyConnect.GetAllCoupons(System.Int32)">
            <summary>
            Method for retrieving information about a coupon using the ID of that coupon.
            </summary>
            <param name="ProductFamilyID">The ID of the product family that the coupon belongs to</param>
            <returns>A dictionary of objects if found, empty collection otherwise.</returns>
        </member>
        <member name="M:ChargifyNET.IChargifyConnect.GetCouponUsage(System.Int32)">
            <summary>
            Method for retrieving information about a coupon usage using the ID of that coupon.
            </summary>
            <param name="CouponID">The ID of the coupon</param>
            <returns>The object if found, null otherwise.</returns>
        </member>
        <member name="M:ChargifyNET.IChargifyConnect.RemoveCoupon(System.Int32,System.String)">
            <summary>
            Method to remove a coupon to a subscription using the API
            </summary>
            <param name="SubscriptionID">The ID of the subscription to modify</param>
            <param name="CouponCode">The code of the coupon to remove from the subscription</param>
            <returns>True if successful, false otherwise.</returns>
        </member>
        <member name="M:ChargifyNET.IChargifyConnect.GetManagementLink(System.Int64)">
            <summary>
            Retrieves the billing portal management link from Chargify. You must have the billing portal feature enabled for this to work.
            </summary>
            <param name="chargifyId">The ID of the customer (not reference)</param>
            <returns>The billing portal management link and additional information</returns>
        </member>
        <member name="M:ChargifyNET.IChargifyConnect.GetInvoiceList">
            <summary>
            Gets a list of invoices
            </summary>
            <returns></returns>
        </member>
        <member name="M:ChargifyNET.IChargifyConnect.AddInvoicePayment(System.Int32,System.Decimal,System.String)">
            <summary>
            Add a payment to a specific invoice
            </summary>
            <param name="invoiceId">The id of the invoice</param>
            <param name="amount">The amount of the payment (in dollars and cents)</param>
            <param name="memo">A memo, if applicable</param>
            <returns>Payment details, if successful. Null otherwise.</returns>
        </member>
        <member name="M:ChargifyNET.IChargifyConnect.AddInvoicePayment(System.Int32,System.Int32,System.String)">
            <summary>
            Add a payment to a specific invoice
            </summary>
            <param name="invoiceId">The id of the invoice</param>
            <param name="amountInCents">The amount of the payment (in cents)</param>
            <param name="memo">A memo, if applicable</param>
            <returns>Payment details, if successful. Null otherwise.</returns>
        </member>
        <member name="M:ChargifyNET.IChargifyConnect.GetMetadata``1">
            <summary>
            Returns a list of all metadata for a resource.
            </summary>
            <typeparam name="T">The type of resource. Currently either Subscription or Customer</typeparam>
            <returns>The metadata result containing the response</returns>
        </member>
        <member name="M:ChargifyNET.IChargifyConnect.GetMetadataFor``1(System.Int64,System.Nullable{System.Int32})">
            <summary>
            Retrieve all metadata for a specific resource (like a specific customer or subscription).
            </summary>
            <typeparam name="T">The type of resource. Currently either Subscription or Customer</typeparam>
            <param name="resourceID">The Chargify identifier for the resource</param>
            <param name="page">Which page to return -- Chargify Indexes Metadata Page at 1</param>
            <returns>The metadata result containing the response</returns>
        </member>
        <member name="M:ChargifyNET.IChargifyConnect.SetMetadataFor``1(System.Int64,System.Collections.Generic.IList{ChargifyNET.Metadata})">
            <summary>
            Allows you to set a group of metadata for a specific resource
            </summary>
            <typeparam name="T">The type of resource. Currently either Subscription or Customer</typeparam>
            <param name="chargifyId">The Chargify identifier for the resource</param>
            <param name="metadata">The list of metadata to set</param>
            <returns>The metadata result containing the response</returns>
        </member>
        <member name="M:ChargifyNET.IChargifyConnect.SetMetadataFor``1(System.Int64,ChargifyNET.Metadata)">
            <summary>
            Allows you to set a single metadata for a specific resource
            </summary>
            <typeparam name="T">The type of resource. Currently either Subscription or Customer</typeparam>
            <param name="chargifyId">The Chargify identifier for the resource</param>
            <param name="metadata">The list of metadata to set</param>
            <returns>The metadata result containing the response</returns>
        </member>
        <member name="M:ChargifyNET.IChargifyConnect.ClearTestSite(System.Nullable{ChargifyNET.SiteCleanupScope})">
            <summary>
            Clean up a site in test mode.
            </summary>
            <param name="CleanupScope">What should be cleaned? DEFAULT IS CUSTOMERS ONLY.</param>
            <returns>True if complete, false otherwise</returns>
            <remarks>If used against a production site, the result will always be false.</remarks>
        </member>
        <member name="M:ChargifyNET.IChargifyConnect.AddPayment(System.Int32,System.Decimal,System.String)">
            <summary>
            Chargify allows you to record payments that occur outside of the normal flow of payment processing.
            These payments are considered external payments.A common case to apply such a payment is when a 
            customer pays by check or some other means for their subscription.
            </summary>
            <param name="SubscriptionID">The ID of the subscription to apply this manual payment record to</param>
            <param name="Amount">The decimal amount of the payment (ie. 10.00 for $10)</param>
            <param name="Memo">The memo to include with the manual payment</param>
            <returns>The payment result, null otherwise.</returns>
        </member>
        <member name="M:ChargifyNET.IChargifyConnect.AddPayment(System.Int32,System.Int32,System.String)">
            <summary>
            Chargify allows you to record payments that occur outside of the normal flow of payment processing.
            These payments are considered external payments.A common case to apply such a payment is when a 
            customer pays by check or some other means for their subscription.
            </summary>
            <param name="SubscriptionID">The ID of the subscription to apply this manual payment record to</param>
            <param name="AmountInCents">The amount in cents of the payment (ie. $10 would be 1000 cents)</param>
            <param name="Memo">The memo to include with the manual payment</param>
            <returns>The payment result, null otherwise.</returns>
        </member>
        <member name="M:ChargifyNET.IChargifyConnect.SetSubscriptionOverride(System.Int32,ChargifyNET.ISubscriptionOverride)">
            <summary>
            This API endpoint allows you to set certain subscription fields that are usually managed for you automatically. Some of the fields can be set via the normal Subscriptions Update API, but others can only be set using this endpoint.
            </summary>
            <param name="SubscriptionID"></param>
            <param name="OverrideDetails"></param>
            <returns>The details returned by Chargify</returns>
        </member>
        <member name="M:ChargifyNET.IChargifyConnect.SetSubscriptionOverride(System.Int32,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.String,System.Nullable{System.DateTime})">
            <summary>
            This API endpoint allows you to set certain subscription fields that are usually managed for you automatically. Some of the fields can be set via the normal Subscriptions Update API, but others can only be set using this endpoint.
            </summary>
            <param name="SubscriptionID"></param>
            <param name="ActivatedAt"></param>
            <param name="CanceledAt"></param>
            <param name="CancellationMessage"></param>
            <param name="ExpiresAt"></param>
            <returns></returns>
        </member>
        <member name="M:ChargifyNET.IChargifyConnect.LoadPaymentProfile(System.Int32)">
            <summary>
            Retrieve a payment profile
            </summary>
            <param name="ID">The ID of the payment profile</param>
            <returns>The payment profile, null if not found.</returns>
        </member>
        <member name="M:ChargifyNET.IChargifyConnect.UpdatePaymentProfile(ChargifyNET.PaymentProfileView)">
            <summary>
            Updates a payment profile
            </summary>
            <param name="PaymentProfile">The payment profile object</param>
            <returns>The updated payment profile if successful, null or exception otherwise.</returns>
        </member>
        <member name="M:ChargifyNET.IChargifyConnect.CancelDelayedProductChange(System.Int32)">
            <summary>
            Cancel the delayed product change
            </summary>
            <param name="subscriptionId">The id of the subscription</param>
            <returns>The subscription</returns>
        </member>
        <member name="M:ChargifyNET.IChargifyConnect.UpdateProduct(System.Int32,ChargifyNET.IProduct)">
            <summary>
            Method that updates a product
            </summary>
            <param name="ProductID">The ID of the product to update</param>
            <param name="UpdatedProduct">The details of the updated product</param>
            <returns>The updated product</returns>
        </member>
        <member name="M:ChargifyNET.IChargifyConnect.LoadProduct(System.String)">
            <summary>
            Load the requested product from chargify by its handle
            </summary>
            <param name="Handle">The Chargify ID or handle of the product</param>
            <returns>The product with the specified chargify ID</returns>
        </member>
        <member name="M:ChargifyNET.IChargifyConnect.LoadProduct(System.String,System.Boolean)">
            <summary>
            Load the requested product from chargify
            </summary>
            <param name="ProductID">The Chargify ID or handle of the product</param>
            <param name="IsHandle">If true, then the ProductID represents the handle, if false the ProductID represents the Chargify ID</param>
            <returns>The product with the specified chargify ID</returns>
        </member>
        <member name="M:ChargifyNET.IChargifyConnect.GetProductList">
            <summary>
            Get a list of products
            </summary>
            <returns>A list of products (keyed by product handle)</returns>
        </member>
        <member name="M:ChargifyNET.IChargifyConnect.CreateProduct(System.Int32,ChargifyNET.IProduct)">
            <summary>
            Method to create a new product and add it to the site
            </summary>
            <param name="ProductFamilyID">The product family to which this new product should be added</param>
            <param name="NewProduct">The new product details</param>
            <returns>The completed product information</returns>
        </member>
        <member name="M:ChargifyNET.IChargifyConnect.CreateProduct(System.Int32,System.String,System.String,System.Int32,System.Int32,ChargifyNET.IntervalUnit,System.String,System.String)">
            <summary>
            Allows the creation of a product
            </summary>
            <param name="ProductFamilyID">The family to which this product belongs</param>
            <param name="Name">The name of the product</param>
            <param name="Handle">The handle to be used for this product</param>
            <param name="PriceInCents">The price (in cents)</param>
            <param name="Interval">The time interval used to determine the recurring nature of this product</param>
            <param name="IntervalUnit">Either days, or months</param>
            <param name="AccountingCode">The accounting code used for this product</param>
            <param name="Description">The product description</param>
            <returns>The created product</returns>
        </member>
        <member name="M:ChargifyNET.IChargifyConnect.PreviewRenewal(System.Int32)">
            <summary>
            Renewal Preview is an object representing a subscription’s next assessment. 
            You can retrieve it to see a snapshot of how much your customer will be charged on their next renewal.
            </summary>
            <param name="subscriptionID">Integer, the id for the subscription that is to be previewed</param>
            <returns>The snapshot of how much your customer will be charged on their next renewal</returns>
        </member>
        <member name="M:ChargifyNET.IChargifyConnect.CreateNote(ChargifyNET.INote)">
            <summary>
            Create note
            </summary>
            <param name="NewNote">The new note information</param>
            <returns>The note (with id) if successful, null otherwise.</returns>
        </member>
        <member name="M:ChargifyNET.IChargifyConnect.CreateNote(System.Int32,System.String,System.Boolean)">
            <summary>
            Create note
            </summary>
            <param name="subscriptionId">The id of the subscription</param>
            <param name="body">The note body</param>
            <param name="sticky">Is the note sticky?</param>
            <returns>The note, if successful. Null otherwise</returns>
        </member>
        <member name="M:ChargifyNET.IChargifyConnect.GetNotesForSubscription(System.Int32)">
            <summary>
            Gets the notes for a particular subscription
            </summary>
            <param name="SubscriptionID">The id of the subscription</param>
            <returns>The collection of notes, keyed by note id. Empty collection otherwise.</returns>
        </member>
        <member name="M:ChargifyNET.IChargifyConnect.LoadNote(System.Int32,System.Int32)">
            <summary>
            Load a particular note
            </summary>
            <param name="SubscriptionID">The related subscription id</param>
            <param name="NoteID">The id of the ntoe</param>
            <returns></returns>
        </member>
        <member name="M:ChargifyNET.IChargifyConnect.DeleteNote(System.Int32,System.Int32)">
            <summary>
            Delete a note
            </summary>
            <param name="SubscriptionID">The related subscription id</param>
            <param name="NoteID">The id of the ntoe</param>
            <returns>True if successful, false otherwise.</returns>
        </member>
        <member name="M:ChargifyNET.IChargifyConnect.UpdateNote(System.Int32,ChargifyNET.INote)">
            <summary>
            
            </summary>
            <param name="SubscriptionID">The related subscription id</param>
            <param name="UpdatedNote">The updated note information</param>
            <returns>The updated note, if successful. Null otherwise.</returns>
        </member>
        <member name="M:ChargifyNET.IChargifyConnect.AddUsage(System.Int32,System.Int32,System.Int32,System.String)">
            <summary>
            Method for adding a metered component usage to the subscription
            </summary>
            <param name="SubscriptionID">The subscriptionID to modify</param>
            <param name="ComponentID">The ID of the component (metered or quantity) to add a usage of</param>
            <param name="Quantity">The number of usages to add</param>
            <param name="Memo">The memo for the usage</param>
            <returns>The usage added if successful, otherwise null.</returns>
        </member>
        <member name="M:ChargifyNET.IChargifyConnect.CreateProductFamily(ChargifyNET.IProductFamily)">
            <summary>
            Method for creating a new product family via the API
            </summary>
            <param name="newFamily">The new product family details</param>
            <returns>The created product family information</returns>
        </member>
        <member name="M:ChargifyNET.IChargifyConnect.GetProductFamilyList">
            <summary>
            Get a list of product families
            </summary>
            <returns>A list of product families (keyed by product family id)</returns>
        </member>
        <member name="M:ChargifyNET.IChargifyConnect.LoadProductFamily(System.String)">
            <summary>
            Load the requested product family from chargify by its handle
            </summary>
            <param name="Handle">The Chargify ID or handle of the product</param>
            <returns>The product family with the specified chargify ID</returns>
        </member>
        <member name="M:ChargifyNET.IChargifyConnect.LoadProductFamily(System.Int32)">
            <summary>
            Load the requested product family from chargify by its handle
            </summary>
            <param name="ID">The Chargify ID of the product</param>
            <returns>The product family with the specified chargify ID</returns>
        </member>
        <member name="M:ChargifyNET.IChargifyConnect.CreateCharge(System.Int32,ChargifyNET.ICharge)">
            <summary>
            Create a new one-time charge
            </summary>
            <param name="SubscriptionID">The subscription that will be charged</param>
            <param name="Charge">The charge parameters</param>
            <returns></returns>
        </member>
        <member name="M:ChargifyNET.IChargifyConnect.CreateCharge(System.Int32,System.Decimal,System.String,System.Boolean,System.Boolean)">
            <summary>
            Create a new one-time charge
            </summary>
            <param name="SubscriptionID">The subscription that will be charged</param>
            <param name="amount">The amount to charge the customer</param>
            <param name="memo">A description of the charge</param>
            <param name="delayCharge">(Optional) Should the charge be billed during the next assessment? Default = false</param>
            <param name="useNegativeBalance">(Optional) Should the subscription balance be taken into consideration? Default = false</param>
            <returns>The charge details</returns>
        </member>
        <member name="M:ChargifyNET.IChargifyConnect.CreateCoupon(ChargifyNET.ICoupon,System.Int32)">
            <summary>
            Create a new one-time credit
            </summary>
            <param name="Coupon">The coupon parameters</param>
            <param name="ProductFamilyID">The ID of the product family to add this coupon to.</param>
            <returns>The object if successful, null otherwise.</returns>
        </member>
        <member name="M:ChargifyNET.IChargifyConnect.UpdateCoupon(ChargifyNET.ICoupon)">
            <summary>
            Update an existing coupon
            </summary>
            <param name="Coupon">Coupon object</param>
            <returns>The updated coupon if successful, null otherwise.</returns>
        </member>
        <member name="M:ChargifyNET.IChargifyConnect.FindCoupon(System.Int32,System.String)">
            <summary>
            Retrieve the coupon corresponding to the coupon code, useful for coupon validation.
            </summary>
            <param name="ProductFamilyID">The ID of the product family the coupon belongs to</param>
            <param name="CouponCode">The code used to represent the coupon</param>
            <returns>The object if found, otherwise null.</returns>
        </member>
        <member name="M:ChargifyNET.IChargifyConnect.LoadCoupon(System.Int32,System.Int32)">
            <summary>
            Method for retrieving information about a coupon using the ID of that coupon.
            </summary>
            <param name="ProductFamilyID">The ID of the product family that the coupon belongs to</param>
            <param name="CouponID">The ID of the coupon</param>
            <returns>The object if found, null otherwise.</returns>
        </member>
        <member name="M:ChargifyNET.IChargifyConnect.CreateCredit(System.Int32,ChargifyNET.ICredit)">
            <summary>
            Create a new one-time credit
            </summary>
            <param name="SubscriptionID">The subscription that will be credited</param>
            <param name="Credit">The credit parameters</param>
            <returns>The object if successful, null otherwise.</returns>
        </member>
        <member name="M:ChargifyNET.IChargifyConnect.CreateCredit(System.Int32,System.Decimal,System.String)">
            <summary>
            Create a new one-time credit
            </summary>
            <param name="SubscriptionID">The subscription that will be credited</param>
            <param name="amount">The amount to credit the customer</param>
            <param name="memo">A note regarding the reason for the credit</param>
            <returns>The object if successful, null otherwise.</returns>
        </member>
        <member name="M:ChargifyNET.IChargifyConnect.UpdateCustomer(ChargifyNET.ICustomer)">
            <summary>
            Update the specified chargify customer
            </summary>
            <param name="Customer">The customer to update</param>
            <returns>The updated customer, null otherwise.</returns>
        </member>
        <member name="M:ChargifyNET.IChargifyConnect.CreateCustomer(ChargifyNET.ICustomer)">
            <summary>
            Create a new chargify customer
            </summary>
            <param name="Customer">
            A customer object containing customer attributes.  The customer cannot be an existing saved chargify customer
            </param>
            <returns>The created chargify customer</returns>
        </member>
        <member name="M:ChargifyNET.IChargifyConnect.CreateCustomer(System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Create a new chargify customer
            </summary>
            <param name="FirstName">The first name of the customer</param>
            <param name="LastName">The last name of the customer</param>
            <param name="EmailAddress">The email address of the customer</param>
            <param name="Phone">The customers phone number</param>
            <param name="Organization">The organization of the customer</param>
            <param name="SystemID">The system ID for the customer</param>
            <returns>The created chargify customer</returns>
        </member>
        <member name="M:ChargifyNET.IChargifyConnect.DeleteCustomer(System.Int64)">
            <summary>
            Delete the specified customer
            </summary>
            <param name="chargifyId">The integer identifier of the customer</param>
            <returns>True if the customer was deleted, false otherwise.</returns>
            <remarks>This method does not currently work, but it will once they open up the API. This will always return false, as Chargify will send a Http Forbidden everytime.</remarks>
        </member>
        <member name="M:ChargifyNET.IChargifyConnect.DeleteCustomer(System.String)">
            <summary>
            Delete the specified customer
            </summary>
            <param name="SystemID">The system identifier of the customer.</param>
            <returns>True if the customer was deleted, false otherwise.</returns>
            <remarks>This method does not currently work, but it will once they open up the API. This will always return false, as Chargify will send a Http Forbidden everytime.</remarks>
        </member>
        <member name="M:ChargifyNET.IChargifyConnect.GetCustomerList">
            <summary>
            Get a list of all customers.  Be careful calling this method because a large number of
            customers will result in multiple calls to Chargify
            </summary>
            <returns>A list of customers</returns>
        </member>
        <member name="M:ChargifyNET.IChargifyConnect.GetCustomerList(System.Boolean)">
            <summary>
            Get a list of all customers.  Be careful calling this method because a large number of
            customers will result in multiple calls to Chargify
            </summary>
            <param name="keyByChargifyID">If true, the key will be the ChargifyID, otherwise it will be the reference value</param>
            <returns>A list of customers</returns>
        </member>
        <member name="M:ChargifyNET.IChargifyConnect.GetCustomerList(System.Int32)">
            <summary>
            Get a list of customers (will return 50 for each page)
            </summary>
            <param name="PageNumber">The page number to load</param>
            <returns>A list of customers for the specified page</returns>
        </member>
        <member name="M:ChargifyNET.IChargifyConnect.GetCustomerList(System.Int32,System.Boolean)">
            <summary>
            Get a list of customers (will return 50 for each page)
            </summary>
            <param name="PageNumber">The page number to load</param>
            /// <param name="keyByChargifyID">If true, the key will be the ChargifyID, otherwise it will be the reference value</param>
            <returns>A list of customers for the specified page</returns>
        </member>
        <member name="M:ChargifyNET.IChargifyConnect.LoadCustomer(System.Int64)">
            <summary>
            Load the requested customer from chargify
            </summary>
            <param name="ChargifyID">The chargify id of the customer</param>
            <returns>The requested customer, null otherwise</returns>
        </member>
        <member name="M:ChargifyNET.IChargifyConnect.LoadCustomer(System.String)">
            <summary>
            Load the requested customer from chargify
            </summary>
            <param name="SystemID">The system ID of the customer</param>
            <returns>The customer with the specified chargify ID</returns>
        </member>
        <member name="M:ChargifyNET.IChargifyConnect.UpdateSubscriptionCreditCard(ChargifyNET.ISubscription,ChargifyNET.ICreditCardAttributes)">
            <summary>
            Update the credit card information for an existing subscription
            </summary>
            <param name="Subscription">The subscription to update credit card info for</param>
            <param name="CreditCardAttributes">The attributes for the updated credit card</param>
            <returns>The new subscription resulting from the change</returns>
        </member>
        <member name="M:ChargifyNET.IChargifyConnect.UpdateSubscriptionCreditCard(ChargifyNET.ISubscription,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Update the credit card information for an existing subscription
            </summary>
            <param name="Subscription">The subscription to update credit card info for</param>
            <param name="FullNumber">The full number of the credit card (optional - set to null if not required)</param>
            <param name="ExpirationMonth">The expiration month of the credit card (optional - set to null if not required)</param>
            <param name="ExpirationYear">The expiration year of the credit card (optional - set to null if not required)</param>
            <param name="CVV">The CVV for the credit card (optional - set to null if not required)</param>
            <param name="BillingAddress">The billing address (optional - set to null if not required)</param>
            <param name="BillingCity">The billing city (optional - set to null if not required)</param>
            <param name="BillingState">The billing state or province (optional - set to null if not required)</param>
            <param name="BillingZip">The billing zip code or postal code (optional - set to null if not required)</param>
            <param name="BillingCountry">The billing country (optional - set to null if not required)</param>
            <returns>The new subscription resulting from the change</returns>
        </member>
        <member name="M:ChargifyNET.IChargifyConnect.UpdateSubscriptionCreditCard(System.Int32,ChargifyNET.ICreditCardAttributes)">
            <summary>
            Update the credit card information for an existing subscription
            </summary>
            <param name="SubscriptionID">The ID of the suscription to update</param>
            <param name="CreditCardAttributes">The attributes for the update credit card</param>
            <returns>The new subscription resulting from the change</returns>
        </member>
        <member name="M:ChargifyNET.IChargifyConnect.UpdateSubscriptionCreditCard(System.Int32,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Update the credit card information for an existing subscription
            </summary>
            <param name="SubscriptionID">The ID of the suscription to update</param>
            <param name="FullNumber">The full number of the credit card (optional - set to null if not required)</param>
            <param name="ExpirationMonth">The expiration month of the credit card (optional - set to null if not required)</param>
            <param name="ExpirationYear">The expiration year of the credit card (optional - set to null if not required)</param>
            <param name="CVV">The CVV for the credit card (optional - set to null if not required)</param>
            <param name="BillingAddress">The billing address (optional - set to null if not required)</param>
            <param name="BillingCity">The billing city (optional - set to null if not required)</param>
            <param name="BillingState">The billing state or province (optional - set to null if not required)</param>
            <param name="BillingZip">The billing zip code or postal code (optional - set to null if not required)</param>
            <param name="BillingCountry">The billing country (optional - set to null if not required)</param>
            <returns>The new subscription resulting from the change</returns>
        </member>
        <member name="M:ChargifyNET.IChargifyConnect.UpdateSubscriptionCreditCard(System.Int32,System.String,System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Update the credit card information for an existing subscription
            </summary>
            <param name="SubscriptionID">The ID of the suscription to update</param>
            <param name="FirstName">The first name on the credit card</param>
            <param name="LastName">The last name on the credit card</param>
            <param name="FullNumber">The full number of the credit card (optional - set to null if not required)</param>
            <param name="ExpirationMonth">The expiration month of the credit card (optional - set to null if not required)</param>
            <param name="ExpirationYear">The expiration year of the credit card (optional - set to null if not required)</param>
            <param name="CVV">The CVV for the credit card (optional - set to null if not required)</param>
            <param name="BillingAddress">The billing address (optional - set to null if not required)</param>
            <param name="BillingCity">The billing city (optional - set to null if not required)</param>
            <param name="BillingState">The billing state or province (optional - set to null if not required)</param>
            <param name="BillingZip">The billing zip code or postal code (optional - set to null if not required)</param>
            <param name="BillingCountry">The billing country (optional - set to null if not required)</param>
            <returns>The new subscription resulting from the change</returns>
        </member>
        <member name="M:ChargifyNET.IChargifyConnect.UpdateSubscription(ChargifyNET.ISubscription)">
            <summary>
            Update the specified chargify subscription
            </summary>
            <param name="Subscription">The subscription to update</param>
            <returns>The updated subscriptionn, null otherwise.</returns>
        </member>
        <member name="M:ChargifyNET.IChargifyConnect.UpdatePaymentCollectionMethod(System.Int32,ChargifyNET.PaymentCollectionMethod)">
            <summary>
            Update the collection method of the subscription
            </summary>
            <param name="SubscriptionID">The ID of the subscription to update</param>
            <param name="PaymentCollectionMethod">The collection method to set</param>
            <returns>The full details of the updated subscription</returns>
        </member>
        <member name="M:ChargifyNET.IChargifyConnect.ReactivateSubscription(System.Int32)">
            <summary>
            Chargify offers the ability to reactivate a previously canceled subscription. For details
            on how reactivation works, and how to reactivate subscriptions through the Admin interface, see
            http://support.chargify.com/faqs/features/reactivation
            </summary>
            <param name="SubscriptionID">The ID of the subscription to reactivate</param>
            <returns>The newly reactivated subscription, or nothing.</returns>
        </member>
        <member name="M:ChargifyNET.IChargifyConnect.ReactivateSubscription(System.Int32,System.Boolean)">
            <summary>
            Chargify offers the ability to reactivate a previously canceled subscription. For details
            on how reactivation works, and how to reactivate subscriptions through the Admin interface, see
            http://support.chargify.com/faqs/features/reactivation
            </summary>
            <param name="SubscriptionID">The ID of the subscription to reactivate</param>
            <param name="includeTrial">If true, the reactivated subscription will include a trial if one is available.</param>
            <returns>The newly reactivated subscription, or nothing.</returns>
        </member>
        <member name="M:ChargifyNET.IChargifyConnect.ReactivateSubscription(System.Int32,System.Boolean,System.Nullable{System.Boolean},System.String)">
            <summary>
            Chargify offers the ability to reactivate a previously canceled subscription. For details
            on how reactivation works, and how to reactivate subscriptions through the Admin interface, see
            http://support.chargify.com/faqs/features/reactivation
            </summary>
            <param name="SubscriptionID">The ID of the subscription to reactivate</param>
            <param name="includeTrial">If true, the reactivated subscription will include a trial if one is available.</param>
            <param name="preserveBalance">If true, the existing subscription balance will NOT be cleared/reset before adding the additional reactivation charges.</param>
            <param name="couponCode">The coupon code to be applied during reactivation.</param>
            <returns>The newly reactivated subscription, or nothing.</returns>
        </member>
        <member name="M:ChargifyNET.IChargifyConnect.ResetSubscriptionBalance(System.Int32)">
            <summary>
            Method for reseting a subscription balance to zero (removes outstanding balance). 
            Useful when reactivating subscriptions, and making sure not to charge the user
            their existing balance when then cancelled.
            </summary>
            <param name="SubscriptionID">The ID of the subscription to modify.</param>
            <returns>True if successful, false otherwise.</returns>
        </member>
        <member name="M:ChargifyNET.IChargifyConnect.GetSubscriptionList">
            <summary>
            Method that returns a list of subscriptions.
            </summary>
            <returns>Null if there are no results, object otherwise.</returns>
        </member>
        <member name="M:ChargifyNET.IChargifyConnect.GetSubscriptionList(ChargifyNET.SubscriptionState)">
            <summary>
            Method that returns a list of subscriptions.
            </summary>
            <param name="state">A list of the states of subscriptions to return</param>
            <returns>Null if there are no results, object otherwise.</returns>
        </member>
        <member name="M:ChargifyNET.IChargifyConnect.GetSubscriptionList(System.Int32,System.Int32)">
            <summary>
            Method that returns a list of subscriptions.
            </summary>
            <param name="page">The page number</param>
            <param name="per_page">The number of results per page (used for pagination)</param>
            <returns>Null if there are no results, object otherwise.</returns>
        </member>
        <member name="M:ChargifyNET.IChargifyConnect.MigrateSubscriptionProduct(ChargifyNET.ISubscription,ChargifyNET.IProduct,System.Boolean,System.Boolean)">
            <summary>
            Method to change the subscription product WITH proration.
            </summary>
            <param name="Subscription">The subscription to migrate</param>
            <param name="Product">The product to migrate the subscription to</param>
            <param name="IncludeTrial">Boolean, default false. If true, the customer will migrate to the new product
            if one is available. If false, the trial period will be ignored.</param>
            <param name="IncludeInitialCharge">Boolean, default false. If true, initial charges will be assessed.
            If false, initial charges will be ignored.</param>
            <returns></returns>
        </member>
        <member name="M:ChargifyNET.IChargifyConnect.MigrateSubscriptionProduct(ChargifyNET.ISubscription,System.String,System.Boolean,System.Boolean)">
            <summary>
            Method to change the subscription product WITH proration.
            </summary>
            <param name="Subscription">The subscription to migrate</param>
            <param name="ProductHandle">The product handle of the product to migrate to</param>
            <param name="IncludeTrial">Boolean, default false. If true, the customer will migrate to the new product
            if one is available. If false, the trial period will be ignored.</param>
            <param name="IncludeInitialCharge">Boolean, default false. If true, initial charges will be assessed.
            If false, initial charges will be ignored.</param>
            <returns>The completed subscription if migrated successfully, null otherwise.</returns>
        </member>
        <member name="M:ChargifyNET.IChargifyConnect.MigrateSubscriptionProduct(System.Int32,ChargifyNET.IProduct,System.Boolean,System.Boolean)">
            <summary>
            Method to change the subscription product WITH proration.
            </summary>
            <param name="SubscriptionID">The subscription to migrate</param>
            <param name="Product">The product to migrate to</param>
            <param name="IncludeTrial">Boolean, default false. If true, the customer will migrate to the new product
            if one is available. If false, the trial period will be ignored.</param>
            <param name="IncludeInitialCharge">Boolean, default false. If true, initial charges will be assessed.
            If false, initial charges will be ignored.</param>
            <returns>The completed subscription if migrated successfully, null otherwise.</returns>
        </member>
        <member name="M:ChargifyNET.IChargifyConnect.MigrateSubscriptionProduct(System.Int32,System.String,System.Boolean,System.Boolean)">
            <summary>
            Method to change the subscription product WITH proration.
            </summary>
            <param name="SubscriptionID">The subscription to migrate</param>
            <param name="ProductHandle">The product handle of the product to migrate to</param>
            <param name="IncludeTrial">Boolean, default false. If true, the customer will migrate to the new product
            if one is available. If false, the trial period will be ignored.</param>
            <param name="IncludeInitialCharge">Boolean, default false. If true, initial charges will be assessed.
            If false, initial charges will be ignored.</param>
            <returns>The completed subscription if migrated successfully, null otherwise.</returns>
        </member>
        <member name="M:ChargifyNET.IChargifyConnect.LoadSubscription(System.Int32)">
            <summary>
            Load the requested subscription from chargify
            </summary>
            <param name="SubscriptionID">The ID of the subscription</param>
            <returns>The subscription with the specified ID</returns>
        </member>
        <member name="M:ChargifyNET.IChargifyConnect.CreateSubscription(ChargifyNET.ISubscriptionCreateOptions)">
            <summary>
            Create a subscription
            </summary>
            <param name="options">The input options for creating a subscription</param>
            <returns>The subscription</returns>
        </member>
        <member name="M:ChargifyNET.IChargifyConnect.CreateSubscription(System.String,ChargifyNET.ICustomerAttributes,System.Nullable{ChargifyNET.PaymentCollectionMethod})">
            <summary>
            Create a new subscription and a new customer at the same time without submitting PaymentProfile attributes
            </summary>
            <param name="ProductHandle">The handle to the product</param>
            <param name="CustomerAttributes">The attributes for the new customer</param>
            <param name="PaymentCollectionMethod">The payment collection method to use, automatic by default</param>
            <returns>The xml describing the new subsscription</returns>
        </member>
        <member name="M:ChargifyNET.IChargifyConnect.CreateSubscription(System.String,ChargifyNET.ICustomerAttributes,System.DateTime,ChargifyNET.IPaymentProfileAttributes)">
            <summary>
            Create a new subscription and a new customer at the same time and import the card data from a specific vault storage
            </summary>
            <param name="ProductHandle">The handle to the product</param>
            <param name="CustomerAttributes">The attributes for the new customer</param>
            <param name="NextBillingAt">DateTime for this customer to be assessed at</param>
            <param name="ExistingProfile">Data concerning the existing profile in vault storage</param>
            <returns>The xml describing the new subscription</returns>
        </member>
        <member name="M:ChargifyNET.IChargifyConnect.CreateSubscription(System.String,ChargifyNET.ICustomerAttributes,System.DateTime,System.Int32)">
            <summary>
            Create a new subscription and a new customer at the same time and use the card data from another payment profile (from the same customer).
            </summary>
            <param name="ProductHandle">The handle to the product</param>
            <param name="CustomerAttributes">The attributes for the new customer</param>
            <param name="NextBillingAt">DateTime for this customer to be assessed at</param>
            <param name="ExistingProfileID">The ID of the existing payment profile to use when creating the new subscription.</param>
            <returns>The new subscription</returns>
        </member>
        <member name="M:ChargifyNET.IChargifyConnect.CreateSubscription(System.String,ChargifyNET.ICustomerAttributes,ChargifyNET.ICreditCardAttributes)">
            <summary>
            Create a new subscription and a new customer at the same time
            </summary>
            <param name="ProductHandle">The handle to the product</param>
            <param name="CustomerAttributes">The attributes for the new customer</param>
            <param name="CreditCardAttributes">The credit card attributes</param>
            <returns>The xml describing the new subsscription</returns>
        </member>
        <member name="M:ChargifyNET.IChargifyConnect.CreateSubscription(System.String,ChargifyNET.ICustomerAttributes,ChargifyNET.ICreditCardAttributes,System.DateTime)">
            <summary>
            Create a new subscription and a new customer at the same time
            </summary>
            <param name="ProductHandle">The handle to the product</param>
            <param name="CustomerAttributes">The attributes for the new customer</param>
            <param name="CreditCardAttributes">The credit card attributes</param>
            /// <param name="NextBillingAt">DateTime for this customer to be assessed at</param>
            <returns>The xml describing the new subscription</returns>
        </member>
        <member name="M:ChargifyNET.IChargifyConnect.CreateSubscription(System.String,ChargifyNET.ICustomerAttributes,ChargifyNET.ICreditCardAttributes,System.Int32,System.Int32)">
            <summary>
            Create a new subscription and a new customer at the same time
            </summary>
            <param name="ProductHandle">The handle to the product</param>
            <param name="CustomerAttributes">The attributes for the new customer</param>
            <param name="CreditCardAttributes">The credit card attributes</param>
            <param name="AllocatedQuantity">The component allocation to send when creating the subscription</param>
            <param name="ComponentID">The component to reference when creating the subscription</param>
            <returns>The xml describing the new subsscription</returns>
        </member>
        <member name="M:ChargifyNET.IChargifyConnect.CreateSubscription(System.String,ChargifyNET.ICustomerAttributes,ChargifyNET.ICreditCardAttributes,System.Collections.Generic.Dictionary{System.Int32,System.String})">
            <summary>
            Create a new subscription and a new customer at the same time
            </summary>
            <param name="ProductHandle">The handle to the product</param>
            <param name="CustomerAttributes">The attributes for the new customer</param>
            <param name="CreditCardAttributes">The credit card attributes</param>
            <param name="ComponentsWithQuantity">The list of components and quantities to use</param>
            <returns>The xml describing the new subsscription</returns>
        </member>
        <member name="M:ChargifyNET.IChargifyConnect.CreateSubscription(System.String,System.Int64,System.Nullable{ChargifyNET.PaymentCollectionMethod})">
            <summary>
            Create a new subscription without passing credit card information.
            </summary>
            <param name="ProductHandle">The handle to the product</param>
            <param name="chargifyId">The Chargify ID of the customer</param>
            <param name="PaymentCollectionMethod">Optional, type of payment collection method</param>
            <returns>The xml describing the new subsscription</returns>
        </member>
        <member name="M:ChargifyNET.IChargifyConnect.CreateSubscription(System.String,System.Int64,ChargifyNET.ICreditCardAttributes)">
            <summary>
            Create a new subscription 
            </summary>
            <param name="ProductHandle">The handle to the product</param>
            <param name="chargifyId">The Chargify ID of the customer</param>
            <param name="CreditCardAttributes">The credit card attributes</param>
            <returns>The xml describing the new subsscription</returns>
        </member>
        <member name="M:ChargifyNET.IChargifyConnect.CreateSubscription(System.String,System.Int64,ChargifyNET.ICreditCardAttributes,System.DateTime)">
            <summary>
            Create a subscription
            </summary>
            <param name="ProductHandle">The handle of the product</param>
            <param name="chargifyId">The ID of the customer who should be used in this new subscription</param>
            <param name="CreditCardAttributes">The credit card attributes to use for the new subscription</param>
            <param name="NextBillingAt">The date that should be used for the next_billing_at</param>
            <returns>The new subscription, if successful. Null otherwise.</returns>
        </member>
        <member name="M:ChargifyNET.IChargifyConnect.CreateSubscription(System.String,System.Int64,System.String,System.Nullable{ChargifyNET.PaymentCollectionMethod})">
            <summary>
            Create a subscription using a coupon for discounted rate, without using credit card information.
            </summary>
            <param name="ProductHandle">The product to subscribe to</param>
            <param name="chargifyId">The ID of the Customer to add the subscription for</param>
            <param name="CouponCode">The discount coupon code</param>
            <param name="paymentCollectionMethod">Optional, type of payment collection method</param>
            <returns>If sucessful, the subscription object. Otherwise null.</returns>
        </member>
        <member name="M:ChargifyNET.IChargifyConnect.CreateSubscription(System.String,System.String)">
            <summary>
            Create a new subscription without requiring credit card information
            </summary>
            <param name="ProductHandle">The handle to the product</param>
            <param name="SystemID">The System ID of the customer</param>
            <returns>The xml describing the new subsscription</returns>
        </member>
        <member name="M:ChargifyNET.IChargifyConnect.CreateSubscription(System.String,System.String,ChargifyNET.ICreditCardAttributes)">
            <summary>
            Create a new subscription 
            </summary>
            <param name="ProductHandle">The handle to the product</param>
            <param name="SystemID">The System ID of the customer</param>
            <param name="CreditCardAttributes">The credit card attributes</param>
            <returns>The xml describing the new subsscription</returns>
        </member>
        <member name="M:ChargifyNET.IChargifyConnect.CreateSubscriptionUsingCoupon(System.String,ChargifyNET.ICustomerAttributes,ChargifyNET.ICreditCardAttributes,System.String)">
            <summary>
            Create a new subscription and a new customer at the same time
            </summary>
            <param name="ProductHandle">The handle to the product</param>
            <param name="CustomerAttributes">The attributes for the new customer</param>
            <param name="CreditCardAttributes">The credit card attributes</param>
            <param name="CouponCode">The discount coupon code</param>
            <returns>The xml describing the new subsscription</returns>
        </member>
        <member name="M:ChargifyNET.IChargifyConnect.CreateSubscriptionUsingCoupon(System.String,ChargifyNET.ICustomerAttributes,ChargifyNET.ICreditCardAttributes,System.DateTime,System.String)">
            <summary>
            Create a new subscription and a new customer at the same time
            </summary>
            <param name="ProductHandle">The handle to the product</param>
            <param name="CustomerAttributes">The attributes for the new customer</param>
            <param name="CreditCardAttributes">The credit card attributes</param>
            <param name="CouponCode">The discount coupon code</param>
            <param name="NextBillingAt">Specify the time of first assessment</param>
            <returns>The new subscription object</returns>
        </member>
        <member name="M:ChargifyNET.IChargifyConnect.CreateSubscriptionUsingCoupon(System.String,ChargifyNET.ICustomerAttributes,ChargifyNET.ICreditCardAttributes,System.String,System.Int32,System.Int32)">
            <summary>
            Create a new subscription and a new customer at the same time
            </summary>
            <param name="ProductHandle">The handle to the product</param>
            <param name="CustomerAttributes">The attributes for the new customer</param>
            <param name="CreditCardAttributes">The credit card attributes</param>
            <param name="CouponCode">The discount coupon code</param>
            <param name="ComponentID">The component to allocate when creating the subscription</param>
            <param name="AllocatedQuantity">The quantity to allocate of the component when creating the subscription</param>
            <returns>The xml describing the new subsscription</returns>
        </member>
        <member name="M:ChargifyNET.IChargifyConnect.CreateSubscriptionUsingCoupon(System.String,ChargifyNET.ICustomerAttributes,ChargifyNET.ICreditCardAttributes,System.String,System.Collections.Generic.Dictionary{System.Int32,System.String})">
            <summary>
            Create a new subscription and a new customer at the same time
            </summary>
            <param name="ProductHandle">The handle to the product</param>
            <param name="CustomerAttributes">The attributes for the new customer</param>
            <param name="CreditCardAttributes">The credit card attributes</param>
            <param name="CouponCode">The discount coupon code</param>
            <param name="ComponentsWithQuantity">The list of components and quantities to use</param>
            <returns>The xml describing the new subsscription</returns>
        </member>
        <member name="M:ChargifyNET.IChargifyConnect.CreateSubscriptionUsingCoupon(System.String,ChargifyNET.ICustomerAttributes,System.String)">
            <summary>
            Create a new subscription and a new customer at the same time using no credit card information
            </summary>
            <param name="ProductHandle">The handle to the product</param>
            <param name="CustomerAttributes">The attributes for the new customer</param>
            <param name="CouponCode">The discount coupon code</param>
            <returns>The xml describing the new subsscription</returns>
        </member>
        <member name="M:ChargifyNET.IChargifyConnect.CreateSubscriptionUsingCoupon(System.String,ChargifyNET.ICustomerAttributes,System.String,System.DateTime,ChargifyNET.IPaymentProfileAttributes)">
            <summary>
            Create a new subscription and a new customer at the same time using no credit card information
            </summary>
            <param name="ProductHandle">The handle to the product</param>
            <param name="CustomerAttributes">The attributes for the new customer</param>
            <param name="CouponCode">The discount coupon code</param>
            <param name="NextBillingAt">DateTime for this customer to be assessed at</param>
            <param name="ExistingProfile">Data concerning the existing profile in vault storage</param>
            <returns>The xml describing the new subsscription</returns>
        </member>
        <member name="M:ChargifyNET.IChargifyConnect.CreateSubscriptionUsingCoupon(System.String,ChargifyNET.ICustomerAttributes,System.String,System.DateTime,System.Int32)">
            <summary>
            Create a new subscription and a new customer at the same time using existing credit card information (from the same customer)
            </summary>
            <param name="ProductHandle">The handle to the product</param>
            <param name="CustomerAttributes">The attributes for the new customer</param>
            <param name="CouponCode">The discount coupon code</param>
            <param name="NextBillingAt">DateTime for this customer to be assessed at</param>
            <param name="ExistingProfileID">The ID of the existing payment profile to use when creating the new subscription.</param>
            <returns>The new subsscription</returns>
        </member>
        <member name="M:ChargifyNET.IChargifyConnect.CreateSubscriptionUsingCoupon(System.String,System.Int64,ChargifyNET.ICreditCardAttributes,System.String)">
            <summary>
            Create a subscription using a coupon for discounted rate
            </summary>
            <param name="ProductHandle">The product to subscribe to</param>
            <param name="chargifyId">The ID of the Customer to add the subscription for</param>
            <param name="CreditCardAttributes">The credit card attributes to use for this transaction</param>
            <param name="CouponCode">The discount coupon code</param>
            <returns></returns>
        </member>
        <member name="M:ChargifyNET.IChargifyConnect.CreateSubscriptionUsingCoupon(System.String,System.Int64,System.String)">
            <summary>
            Create a new subscription 
            </summary>
            <param name="ProductHandle">The handle to the product</param>
            <param name="chargifyId">The Chargify ID of the customer</param>
            <param name="CouponCode">The discount coupon code</param>
            <returns>The xml describing the new subsscription</returns>
        </member>
        <member name="M:ChargifyNET.IChargifyConnect.CreateSubscriptionUsingCoupon(System.String,System.String,ChargifyNET.ICreditCardAttributes,System.String)">
            <summary>
            Create a new subscription 
            </summary>
            <param name="ProductHandle">The handle to the product</param>
            <param name="SystemID">The System ID of the customer</param>
            <param name="CreditCardAttributes">The credit card attributes</param>
            <param name="CouponCode">The discount coupon code</param>
            <returns>The xml describing the new subsscription</returns>
        </member>
        <member name="M:ChargifyNET.IChargifyConnect.CreateSubscriptionUsingCoupon(System.String,System.String,System.String)">
            <summary>
            Create a new subscription without passing credit card info
            </summary>
            <param name="ProductHandle">The handle to the product</param>
            <param name="SystemID">The System ID of the customer</param>
            <param name="CouponCode">The discount coupon code</param>
            <returns>The xml describing the new subscription</returns>
        </member>
        <member name="M:ChargifyNET.IChargifyConnect.DeleteSubscription(System.Int32,System.String)">
            <summary>
            Delete a subscription
            </summary>
            <param name="SubscriptionID">The ID of the sucscription</param>
            <param name="CancellationMessage">The message to associate with the subscription</param>
            <returns></returns>
        </member>
        <member name="M:ChargifyNET.IChargifyConnect.EditSubscriptionProduct(ChargifyNET.ISubscription,ChargifyNET.IProduct,System.Nullable{System.Boolean})">
            <summary>
            Update the product information for an existing subscription
            </summary>
            <remarks>Does NOT prorate. Use MigrateSubscriptionProduct to get proration to work.</remarks>
            <param name="Subscription">The suscription to update</param>
            <param name="Product">The new product</param>
            <param name="ProductChangeDelayed">Should the product change be delayed?</param>
            <returns>The new subscription resulting from the change</returns>
        </member>
        <member name="M:ChargifyNET.IChargifyConnect.EditSubscriptionProduct(ChargifyNET.ISubscription,System.String,System.Nullable{System.Boolean})">
            <summary>
            Update the product information for an existing subscription
            </summary>
            <remarks>Does NOT prorate. Use MigrateSubscriptionProduct to get proration to work.</remarks>
            <param name="Subscription">The suscription to update</param>
            <param name="ProductHandle">The handle to the new product</param>
            <param name="ProductChangeDelayed">Should the product change be delayed?</param>
            <returns>The new subscription resulting from the change</returns>
        </member>
        <member name="M:ChargifyNET.IChargifyConnect.EditSubscriptionProduct(System.Int32,ChargifyNET.IProduct,System.Nullable{System.Boolean})">
            <summary>
            Update the product information for an existing subscription
            </summary>
            <remarks>Does NOT prorate. Use MigrateSubscriptionProduct to get proration to work.</remarks>
            <param name="SubscriptionID">The ID of the suscription to update</param>
            <param name="Product">The new product</param>
            <param name="ProductChangeDelayed">Should the product change be delayed?</param>
            <returns>The new subscription resulting from the change</returns>
        </member>
        <member name="M:ChargifyNET.IChargifyConnect.EditSubscriptionProduct(System.Int32,System.String,System.Nullable{System.Boolean})">
            <summary>
            Update the product information for an existing subscription
            </summary>
            <remarks>Does NOT prorate. Use MigrateSubscriptionProduct to get proration to work.</remarks>
            <param name="SubscriptionID">The ID of the suscription to update</param>
            <param name="ProductHandle">The handle to the new product</param>
            <param name="ProductChangeDelayed">Optional value of whether to delay the product change until next assessment</param>
            <returns>The new subscription resulting from the change</returns>
        </member>
        <member name="M:ChargifyNET.IChargifyConnect.UpdateBillingDateForSubscription(System.Int32,System.DateTime)">
            <summary>
            Method to allow users to change the next_assessment_at date
            </summary>
            <param name="SubscriptionID">The subscription to modify</param>
            <param name="NextBillingAt">The date to next bill the customer</param>
            <returns>Subscription if successful, null otherwise.</returns>
        </member>
        <member name="M:ChargifyNET.IChargifyConnect.UpdateDelayedCancelForSubscription(System.Int32,System.Boolean,System.String)">
            <summary>
            Method to allow users to change the cancel_at_end_of_period flag
            </summary>
            <param name="SubscriptionID">The subscription to modify</param>
            <param name="CancelAtEndOfPeriod">True if the subscription should cancel at the end of the current period</param>
            <param name="CancellationMessage">The reason for cancelling.</param>
            <returns>Subscription if successful, null otherwise.</returns>
        </member>
        <member name="M:ChargifyNET.IChargifyConnect.GetPrettySubscriptionUpdateURL(System.String,System.String,System.Int32)">
            <summary>
            Method to get the secure URL (with pretty id) for updating the payment details for a subscription.
            </summary>
            <param name="FirstName">The first name of the customer to add to the pretty url</param>
            <param name="LastName">The last name of the customer to add to the pretty url</param>
            <param name="SubscriptionID">The ID of the subscription to update</param>
            <returns>The secure url of the update page</returns>
        </member>
        <member name="M:ChargifyNET.IChargifyConnect.GetSubscriptionListForCustomer(System.Int64)">
            <summary>
            Get a list of all subscriptions for a customer.
            </summary>
            <param name="chargifyId">The ChargifyID of the customer</param>
            <returns>A list of subscriptions</returns>
        </member>
        <member name="M:ChargifyNET.IChargifyConnect.GetSubscriptionUpdateURL(System.Int32)">
            <summary>
            Method to get the secure URL for updating the payment details for a subscription.
            </summary>
            <param name="SubscriptionID">The ID of the subscription to update</param>
            <returns>The secure url of the update page</returns>
        </member>
        <member name="M:ChargifyNET.IChargifyConnect.ResumeSubscription(System.Int32)">
            <summary>
            Resume a paused (on-hold) subscription. If the normal next renewal date has not passed, 
            the subscription will return to active and will renew on that date. Otherwise, it will 
            behave like a reactivation, setting the billing date to 'now' and charging the subscriber.
            </summary>
            <param name="subscriptionId">The (Chargify) id of the subscription</param>
            <returns>The subscription data, if successful</returns>
            <remarks>https://reference.chargify.com/v1/subscriptions/resume-subscription</remarks>
        </member>
        <member name="M:ChargifyNET.IChargifyConnect.PauseSubscription(System.Int32,System.Nullable{System.DateTime})">
            <summary>
            This will place the subscription in the on_hold state and it will not renew.
            </summary>
            <param name="subscriptionId">The (chargify) id of the subscription</param>
            <param name="automaticResumeDate">The date the subscription will automatically resume, if applicable</param>
            <returns>The subscription data, if successful</returns>
            <remarks>https://reference.chargify.com/v1/subscriptions/hold-subscription</remarks>
        </member>
        <member name="M:ChargifyNET.IChargifyConnect.CreateSubscriptionPreview(ChargifyNET.ISubscriptionCreateOptions)">
            <summary>
            Return a preview of charges for a subscription creation
            </summary>
            <param name="options"></param>
            <returns></returns>
        </member>
        <member name="M:ChargifyNET.IChargifyConnect.LoadTransaction(System.Int32)">
            <summary>
            Load the requested transaction from Chargify
            </summary>
            <param name="ID">The ID of the transaction</param>
            <returns>The transaction with the specified ID</returns>
            <remarks>Unfortunately, this resource isn't yet available.</remarks>
        </member>
        <member name="M:ChargifyNET.IChargifyConnect.GetTransactionList(System.Boolean)">
            <summary>
            Method for getting a list of transactions
            </summary>
            <param name="descending">Should the results in in descending order?</param>
            <returns>The dictionary of transaction records if successful, otherwise null.</returns>
        </member>
        <member name="M:ChargifyNET.IChargifyConnect.GetTransactionList(System.Collections.Generic.List{ChargifyNET.TransactionType},System.Boolean)">
            <summary>
            Method for getting a list of transactions
            </summary>
            <param name="kinds">A list of the types of transactions to return.</param>
            <param name="descending">Should the results in in descending order?</param>
            <returns>The dictionary of transaction records if successful, otherwise null.</returns>
        </member>
        <member name="M:ChargifyNET.IChargifyConnect.GetTransactionList(System.Collections.Generic.List{ChargifyNET.TransactionType},System.Int32,System.Int32,System.Boolean)">
            <summary>
            Method for getting a list of transactions
            </summary>
            <param name="kinds">A list of transaction types to return.</param>
            <param name="since_id">Returns transactions with an ID greater than or equal to the one specified. Use int.MinValue to not specify a since_id.</param>
            <param name="max_id">Returns transactions with an id less than or equal to the one specified. Use int.MinValue to not specify a max_id.</param>
            <param name="descending">Should the results in in descending order?</param>
            <returns>The dictionary of transaction records if successful, otherwise null.</returns>
        </member>
        <member name="M:ChargifyNET.IChargifyConnect.GetTransactionList(System.Collections.Generic.List{ChargifyNET.TransactionType},System.Int32,System.Int32,System.DateTime,System.DateTime,System.Boolean)">
            <summary>
            Method for getting a list of transactions
            </summary>
            <param name="kinds">A list of transaction types to return.</param>
            <param name="since_id">Returns transactions with an ID greater than or equal to the one specified. Use int.MinValue to not specify a since_id.</param>
            <param name="max_id">Returns transactions with an id less than or equal to the one specified. Use int.MinValue to not specify a max_id.</param>
            <param name="since_date">Returns transactions with a created_at date greater than or equal to the one specified. Use DateTime.MinValue to not specify a since_date.</param>
            <param name="until_date">Returns transactions with a created_at date less than or equal to the one specified. Use DateTime.MinValue to not specify an until_date.</param>
            <param name="descending">Should the results in in descending order?</param>
            <returns>The dictionary of transaction records if successful, otherwise null.</returns>
        </member>
        <member name="M:ChargifyNET.IChargifyConnect.GetTransactionList(System.Int32,System.Int32,System.Boolean)">
            <summary>
            Method for getting a list of transactions
            </summary>
            <param name="page">The page number</param>
            <param name="per_page">The number of results per page (used for pagination)</param>
            <param name="descending">Should the results in in descending order?</param>
            <returns>The dictionary of transaction records if successful, otherwise null.</returns>
        </member>
        <member name="M:ChargifyNET.IChargifyConnect.GetTransactionList(System.Int32,System.Int32,System.Collections.Generic.List{ChargifyNET.TransactionType},System.Boolean)">
            <summary>
            Method for getting a list of transactions
            </summary>
            <param name="page">The page number</param>
            <param name="per_page">The number of results per page (used for pagination)</param>
            <param name="kinds">A list of the types of transactions to return.</param>
            <param name="descending">Should the results in in descending order?</param>
            <returns>The dictionary of transaction records if successful, otherwise null.</returns>
        </member>
        <member name="M:ChargifyNET.IChargifyConnect.GetTransactionList(System.Int32,System.Int32,System.Collections.Generic.List{ChargifyNET.TransactionType},System.Int32,System.Int32,System.Boolean)">
            <summary>
            Method for getting a list of transactions
            </summary>
            <param name="page">The page number</param>
            <param name="per_page">The number of results per page (used for pagination)</param>
            <param name="kinds">A list of transaction types to return.</param>
            <param name="since_id">Returns transactions with an ID greater than or equal to the one specified. Use int.MinValue to not specify a since_id.</param>
            <param name="max_id">Returns transactions with an id less than or equal to the one specified. Use int.MinValue to not specify a max_id.</param>
            <param name="descending">Should the results in in descending order?</param>
            <returns>The dictionary of transaction records if successful, otherwise null.</returns>
        </member>
        <member name="M:ChargifyNET.IChargifyConnect.GetTransactionList(System.Int32,System.Int32,System.Collections.Generic.List{ChargifyNET.TransactionType},System.Int32,System.Int32,System.DateTime,System.DateTime,System.Boolean)">
            <summary>
            Method for getting a list of transactions
            </summary>
            <param name="page">The page number</param>
            <param name="per_page">The number of results per page (used for pagination)</param>
            <param name="kinds">A list of transaction types to return.</param>
            <param name="since_id">Returns transactions with an ID greater than or equal to the one specified. Use int.MinValue to not specify a since_id.</param>
            <param name="max_id">Returns transactions with an id less than or equal to the one specified. Use int.MinValue to not specify a max_id.</param>
            <param name="since_date">Returns transactions with a created_at date greater than or equal to the one specified. Use DateTime.MinValue to not specify a since_date.</param>
            <param name="until_date">Returns transactions with a created_at date less than or equal to the one specified. Use DateTime.MinValue to not specify an until_date.</param>
            <param name="descending">Should the results in in descending order?</param>
            <returns>The dictionary of transaction records if successful, otherwise null.</returns>
        </member>
        <member name="M:ChargifyNET.IChargifyConnect.GetTransactionsForSubscription(System.Int32)">
            <summary>
            Method for getting the list of transactions for a subscription
            </summary>
            <param name="SubscriptionID">The subscriptionID to get a list of transactions for</param>
            <returns>A dictionary of transactions if successful, otherwise null.</returns>
        </member>
        <member name="M:ChargifyNET.IChargifyConnect.GetTransactionsForSubscription(System.Int32,System.Collections.Generic.List{ChargifyNET.TransactionType})">
            <summary>
            Method for getting the list of transactions for a subscription
            </summary>
            <param name="SubscriptionID">The subscriptionID to get a list of transactions for</param>
            <param name="kinds">A list of the types of transactions to return.</param>
            <returns>A dictionary of transactions if successful, otherwise null.</returns>
        </member>
        <member name="M:ChargifyNET.IChargifyConnect.GetTransactionsForSubscription(System.Int32,System.Collections.Generic.List{ChargifyNET.TransactionType},System.Int32,System.Int32)">
            <summary>
            Method for getting the list of transactions for a subscription
            </summary>
            <param name="SubscriptionID">The subscriptionID to get a list of transactions for</param>
            <param name="kinds">A list of the types of transactions to return.</param>
            <param name="since_id">Returns transactions with an ID greater than or equal to the one specified. Use int.MinValue to not specify a since_id.</param>
            <param name="max_id">Returns transactions with an id less than or equal to the one specified. Use int.MinValue to not specify a max_id.</param>
            <returns>A dictionary of transactions if successful, otherwise null.</returns>
        </member>
        <member name="M:ChargifyNET.IChargifyConnect.GetTransactionsForSubscription(System.Int32,System.Collections.Generic.List{ChargifyNET.TransactionType},System.Int32,System.Int32,System.DateTime,System.DateTime)">
            <summary>
            Method for getting the list of transactions for a subscription
            </summary>
            <param name="SubscriptionID">The subscriptionID to get a list of transactions for</param>
            <param name="kinds">A list of the types of transactions to return.</param>
            <param name="since_id">Returns transactions with an ID greater than or equal to the one specified. Use int.MinValue to not specify a since_id.</param>
            <param name="max_id">Returns transactions with an id less than or equal to the one specified. Use int.MinValue to not specify a max_id.</param>
            <param name="since_date">Returns transactions with a created_at date greater than or equal to the one specified. Use DateTime.MinValue to not specify a since_date.</param>
            <param name="until_date">Returns transactions with a created_at date less than or equal to the one specified. Use DateTime.MinValue to not specify an until_date.</param>
            <returns>A dictionary of transactions if successful, otherwise null.</returns>
        </member>
        <member name="M:ChargifyNET.IChargifyConnect.GetTransactionsForSubscription(System.Int32,System.Int32,System.Int32)">
            <summary>
            Method for getting the list of transactions for a subscription
            </summary>
            <param name="SubscriptionID">The subscriptionID to get a list of transactions for</param>
            <param name="page">The page number</param>
            <param name="per_page">The number of results per page (used for pagination)</param>
            <returns>A dictionary of transactions if successful, otherwise null.</returns>
        </member>
        <member name="M:ChargifyNET.IChargifyConnect.GetTransactionsForSubscription(System.Int32,System.Int32,System.Int32,System.Collections.Generic.List{ChargifyNET.TransactionType})">
            <summary>
            Method for getting the list of transactions for a subscription
            </summary>
            <param name="SubscriptionID">The subscriptionID to get a list of transactions for</param>
            <param name="page">The page number</param>
            <param name="per_page">The number of results per page (used for pagination)</param>
            <param name="kinds">A list of the types of transactions to return.</param>
            <returns>A dictionary of transactions if successful, otherwise null.</returns>
        </member>
        <member name="M:ChargifyNET.IChargifyConnect.GetTransactionsForSubscription(System.Int32,System.Int32,System.Int32,System.Collections.Generic.List{ChargifyNET.TransactionType},System.Int32,System.Int32)">
            <summary>
            Method for getting the list of transactions for a subscription
            </summary>
            <param name="SubscriptionID">The subscriptionID to get a list of transactions for</param>
            <param name="page">The page number</param>
            <param name="per_page">The number of results per page (used for pagination)</param>
            <param name="kinds">A list of the types of transactions to return.</param>
            <param name="since_id">Returns transactions with an ID greater than or equal to the one specified. Use int.MinValue to not specify a since_id.</param>
            <param name="max_id">Returns transactions with an id less than or equal to the one specified. Use int.MinValue to not specify a max_id.</param>
            <returns>A dictionary of transactions if successful, otherwise null.</returns>
        </member>
        <member name="M:ChargifyNET.IChargifyConnect.GetTransactionsForSubscription(System.Int32,System.Int32,System.Int32,System.Collections.Generic.List{ChargifyNET.TransactionType},System.Int32,System.Int32,System.DateTime,System.DateTime)">
            <summary>
            Method for getting the list of transactions for a subscription
            </summary>
            <param name="SubscriptionID">The subscriptionID to get a list of transactions for</param>
            <param name="page">The page number</param>
            <param name="per_page">The number of results per page (used for pagination)</param>
            <param name="kinds">A list of the types of transactions to return.</param>
            <param name="since_id">Returns transactions with an ID greater than or equal to the one specified. Use int.MinValue to not specify a since_id.</param>
            <param name="max_id">Returns transactions with an id less than or equal to the one specified. Use int.MinValue to not specify a max_id.</param>
            <param name="since_date">Returns transactions with a created_at date greater than or equal to the one specified. Use DateTime.MinValue to not specify a since_date.</param>
            <param name="until_date">Returns transactions with a created_at date less than or equal to the one specified. Use DateTime.MinValue to not specify an until_date.</param>
            <returns>A dictionary of transactions if successful, otherwise null.</returns>
        </member>
        <member name="M:ChargifyNET.IChargifyConnect.CreateRefund(System.Int32,System.Int32,System.Decimal,System.String)">
            <summary>
            Create a refund
            </summary>
            <param name="SubscriptionID">The ID of the subscription to refund</param>
            <param name="PaymentID">The ID of the payment that the credit will be applied to</param>
            <param name="Amount">The amount (in dollars and cents) like 10.00 is $10.00</param>
            <param name="Memo">A helpful explanation for the refund.</param>
            <returns>The IRefund object indicating successful, or unsuccessful.</returns>
        </member>
        <member name="M:ChargifyNET.IChargifyConnect.CreateRefund(System.Int32,System.Int32,System.Int32,System.String)">
            <summary>
            Create a refund
            </summary>
            <param name="SubscriptionID">The ID of the subscription to refund</param>
            <param name="PaymentID">The ID of the payment that the credit will be applied to</param>
            <param name="AmountInCents">The amount (in cents only) like 100 is $1.00</param>
            <param name="Memo">A helpful explanation for the refund.</param>
            <returns>The IRefund object indicating successful, or unsuccessful.</returns>
        </member>
        <member name="P:ChargifyNET.IChargifyConnect.apiKey">
            <summary>
            Get or set the API key
            </summary>
        </member>
        <member name="P:ChargifyNET.IChargifyConnect.HasConnected">
            <summary>
            Method for determining if the properties have been set to allow this instance to connect correctly.
            </summary>
        </member>
        <member name="P:ChargifyNET.IChargifyConnect.LastResponse">
            <summary>
            Get a reference to the last Http Response from the chargify server. This is set after every call to
            a Chargify Connect method
            </summary>
        </member>
        <member name="P:ChargifyNET.IChargifyConnect.Password">
            <summary>
            Get or set the password
            </summary>
        </member>
        <member name="P:ChargifyNET.IChargifyConnect.SharedKey">
            <summary>
            SharedKey used for url generation
            </summary>
        </member>
        <member name="P:ChargifyNET.IChargifyConnect.URL">
            <summary>
            Get or set the URL for chargify
            </summary>
        </member>
        <member name="P:ChargifyNET.IChargifyConnect.UseJSON">
            <summary>
            Should Chargify.NET use JSON for output? XML by default.
            </summary>
        </member>
        <member name="P:ChargifyNET.IChargifyConnect.Timeout">
            <summary>
            The timeout (in milliseconds) for any call to Chargify. The default is 180000
            </summary>
        </member>
        <member name="P:ChargifyNET.IChargifyConnect.LogRequest">
            <summary>
            Caller can plug in a delegate for logging raw Chargify requests.
            Method, URL, and Data are the parameters.
            </summary>
        </member>
        <member name="P:ChargifyNET.IChargifyConnect.LogResponse">
            <summary>
            Caller can plug in a delegate for logging raw Chargify responses (including errors)
            Http Status, URL, and response body are the parameters.
            </summary>
        </member>
        <member name="M:ChargifyNET.IChargifyConnect.LoadStatement(System.Int32)">
            <summary>
            Method for getting a specific statement
            </summary>
            <param name="StatementID">The ID of the statement to retrieve</param>
            <returns>The statement if found, null otherwise.</returns>
        </member>
        <member name="M:ChargifyNET.IChargifyConnect.LoadStatementPDF(System.Int32)">
            <summary>
            Individual PDF Statements can be retrieved by using the Accept/Content-Type header application/pdf or appending .pdf as the format portion of the URL:
            </summary>
            <param name="StatementID">The ID of the statement to retrieve the byte[] for</param>
            <returns>A byte[] of the PDF data, to be sent to the user in a download</returns>
        </member>
        <member name="M:ChargifyNET.IChargifyConnect.GetStatementIDs(System.Int32)">
            <summary>
            Method for getting a list of statment ids for a specific subscription
            </summary>
            <param name="SubscriptionID">The ID of the subscription to retrieve the statements for</param>
            <returns>The list of statements, an empty dictionary otherwise.</returns>
        </member>
        <member name="M:ChargifyNET.IChargifyConnect.GetStatementIDs(System.Int32,System.Int32,System.Int32)">
            <summary>
            Method for getting a list of statment ids for a specific subscription
            </summary>
            <param name="SubscriptionID">The ID of the subscription to retrieve the statements for</param>
            <param name="page">The page number to return</param>
            <param name="per_page">The number of results to return per page</param>
            <returns>The list of statements, an empty dictionary otherwise.</returns>
        </member>
        <member name="M:ChargifyNET.IChargifyConnect.GetStatementList(System.Int32)">
            <summary>
            Method for getting a list of statments for a specific subscription
            </summary>
            <param name="SubscriptionID">The ID of the subscription to retrieve the statements for</param>
            <returns>The list of statements, an empty dictionary otherwise.</returns>
        </member>
        <member name="M:ChargifyNET.IChargifyConnect.GetStatementList(System.Int32,System.Int32,System.Int32)">
            <summary>
            Method for getting a list of statments for a specific subscription
            </summary>
            <param name="SubscriptionID">The ID of the subscription to retrieve the statements for</param>
            <param name="page">The page number to return</param>
            <param name="per_page">The number of results to return per page</param>
            <returns>The list of statements, an empty dictionary otherwise.</returns>
        </member>
        <member name="T:ChargifyNET.IComponent">
            <summary>
            Components are a way to offer Customers a product that is billed on a per-usage basis.
            </summary>
        </member>
        <member name="P:ChargifyNET.IComponent.ID">
            <summary>
            The ID for this component
            </summary>
        </member>
        <member name="P:ChargifyNET.IComponent.Quantity">
            <summary>
            The amount of units used
            </summary>
        </member>
        <member name="P:ChargifyNET.IComponent.Memo">
            <summary>
            An optional description for this component
            </summary>
        </member>
        <member name="T:ChargifyNET.ComponentUpgradeProrationScheme">
            <summary>
            The scheme used if the proration was an upgrade. This is only present when the allocation was created mid-period.
            </summary>
            <remarks>
            The API uses hyphens for word seperation, I use underscores and replace the hyphens with 
            underscores during parsing so I can parse the enumerated values
            </remarks>
        </member>
        <member name="F:ChargifyNET.ComponentUpgradeProrationScheme.Prorate_Delay_Capture">
            <summary>
            A charge is added for the prorated amount due, but the card is not charged until the subscription’s next renewal
            </summary>
        </member>
        <member name="F:ChargifyNET.ComponentUpgradeProrationScheme.Prorate_Attempt_Capture">
            <summary>
            A charge is added and we attempt to charge the credit card on file. If it fails, the charge will be accrued until the next renewal.
            </summary>
        </member>
        <member name="F:ChargifyNET.ComponentUpgradeProrationScheme.No_Prorate">
            <summary>
            No charge is added.
            </summary>
        </member>
        <member name="F:ChargifyNET.ComponentUpgradeProrationScheme.Full_Price_Attempt_Capture">
            <summary>
            A charge is added for the full price of the component change, and we attempt to charge the credit card on file. If it fails, the charge will be accrued until the next renewal.
            </summary>
        </member>
        <member name="F:ChargifyNET.ComponentUpgradeProrationScheme.Full_Price_Delay_Capture">
            <summary>
            A charge is added for the full price of the component change, but the card is not charged until the subscription’s next renewal.
            </summary>
        </member>
        <member name="F:ChargifyNET.ComponentUpgradeProrationScheme.Unknown">
            <summary>
            No value (internal to this library)
            </summary>
        </member>
        <member name="T:ChargifyNET.ComponentDowngradeProrationScheme">
            <summary>
            The scheme used if the proration was a downgrade. This is only present when the allocation was created mid-period.
            </summary>
            <remarks>
            The API uses hyphens for word seperation, I use underscores and replace the hyphens with 
            underscores during parsing so I can parse the enumerated values
            </remarks>
        </member>
        <member name="F:ChargifyNET.ComponentDowngradeProrationScheme.Prorate">
            <summary>
            A credit is added for the amount owed.
            </summary>
        </member>
        <member name="F:ChargifyNET.ComponentDowngradeProrationScheme.No_Prorate">
            <summary>
            No credit is added
            </summary>
        </member>
        <member name="F:ChargifyNET.ComponentDowngradeProrationScheme.Unknown">
            <summary>
            No value (internal to this library)
            </summary>
        </member>
        <member name="T:ChargifyNET.IComponentAllocation">
            <summary>
            llocations describe a change to the allocated quantity for a particular Component (either Quantity-Based or On/Off) for a particular Subscription.
            </summary>
        </member>
        <member name="P:ChargifyNET.IComponentAllocation.Quantity">
            <summary>
            The allocated quantity set in to effect by the allocation
            </summary>
        </member>
        <member name="P:ChargifyNET.IComponentAllocation.PreviousQuantity">
            <summary>
            The allocated quantity that was in effect before this allocation was created
            </summary>
        </member>
        <member name="P:ChargifyNET.IComponentAllocation.ComponentID">
            <summary>
            The integer component ID for the allocation. This references a component that you have created in your Product setup
            </summary>
        </member>
        <member name="P:ChargifyNET.IComponentAllocation.SubscriptionID">
            <summary>
            The integer subscription ID for the allocation. This references a unique subscription in your Site
            </summary>
        </member>
        <member name="P:ChargifyNET.IComponentAllocation.Memo">
            <summary>
            The memo passed when the allocation was created
            </summary>
        </member>
        <member name="P:ChargifyNET.IComponentAllocation.TimeStamp">
            <summary>
            The time that the allocation was recorded, in ISO 8601 format and UTC timezone, i.e. 2012-11-20T22:00:37Z
            </summary>
        </member>
        <member name="P:ChargifyNET.IComponentAllocation.UpgradeScheme">
            <summary>
            The scheme used if the proration was an upgrade. This is only present when the allocation was created mid-period.
            </summary>
        </member>
        <member name="P:ChargifyNET.IComponentAllocation.DowngradeScheme">
            <summary>
            The scheme used if the proration was a downgrade. This is only present when the allocation was created mid-period.
            </summary>
        </member>
        <member name="T:ChargifyNET.IComponentAttributes">
            <summary>
            Specfic class when getting information about a component as set to a specific subscription
            as specified here: http://support.chargify.com/faqs/technical/quantity-based-components
            </summary>
        </member>
        <member name="P:ChargifyNET.IComponentAttributes.Name">
            <summary>
            The name of the component as created by the Chargify user
            </summary>
        </member>
        <member name="P:ChargifyNET.IComponentAttributes.Kind">
            <summary>
            The kind of component, either quantity-based or metered component
            </summary>
        </member>
        <member name="P:ChargifyNET.IComponentAttributes.SubscriptionID">
            <summary>
            The ID of the subscription that this component applies to
            </summary>
        </member>
        <member name="P:ChargifyNET.IComponentAttributes.ComponentID">
            <summary>
            The ID of the component itself
            </summary>
        </member>
        <member name="P:ChargifyNET.IComponentAttributes.AllocatedQuantity">
            <summary>
            The quantity allocated to this subscription
            </summary>
        </member>
        <member name="P:ChargifyNET.IComponentAttributes.PricingScheme">
            <summary>
            The method used to charge, either: per-unit, volume, tiered or stairstep
            </summary>
        </member>
        <member name="P:ChargifyNET.IComponentAttributes.UnitName">
            <summary>
            The name for the unit this component is measured in.
            </summary>
        </member>
        <member name="P:ChargifyNET.IComponentAttributes.UnitBalance">
            <summary>
            The balance of units of this component against the subscription
            </summary>
        </member>
        <member name="P:ChargifyNET.IComponentAttributes.Enabled">
            <summary>
            The status of whether this component is enabled or disabled.
            (On/Off components only)
            </summary>
        </member>
        <member name="T:ChargifyNET.ComponentType">
            <summary>
            The type of component as defined in Chargify's documentation
            </summary>
        </member>
        <member name="F:ChargifyNET.ComponentType.Metered_Component">
            <summary>
            Metered Component
            </summary>
        </member>
        <member name="F:ChargifyNET.ComponentType.Quantity_Based_Component">
            <summary>
            Quantity Based Component
            </summary>
        </member>
        <member name="F:ChargifyNET.ComponentType.On_Off_Component">
            <summary>
            On/Off Component
            </summary>
        </member>
        <member name="F:ChargifyNET.ComponentType.Unknown">
            <summary>
            Unknown Transaction Type
            </summary>
        </member>
        <member name="T:ChargifyNET.PricingSchemeType">
            <summary>
            The type of pricing scheme
            </summary>
        </member>
        <member name="F:ChargifyNET.PricingSchemeType.Per_Unit">
            <summary>
            Per unit based scheme
            </summary>
        </member>
        <member name="F:ChargifyNET.PricingSchemeType.Volume">
            <summary>
            Volume based scheme
            </summary>
        </member>
        <member name="F:ChargifyNET.PricingSchemeType.Tiered">
            <summary>
            Tiered based scheme
            </summary>
        </member>
        <member name="F:ChargifyNET.PricingSchemeType.Stairstep">
            <summary>
            Stairstep based scheme
            </summary>
        </member>
        <member name="F:ChargifyNET.PricingSchemeType.Unknown">
            <summary>
            Unknown Transaction Type
            </summary>
        </member>
        <member name="T:ChargifyNET.IComponentInfo">
            <summary>
            Specfic class when getting information about a component as set to a specific product family
            </summary>
        </member>
        <member name="P:ChargifyNET.IComponentInfo.CreatedAt">
            <summary>
            Date and time that this component was created
            </summary>
        </member>
        <member name="P:ChargifyNET.IComponentInfo.ID">
            <summary>
            The ID of this component
            </summary>
        </member>
        <member name="P:ChargifyNET.IComponentInfo.Name">
            <summary>
            The name of the component as created by the Chargify user
            </summary>
        </member>
        <member name="P:ChargifyNET.IComponentInfo.Description">
            <summary>
            The description of the component as created by the Chargify user
            </summary>
        </member>
        <member name="P:ChargifyNET.IComponentInfo.PricePerUnitInCents">
            <summary>
            Price of the component per unit (in cents)
            </summary>
        </member>
        <member name="P:ChargifyNET.IComponentInfo.PricePerUnit">
            <summary>
            Price of the component per unit (in dollars and cents)
            </summary>
        </member>
        <member name="P:ChargifyNET.IComponentInfo.PricingScheme">
            <summary>
            The type of pricing scheme setup for this component
            </summary>
        </member>
        <member name="P:ChargifyNET.IComponentInfo.ProductFamilyID">
            <summary>
            The ID of the product family this component was created for
            </summary>
        </member>
        <member name="P:ChargifyNET.IComponentInfo.UnitName">
            <summary>
            The name for the unit this component is measured in.
            </summary>
        </member>
        <member name="P:ChargifyNET.IComponentInfo.UpdatedAt">
            <summary>
            Date/Time that this component was last updated.
            </summary>
        </member>
        <member name="P:ChargifyNET.IComponentInfo.Kind">
            <summary>
            The kind of component, either quantity-based or metered component
            </summary>
        </member>
        <member name="P:ChargifyNET.IComponentInfo.UnitPrice">
            <summary>
            The amount the customer will be charged per unit. This field is only populated for 'per_unit' pricing schemes.
            </summary>
        </member>
        <member name="P:ChargifyNET.IComponentInfo.Prices">
            <summary>
            An list of price brackets. If the component uses the 'per_unit' pricing scheme, an empty list will be returned.
            </summary>
        </member>
        <member name="P:ChargifyNET.IComponentInfo.Archived">
            <summary>
            Boolean flag describing whether a component is archived or not
            </summary>
        </member>
        <member name="T:ChargifyNET.IPriceBracketInfo">
            <summary>
            For those compoments that have price brackets, this is the info
            </summary>
        </member>
        <member name="P:ChargifyNET.IPriceBracketInfo.StartingQuantity">
            <summary>
            The starting quantity for the component
            </summary>
        </member>
        <member name="P:ChargifyNET.IPriceBracketInfo.EndingQuantity">
            <summary>
            The ending quantity for the component
            </summary>
        </member>
        <member name="P:ChargifyNET.IPriceBracketInfo.UnitPrice">
            <summary>
            The unit price for the component
            </summary>
        </member>
        <member name="T:ChargifyNET.ICoupon">
            <summary>
            Object representing coupon in Chargify
            </summary>
        </member>
        <member name="P:ChargifyNET.ICoupon.AmountInCents">
            <summary>
            The amount of the coupon, in cents.
            </summary>
        </member>
        <member name="P:ChargifyNET.ICoupon.Amount">
            <summary>
            The amount of the coupon, in dollars and cents
            </summary>
        </member>
        <member name="P:ChargifyNET.ICoupon.Code">
            <summary>
            The string code that represents this coupon
            </summary>
        </member>
        <member name="P:ChargifyNET.ICoupon.CreatedAt">
            <summary>
            The date this coupon was created
            </summary>
        </member>
        <member name="P:ChargifyNET.ICoupon.Description">
            <summary>
            The description of this coupon
            </summary>
        </member>
        <member name="P:ChargifyNET.ICoupon.EndDate">
            <summary>
            The date that this coupon is no longer valid for use
            </summary>
        </member>
        <member name="P:ChargifyNET.ICoupon.ID">
            <summary>
            The ID of this coupon
            </summary>
        </member>
        <member name="P:ChargifyNET.ICoupon.Name">
            <summary>
            The internal name of this coupon in the Chargify site
            </summary>
        </member>
        <member name="P:ChargifyNET.ICoupon.ProductFamilyID">
            <summary>
            The ID of the product family this coupon belongs to
            </summary>
        </member>
        <member name="P:ChargifyNET.ICoupon.StartDate">
            <summary>
            The date this coupon became active
            </summary>
        </member>
        <member name="P:ChargifyNET.ICoupon.UpdatedAt">
            <summary>
            The date this coupon was last updated
            </summary>
        </member>
        <member name="P:ChargifyNET.ICoupon.ArchivedAt">
            <summary>
             The date this coupon was archived
            </summary>
        </member>
        <member name="P:ChargifyNET.ICoupon.DurationInterval">
            <summary>
            The coupon duration interval
            </summary>
        </member>
        <member name="P:ChargifyNET.ICoupon.DurationUnit">
            <summary>
            The coupon duration unit 
            </summary>
        </member>
        <member name="P:ChargifyNET.ICoupon.DurationPeriodCount">
            <summary>
            The coupon period count
            </summary>
        </member>
        <member name="P:ChargifyNET.ICoupon.Percentage">
            <summary>
            If percentage based, the percentage. decimal.MinValue otherwise.
            </summary>
        </member>
        <member name="P:ChargifyNET.ICoupon.IsRecurring">
            <summary>
            Is this a recurring coupon?
            </summary>
        </member>
        <member name="P:ChargifyNET.ICoupon.AllowNegativeBalance">
            <summary>
            Allow negative balance?
            </summary>
        </member>
        <member name="T:ChargifyNET.ICouponUsage">
            <summary>
            Coupon Usage
            </summary>
        </member>
        <member name="P:ChargifyNET.ICouponUsage.ProductName">
            <summary>
             Product name
            </summary>
        </member>
        <member name="P:ChargifyNET.ICouponUsage.ProductId">
            <summary>
             Product ID
            </summary>
        </member>
        <member name="P:ChargifyNET.ICouponUsage.Revenue">
            <summary>
            Revenue from subscriptions that used coupon
            </summary>
        </member>
        <member name="P:ChargifyNET.ICouponUsage.Signups">
            <summary>
            Number of signups that used coupon
            </summary>
        </member>
        <member name="P:ChargifyNET.ICouponUsage.Savings">
            <summary>
            Savings given by the coupon for this product
            </summary>
        </member>
        <member name="T:ChargifyNET.ICredit">
            <summary>
            One-time (or one-off) credit for arbitrary amount
            </summary>
        </member>
        <member name="P:ChargifyNET.ICredit.Success">
            <summary>
            Either true or false, depending on the success of the credit
            </summary>
        </member>
        <member name="P:ChargifyNET.ICredit.AmountInCents">
            <summary>
            Get the amount, in cents
            </summary>
        </member>
        <member name="P:ChargifyNET.ICredit.Amount">
            <summary>
            Get the amount, in dollars and cents
            </summary>
        </member>
        <member name="P:ChargifyNET.ICredit.Memo">
            <summary>
            The memo for the created credit
            </summary>
        </member>
        <member name="T:ChargifyNET.ICreditCardAttributes">
            <summary>
            Interface representing credit card attributes
            </summary>
        </member>
        <member name="P:ChargifyNET.ICreditCardAttributes.CVV">
            <summary>
            Get or set the CVV number on the credit card
            </summary>
        </member>
        <member name="T:ChargifyNET.ICustomer">
            <summary>
            Interface representing a chargify customer
            </summary>
        </member>
        <member name="P:ChargifyNET.ICustomer.ChargifyID">
            <summary>
            Get the customer's chargify ID
            </summary>
        </member>
        <member name="P:ChargifyNET.ICustomer.Created">
            <summary>
            Get the date and time the customer was created a Chargify
            </summary>
        </member>
        <member name="P:ChargifyNET.ICustomer.LastUpdated">
            <summary>
            Get the date and time the customer was last updated at chargify
            </summary>
        </member>
        <member name="P:ChargifyNET.ICustomer.IsSaved">
            <summary>
            Get a boolean value that indicates whether or not this customer is currently saved
            in the Chargify system
            </summary>
        </member>
        <member name="T:ChargifyNET.ICustomerAttributes">
            <summary>
            Class representing basic attributes for a customer
            </summary>
        </member>
        <member name="P:ChargifyNET.ICustomerAttributes.FirstName">
            <summary>
            Get or set the customer's first name
            </summary>
        </member>
        <member name="P:ChargifyNET.ICustomerAttributes.LastName">
            <summary>
            Get or set the customer's last name
            </summary>
        </member>
        <member name="P:ChargifyNET.ICustomerAttributes.Email">
            <summary>
            Get or set the customer's email address
            </summary>
        </member>
        <member name="P:ChargifyNET.ICustomerAttributes.Phone">
            <summary>
            The customer's phone number
            </summary>
        </member>
        <member name="P:ChargifyNET.ICustomerAttributes.Organization">
            <summary>
            Get or set the customer's organization
            </summary>
        </member>
        <member name="P:ChargifyNET.ICustomerAttributes.VatNumber">
            <summary>
            The customers vat number
            </summary>
        </member>
        <member name="P:ChargifyNET.ICustomerAttributes.SystemID">
            <summary>
            Get or set the customer's ID in the calling system
            </summary>
        </member>
        <member name="P:ChargifyNET.ICustomerAttributes.CCEmails">
            <summary>
            Get or set the customer's cc emails
            </summary>
        </member>
        <member name="P:ChargifyNET.ICustomerAttributes.FullName">
            <summary>
            Get the full name LastName FirstName for the customer
            </summary>
        </member>
        <member name="P:ChargifyNET.ICustomerAttributes.ShippingAddress">
            <summary>
            The customers shipping address
            </summary>
        </member>
        <member name="P:ChargifyNET.ICustomerAttributes.ShippingAddress2">
            <summary>
            The customers shipping address
            </summary>
        </member>
        <member name="P:ChargifyNET.ICustomerAttributes.ShippingCity">
            <summary>
            The customers shipping city
            </summary>
        </member>
        <member name="P:ChargifyNET.ICustomerAttributes.ShippingZip">
            <summary>
            The customers shipping zip/postal code
            </summary>
        </member>
        <member name="P:ChargifyNET.ICustomerAttributes.ShippingState">
            <summary>
            The customers shipping state
            </summary>
        </member>
        <member name="P:ChargifyNET.ICustomerAttributes.ShippingCountry">
            <summary>
            The customers shipping country
            </summary>
        </member>
        <member name="P:ChargifyNET.ICustomerAttributes.TaxExempt">
            <summary>
            Get or Set the customer's tax exemption status
            </summary>
        </member>
        <member name="T:ChargifyNET.IInvoice">
            <summary>
            Invoice Billing allows you to bill your customers manually by sending them an invoice each month. Subscriptions with invoice billing enabled will not be charged automatically.
            </summary>
        </member>
        <member name="P:ChargifyNET.IInvoice.SubscriptionID">
            <summary>
            The subscription unique id within Chargify
            </summary>
        </member>
        <member name="P:ChargifyNET.IInvoice.StatementID">
            <summary>
            The statement unique id within Chargify
            </summary>
        </member>
        <member name="P:ChargifyNET.IInvoice.SiteID">
            <summary>
            The site unique id within Chargify
            </summary>
        </member>
        <member name="P:ChargifyNET.IInvoice.State">
            <summary>
            The current state of the subscription associated with this invoice. Please see the documentation for Subscription States
            </summary>
        </member>
        <member name="P:ChargifyNET.IInvoice.TotalAmountInCents">
            <summary>
            Gives the current invoice amount in the number of cents (ie. the sum of charges, in cents)
            </summary>
        </member>
        <member name="P:ChargifyNET.IInvoice.TotalAmount">
            <summary>
            Gives the current invoice amount in the number of cents (ie. the sum of charges, in dollars and cents)
            </summary>
        </member>
        <member name="P:ChargifyNET.IInvoice.PaidAt">
            <summary>
            The date/time when the invoice was paid in full
            </summary>
        </member>
        <member name="P:ChargifyNET.IInvoice.CreatedAt">
            <summary>
            The creation date/time for this invoice
            </summary>
        </member>
        <member name="P:ChargifyNET.IInvoice.UpdatedAt">
            <summary>
            The date/time of last update for this invoice
            </summary>
        </member>
        <member name="P:ChargifyNET.IInvoice.AmountDueInCents">
            <summary>
            Gives the current outstanding invoice balance in the number of cents
            </summary>
        </member>
        <member name="P:ChargifyNET.IInvoice.AmountDue">
            <summary>
            Gives the current outstanding invoice balance in the number of dollars and cents
            </summary>
        </member>
        <member name="P:ChargifyNET.IInvoice.Number">
            <summary>
            The unique (to this site) identifier for this invoice
            </summary>
        </member>
        <member name="P:ChargifyNET.IInvoice.Charges">
            <summary>
            A list of charges applied to this invoice
            </summary>
        </member>
        <member name="P:ChargifyNET.IInvoice.PaymentsAndCredits">
            <summary>
            A list of the financial transactions that modify the amount due
            </summary>
        </member>
        <member name="T:ChargifyNET.IInvoicePaymentAndCredit">
            <summary>
            TODO
            </summary>
        </member>
        <member name="T:ChargifyNET.IMetadata">
            <summary>
            Chargify Metadata is used to add your own meaningful values to subscription or customer records.
            Metadata is associated to a customer or subscription, and corresponds to a Metafield. 
            When creating a new metadata object for a given record, if the metafield is not present 
            it will be created.
            </summary>
            <remarks>
            Metadata values are limited to 2kB in size. 
            Additonally, there are limits on the number of unique "names" available per resource.
            </remarks>
        </member>
        <member name="P:ChargifyNET.IMetadata.ResourceID">
            <summary>
            The resource id that the metadata belongs to
            </summary>
        </member>
        <member name="P:ChargifyNET.IMetadata.Value">
            <summary>
            The value of the attribute that was added to the resource
            </summary>
        </member>
        <member name="P:ChargifyNET.IMetadata.Name">
            <summary>
            The name of the attribute that is added to the resource
            </summary>
        </member>
        <member name="T:ChargifyNET.IMetadataResult">
            <summary>
            An array of Metadata
            </summary>
        </member>
        <member name="P:ChargifyNET.IMetadataResult.TotalCount">
            <summary>
            The total number of metadatum
            </summary>
        </member>
        <member name="P:ChargifyNET.IMetadataResult.CurrentPage">
            <summary>
            The current page being returned
            </summary>
        </member>
        <member name="P:ChargifyNET.IMetadataResult.TotalPages">
            <summary>
            The total number of pages (based on per-page and total count)
            </summary>
        </member>
        <member name="P:ChargifyNET.IMetadataResult.PerPage">
            <summary>
            How many metadata are being returned per paged result
            </summary>
        </member>
        <member name="P:ChargifyNET.IMetadataResult.Metadata">
            <summary>
            The list of metadata contained in this response
            </summary>
        </member>
        <member name="T:ChargifyNET.IMigration">
            <summary>
            Preview of subscription migration charges
            </summary>
        </member>
        <member name="P:ChargifyNET.IMigration.ProratedAdjustmentInCents">
            <summary>
            Either true or false, depending on the success of the credit
            </summary>
        </member>
        <member name="P:ChargifyNET.IMigration.ChargeInCents">
            <summary>
            Get the amount, in cents
            </summary>
        </member>
        <member name="P:ChargifyNET.IMigration.PaymentDueInCents">
            <summary>
            Get the amount, in dollars and cents
            </summary>
        </member>
        <member name="P:ChargifyNET.IMigration.CreditAppliedInCents">
            <summary>
            The memo for the created credit
            </summary>
        </member>
        <member name="T:ChargifyNET.INote">
            <summary>
            Notes allow you to record information about a particular Subscription in a free text format.
            </summary>
        </member>
        <member name="P:ChargifyNET.INote.ID">
            <summary>
            The note's unique ID
            </summary>
        </member>
        <member name="P:ChargifyNET.INote.Body">
            <summary>
            The main text context of the note
            </summary>
        </member>
        <member name="P:ChargifyNET.INote.SubscriptionID">
            <summary>
            The ID of the related subscription
            </summary>
        </member>
        <member name="P:ChargifyNET.INote.CreatedAt">
            <summary>
            The date and time the note was created
            </summary>
        </member>
        <member name="P:ChargifyNET.INote.UpdatedAt">
            <summary>
            Last update timestamp
            </summary>
        </member>
        <member name="P:ChargifyNET.INote.Sticky">
            <summary>
            Whether or not it is pinned to the top of the list of notes
            </summary>
        </member>
        <member name="T:ChargifyNET.IPayment">
            <summary>
            Manual Payment
            </summary>
            <remarks>https://docs.chargify.com/api-payments</remarks>
        </member>
        <member name="P:ChargifyNET.IPayment.AmountInCents">
            <summary>
            The amount of the payment
            </summary>
        </member>
        <member name="P:ChargifyNET.IPayment.Amount">
            <summary>
            The amount of the payment (in dollars and cents)
            </summary>
        </member>
        <member name="P:ChargifyNET.IPayment.CreatedAt">
            <summary>
            The date the payment was created
            </summary>
        </member>
        <member name="P:ChargifyNET.IPayment.EndingBalanceInCents">
            <summary>
            The ending balance of the subscription after the payment
            </summary>
        </member>
        <member name="P:ChargifyNET.IPayment.ID">
            <summary>
            The ID of the payment
            </summary>
        </member>
        <member name="P:ChargifyNET.IPayment.Kind">
            <summary>
            The kind of payment
            </summary>
        </member>
        <member name="P:ChargifyNET.IPayment.Memo">
            <summary>
            The payment memo
            </summary>
        </member>
        <member name="P:ChargifyNET.IPayment.PaymentID">
            <summary>
            The ID of the payment
            </summary>
        </member>
        <member name="P:ChargifyNET.IPayment.ProductID">
            <summary>
            The ID of the product
            </summary>
        </member>
        <member name="P:ChargifyNET.IPayment.StartingBalanceInCents">
            <summary>
            The balance of the subscription before the payment
            </summary>
        </member>
        <member name="P:ChargifyNET.IPayment.SubscriptionID">
            <summary>
            The subscription ID
            </summary>
        </member>
        <member name="P:ChargifyNET.IPayment.Success">
            <summary>
            Was the payment successful?
            </summary>
        </member>
        <member name="P:ChargifyNET.IPayment.Type">
            <summary>
            The type of payment
            </summary>
        </member>
        <member name="P:ChargifyNET.IPayment.TransactionType">
            <summary>
            The type of transaction
            </summary>
        </member>
        <member name="P:ChargifyNET.IPayment.GatewayTransactionID">
            <summary>
            The related gateway transaction ID
            </summary>
        </member>
        <member name="T:ChargifyNET.CardType">
            <summary>
            The types of credit cards supported by Chargify internally
            </summary>
        </member>
        <member name="F:ChargifyNET.CardType.Visa">
            <summary>
            Visa
            </summary>
        </member>
        <member name="F:ChargifyNET.CardType.Master">
            <summary>
            Mastercard
            </summary>
        </member>
        <member name="F:ChargifyNET.CardType.Discover">
            <summary>
            Discover
            </summary>
        </member>
        <member name="F:ChargifyNET.CardType.American_Express">
            <summary>
            American Express
            </summary>
        </member>
        <member name="F:ChargifyNET.CardType.Diners_Club">
            <summary>
            Diners Club
            </summary>
        </member>
        <member name="F:ChargifyNET.CardType.JCB">
            <summary>
            JCB
            </summary>
        </member>
        <member name="F:ChargifyNET.CardType.Switch">
            <summary>
            Switch
            </summary>
        </member>
        <member name="F:ChargifyNET.CardType.Solo">
            <summary>
            Solo
            </summary>
        </member>
        <member name="F:ChargifyNET.CardType.Dankort">
            <summary>
            Dankort
            </summary>
        </member>
        <member name="F:ChargifyNET.CardType.Maestro">
            <summary>
            Maestro
            </summary>
        </member>
        <member name="F:ChargifyNET.CardType.Forbrugsforeningen">
            <summary>
            Forbrugsforeningen
            </summary>
        </member>
        <member name="F:ChargifyNET.CardType.Laser">
            <summary>
            Laser
            </summary>
        </member>
        <member name="F:ChargifyNET.CardType.Unknown">
            <summary>
            Internal value used to determine if the field has been set.
            </summary>
        </member>
        <member name="T:ChargifyNET.VaultType">
            <summary>
            The vaults supported by Chargify for importing
            </summary>
        </member>
        <member name="F:ChargifyNET.VaultType.AuthorizeNET">
            <summary>
            Authorize.NET
            </summary>
        </member>
        <member name="F:ChargifyNET.VaultType.Trust_Commerce">
            <summary>
            Trust Commerce
            </summary>
        </member>
        <member name="F:ChargifyNET.VaultType.Payment_Express">
            <summary>
            Payment Express
            </summary>
        </member>
        <member name="F:ChargifyNET.VaultType.Beanstream">
            <summary>
            Beanstream
            </summary>
        </member>
        <member name="F:ChargifyNET.VaultType.Braintree1">
            <summary>
            Braintree Version 1 (Orange)
            </summary>
        </member>
        <member name="F:ChargifyNET.VaultType.Braintree_Blue">
            <summary>
            Braintree Blue
            </summary>
        </member>
        <member name="F:ChargifyNET.VaultType.PayPal">
            <summary>
            PayPal
            </summary>
        </member>
        <member name="F:ChargifyNET.VaultType.QuickPay">
            <summary>
            QuickPay
            </summary>
        </member>
        <member name="F:ChargifyNET.VaultType.Eway">
            <summary>
            Eway
            </summary>
        </member>
        <member name="F:ChargifyNET.VaultType.EwayRapidStd">
            <summary>
            Eway
            </summary>
        </member>
        <member name="F:ChargifyNET.VaultType.Stripe">
            <summary>
            Stripe
            </summary>
        </member>
        <member name="F:ChargifyNET.VaultType.Pin">
            <summary>
            Pin
            </summary>
        </member>
        <member name="F:ChargifyNET.VaultType.Wirecard">
            <summary>
            Wirecard
            </summary>
        </member>
        <member name="F:ChargifyNET.VaultType.Bpoint">
            <summary>
            Bpoint
            </summary>
        </member>
        <member name="F:ChargifyNET.VaultType.FirstData">
            <summary>
            FirstData
            </summary>
        </member>
        <member name="F:ChargifyNET.VaultType.Elavon">
            <summary>
            Elavon Virtual Merchant Gateway
            </summary>
        </member>
        <member name="F:ChargifyNET.VaultType.CyberSource">
            <summary>
            CyberSource
            </summary>
        </member>
        <member name="F:ChargifyNET.VaultType.PayMill">
            <summary>
            PayMill
            </summary>
        </member>
        <member name="F:ChargifyNET.VaultType.Litle">
            <summary>
            Litle
            </summary>
        </member>
        <member name="F:ChargifyNET.VaultType.Moneris">
            <summary>
            Moneris
            </summary>
        </member>
        <member name="F:ChargifyNET.VaultType.Unknown">
            <summary>
            Internal value used to determine if the field has been set.
            </summary>
        </member>
        <member name="T:ChargifyNET.BankAccountType">
            <summary>
            The type of bank account
            </summary>
        </member>
        <member name="F:ChargifyNET.BankAccountType.Checking">
            <summary>
            Checking
            </summary>
        </member>
        <member name="F:ChargifyNET.BankAccountType.Savings">
            <summary>
            Savings
            </summary>
        </member>
        <member name="F:ChargifyNET.BankAccountType.Unknown">
            <summary>
            Internal value used to determine if the field has been set.
            </summary>
        </member>
        <member name="T:ChargifyNET.BankAccountHolderType">
            <summary>
            The primary account purpose
            </summary>
        </member>
        <member name="F:ChargifyNET.BankAccountHolderType.Personal">
            <summary>
            Personal
            </summary>
        </member>
        <member name="F:ChargifyNET.BankAccountHolderType.Business">
            <summary>
            Buisiness
            </summary>
        </member>
        <member name="F:ChargifyNET.BankAccountHolderType.Unknown">
            <summary>
            Internal value used to determine if the field has been set.
            </summary>
        </member>
        <member name="T:ChargifyNET.IPaymentProfileAttributes">
            <summary>
            Class which can be used to "import" subscriptions via the API into Chargify
            Info here: http://support.chargify.com/faqs/api/api-subscription-and-stored-card-token-imports
            </summary>
        </member>
        <member name="P:ChargifyNET.IPaymentProfileAttributes.VaultToken">
            <summary>
            The "token" provided by your vault storage for an already stored payment profile
            </summary>
        </member>
        <member name="P:ChargifyNET.IPaymentProfileAttributes.CustomerVaultToken">
            <summary>
            (Only for Authorize.NET CIM storage) The "customerProfileId" for the owner of the
            "customerPaymentProfileId" provided as the VaultToken
            </summary>
        </member>
        <member name="P:ChargifyNET.IPaymentProfileAttributes.CurrentVault">
            <summary>
            The vault that stores the payment profile with the provided VaultToken
            </summary>
        </member>
        <member name="P:ChargifyNET.IPaymentProfileAttributes.ExpirationYear">
            <summary>
            The year of expiration
            </summary>
        </member>
        <member name="P:ChargifyNET.IPaymentProfileAttributes.ExpirationMonth">
            <summary>
            The month of expiration
            </summary>
        </member>
        <member name="P:ChargifyNET.IPaymentProfileAttributes.CardType">
            <summary>
            (Optional) If you know the card type, you may supply it here so that we may display 
            the card type in the UI.
            </summary>
        </member>
        <member name="P:ChargifyNET.IPaymentProfileAttributes.LastFour">
            <summary>
            (Optional) If you have the last 4 digits of the credit card number, you may supply
            them here so we may create a masked card number for display in the UI
            </summary>
        </member>
        <member name="P:ChargifyNET.IPaymentProfileAttributes.BankName">
            <summary>
            The name of the bank where the customer's account resides
            </summary>
        </member>
        <member name="P:ChargifyNET.IPaymentProfileAttributes.BankRoutingNumber">
            <summary>
            The routing number of the bank
            </summary>
        </member>
        <member name="P:ChargifyNET.IPaymentProfileAttributes.BankAccountNumber">
            <summary>
            The customer's bank account number
            </summary>
        </member>
        <member name="P:ChargifyNET.IPaymentProfileAttributes.BankAccountType">
            <summary>
            Either checking or savings
            </summary>
        </member>
        <member name="P:ChargifyNET.IPaymentProfileAttributes.BankAccountHolderType">
            <summary>
            Either personal or business
            </summary>
        </member>
        <member name="T:ChargifyNET.IPaymentProfileBase">
            <summary>
            Base class for the credit card types
            </summary>
        </member>
        <member name="P:ChargifyNET.IPaymentProfileBase.Id">
            <summary>
            The Chargify-assigned ID of the stored card.
            </summary>
        </member>
        <member name="P:ChargifyNET.IPaymentProfileBase.FirstName">
            <summary>
            Get or set the first name on the card
            </summary>
        </member>
        <member name="P:ChargifyNET.IPaymentProfileBase.LastName">
            <summary>
            Get or set the last name on the card
            </summary>
        </member>
        <member name="P:ChargifyNET.IPaymentProfileBase.FullNumber">
            <summary>
            Get or set the full credit card number
            </summary>
        </member>
        <member name="P:ChargifyNET.IPaymentProfileBase.ExpirationMonth">
            <summary>
            Get or set the expiration month
            </summary>
        </member>
        <member name="P:ChargifyNET.IPaymentProfileBase.ExpirationYear">
            <summary>
            Get or set the expiration year
            </summary>
        </member>
        <member name="P:ChargifyNET.IPaymentProfileBase.BillingAddress">
            <summary>
            Get or set the billing address of the credit card
            </summary>
        </member>
        <member name="P:ChargifyNET.IPaymentProfileBase.BillingAddress2">
            <summary>
            Get or set the billing address 2 of the credit card
            </summary>
        </member>
        <member name="P:ChargifyNET.IPaymentProfileBase.BillingCity">
            <summary>
            Get or set the billing city of the credit card
            </summary>
        </member>
        <member name="P:ChargifyNET.IPaymentProfileBase.BillingState">
            <summary>
            Get or set the billing state or province of the credit card
            </summary>
        </member>
        <member name="P:ChargifyNET.IPaymentProfileBase.BillingZip">
            <summary>
            Get or set the billing zip code or postal code of the credit card
            </summary>
        </member>
        <member name="P:ChargifyNET.IPaymentProfileBase.BillingCountry">
            <summary>
            Get or set the billing country of the credit card
            </summary>
        </member>
        <member name="T:ChargifyNET.IPaymentProfileView">
            <summary>
            Interface representing viewing information for a credit card
            </summary>
        </member>
        <member name="P:ChargifyNET.IPaymentProfileView.PaymentType">
            <summary>
            Default is credit_card. May be bank_account or credit_card or paypal_account
            </summary>
        </member>
        <member name="P:ChargifyNET.IPaymentProfileView.CustomerID">
            <summary>
            The ID to the customer associated with this payment profile
            </summary>
        </member>
        <member name="P:ChargifyNET.IPaymentProfileView.CVV">
            <summary>
            The card verification value
            </summary>
        </member>
        <member name="P:ChargifyNET.IPaymentProfileView.CardType">
            <summary>
            Get or set the type of the credit card (Visa, MasterCharge. etc.)
            </summary>
        </member>
        <member name="P:ChargifyNET.IPaymentProfileView.BankName">
            <summary>
            The name of the bank where the customer's account resides
            </summary>
        </member>
        <member name="P:ChargifyNET.IPaymentProfileView.MaskedBankRoutingNumber">
            <summary>
            The masked routing number of the bank
            </summary>
        </member>
        <member name="P:ChargifyNET.IPaymentProfileView.BankRoutingNumber">
            <summary>
            The routing number of the bank
            </summary>
        </member>
        <member name="P:ChargifyNET.IPaymentProfileView.MaskedBankAccountNumber">
            <summary>
            The customer's masked bank account number
            </summary>
        </member>
        <member name="P:ChargifyNET.IPaymentProfileView.BankAccountNumber">
            <summary>
            The customer's bank account number
            </summary>
        </member>
        <member name="P:ChargifyNET.IPaymentProfileView.BankAccountType">
            <summary>
            Either checking or savings
            </summary>
        </member>
        <member name="P:ChargifyNET.IPaymentProfileView.BankAccountHolderType">
            <summary>
            Either personal or business
            </summary>
        </member>
        <member name="P:ChargifyNET.IPaymentProfileView.MaskedCardNumber">
            <summary>
            The customer's masked credit card number
            </summary>
        </member>
        <member name="P:ChargifyNET.IPaymentProfileView.PaymentMethodNonce">
            <summary>
            TODO
            </summary>
        </member>
        <member name="P:ChargifyNET.IPaymentProfileView.PayPalEmail">
            <summary>
            TODO
            </summary>
        </member>
        <member name="T:ChargifyNET.IntervalUnit">
            <summary>
            The interval used for the product
            </summary>
        </member>
        <member name="F:ChargifyNET.IntervalUnit.Day">
            <summary>
            Day
            </summary>
        </member>
        <member name="F:ChargifyNET.IntervalUnit.Month">
            <summary>
            Month
            </summary>
        </member>
        <member name="F:ChargifyNET.IntervalUnit.Never">
            <summary>
            No expiration
            </summary>
        </member>
        <member name="F:ChargifyNET.IntervalUnit.Unknown">
            <summary>
            Unknown Transaction Type
            </summary>
        </member>
        <member name="T:ChargifyNET.IProduct">
            <summary>
            Interface representing a product.  Subscriptions will subscribe to a product
            </summary>
        </member>
        <member name="P:ChargifyNET.IProduct.PriceInCents">
            <summary>
            Get the price (in cents)
            </summary>
        </member>
        <member name="P:ChargifyNET.IProduct.Price">
            <summary>
            Get the price, in dollars and cents.
            </summary>
        </member>
        <member name="P:ChargifyNET.IProduct.Name">
            <summary>
            Get the name of this product
            </summary>
        </member>
        <member name="P:ChargifyNET.IProduct.ID">
            <summary>
            The ID of the product
            </summary>
        </member>
        <member name="P:ChargifyNET.IProduct.Handle">
            <summary>
            Get the handle to this product
            </summary>
        </member>
        <member name="P:ChargifyNET.IProduct.Description">
            <summary>
            Get the description of the product
            </summary>
        </member>
        <member name="P:ChargifyNET.IProduct.ProductFamily">
            <summary>
            Get the product family for this product
            </summary>
        </member>
        <member name="P:ChargifyNET.IProduct.AccountingCode">
            <summary>
            Get the accounting code for this product
            </summary>
        </member>
        <member name="P:ChargifyNET.IProduct.IntervalUnit">
            <summary>
            Get the interval unit (day, month) for this product
            </summary>
        </member>
        <member name="P:ChargifyNET.IProduct.Interval">
            <summary>
            Get the renewal interval for this product
            </summary>
        </member>
        <member name="P:ChargifyNET.IProduct.InitialChargeInCents">
            <summary>
            Get the up front charge for this product, in cents. 
            </summary>
        </member>
        <member name="P:ChargifyNET.IProduct.InitialCharge">
            <summary>
            Get the up front charge for this product, in dollars and cents.
            </summary>
        </member>
        <member name="P:ChargifyNET.IProduct.TrialPriceInCents">
            <summary>
            Get the price of the trial period for a subscription to this product, in cents.
            </summary>
        </member>
        <member name="P:ChargifyNET.IProduct.TrialPrice">
            <summary>
            Get the price of the trial period for a subscription to this product, in dollars and cents.
            </summary>
        </member>
        <member name="P:ChargifyNET.IProduct.TrialInterval">
            <summary>
            A numerical interval for the length of the trial period of a subscription to this product.
            </summary>
        </member>
        <member name="P:ChargifyNET.IProduct.TrialIntervalUnit">
            <summary>
            The trial interval unit for this product, either "month" or "day"
            </summary>
        </member>
        <member name="P:ChargifyNET.IProduct.ExpirationInterval">
            <summary>
            A numerical interval for the length a subscription to this product will run before it expires.
            </summary>
        </member>
        <member name="P:ChargifyNET.IProduct.ExpirationIntervalUnit">
            <summary>
            The expiration interval for this product, either "month" or "day"
            </summary>
        </member>
        <member name="P:ChargifyNET.IProduct.ReturnURL">
            <summary>
            The URL the buyer is returned to after successful purchase.
            </summary>
        </member>
        <member name="P:ChargifyNET.IProduct.ReturnParams">
            <summary>
            The parameter string chargify will use in constructing the return URL.
            </summary>
        </member>
        <member name="P:ChargifyNET.IProduct.RequireCreditCard">
            <summary>
            This product requires a credit card
            </summary>
        </member>
        <member name="P:ChargifyNET.IProduct.RequestCreditCard">
            <summary>
            This product requests a credit card
            </summary>
        </member>
        <member name="P:ChargifyNET.IProduct.CreatedAt">
            <summary>
            Timestamp indicating when this product was created.
            </summary>
        </member>
        <member name="P:ChargifyNET.IProduct.UpdatedAt">
            <summary>
            Timestamp indicating when this product was updated.
            </summary>
        </member>
        <member name="P:ChargifyNET.IProduct.ArchivedAt">
            <summary>
            Timestamp indicating when this product was updated.
            </summary>
        </member>
        <member name="P:ChargifyNET.IProduct.PublicSignupPages">
            <summary>
            List of public signup page URLs and the associated ID
            </summary>
        </member>
        <member name="P:ChargifyNET.IProduct.ProductVersion">
            <summary>
            The version of the product
            </summary>
        </member>
        <member name="P:ChargifyNET.IProduct.Taxable">
            <summary>
            Is this product taxable?
            </summary>
        </member>
        <member name="P:ChargifyNET.IProduct.UpdateReturnUrl">
            <summary>
            The return url upon update
            </summary>
        </member>
        <member name="P:ChargifyNET.IProduct.UpdateReturnParams">
            <summary>
            Paramters for update
            </summary>
        </member>
        <member name="P:ChargifyNET.IProduct.InitialChargeAfterTrial">
            <summary>
            Will the setup/initial charge be processed after the trial?
            </summary>
        </member>
        <member name="T:ChargifyNET.IProductFamily">
            <summary>
            Interface representing a product family
            </summary>
        </member>
        <member name="P:ChargifyNET.IProductFamily.ID">
            <summary>
            Get the ID of the product family
            </summary>
        </member>
        <member name="T:ChargifyNET.IProductFamilyAttributes">
            <summary>
            Representing the basic attributes of a product family
            </summary>
        </member>
        <member name="P:ChargifyNET.IProductFamilyAttributes.AccountingCode">
            <summary>
            The accounting code of the family
            </summary>
        </member>
        <member name="P:ChargifyNET.IProductFamilyAttributes.Description">
            <summary>
            The description of the family
            </summary>
        </member>
        <member name="P:ChargifyNET.IProductFamilyAttributes.Handle">
            <summary>
            The product family handle which can be used to reference it after creation
            </summary>
        </member>
        <member name="P:ChargifyNET.IProductFamilyAttributes.Name">
            <summary>
            The name of the product family
            </summary>
        </member>
        <member name="T:ChargifyNET.IPublicSignupPage">
            <summary>
            Public Pages (formerly known as Hosted Pages) are highly customizable white label pages
            that you can use as the public-facing side of your subscription business.
            </summary>
        </member>
        <member name="P:ChargifyNET.IPublicSignupPage.ID">
            <summary>
            The ID of the public signup page
            </summary>
        </member>
        <member name="P:ChargifyNET.IPublicSignupPage.URL">
            <summary>
            The URL of the public signup page
            </summary>
        </member>
        <member name="P:ChargifyNET.IPublicSignupPage.ReturnURL">
            <summary>
            The url to which a customer will be returned after a successful signup
            </summary>
        </member>
        <member name="P:ChargifyNET.IPublicSignupPage.ReturnParams">
            <summary>
            The params to be appended to the ReturnURL
            </summary>
        </member>
        <member name="T:ChargifyNET.IReferralCode">
            <summary>
            Object representing referral code in Chargify
            </summary>
        </member>
        <member name="P:ChargifyNET.IReferralCode.ID">
            <summary>
            The Id of the referral code.
            </summary>
        </member>
        <member name="P:ChargifyNET.IReferralCode.SiteID">
            <summary>
            The Id of the site.
            </summary>
        </member>
        <member name="P:ChargifyNET.IReferralCode.SubscriptionID">
            <summary>
            The Id of the subscription.
            </summary>
        </member>
        <member name="P:ChargifyNET.IReferralCode.Code">
            <summary>
            The referral code.
            </summary>
        </member>
        <member name="T:ChargifyNET.IRefund">
            <summary>
            A representation of a refund with details about it
            </summary>
        </member>
        <member name="P:ChargifyNET.IRefund.PaymentID">
            <summary>
            (Required) The ID of the Payment that the credit will be applied to
            </summary>
        </member>
        <member name="P:ChargifyNET.IRefund.Success">
            <summary>
            Was the refund successful?
            </summary>
        </member>
        <member name="P:ChargifyNET.IRefund.AmountInCents">
            <summary>
            The amount of the refund and captured payment, represented in cents
            </summary>
        </member>
        <member name="P:ChargifyNET.IRefund.Amount">
            <summary>
            The amount of the refund and captured payment, represented in dollars and cents
            </summary>
        </member>
        <member name="P:ChargifyNET.IRefund.Memo">
            <summary>
            The memo created for the refund
            </summary>
        </member>
        <member name="T:ChargifyNET.IRenewalDetails">
            <summary>
            The output of a renewal preview
            </summary>
        </member>
        <member name="P:ChargifyNET.IRenewalDetails.NextAssessmentAt">
            <summary>
            The timestamp for the subscription’s next renewal
            </summary>
        </member>
        <member name="P:ChargifyNET.IRenewalDetails.SubtotalInCents">
            <summary>
            An integer representing the amount of the total pre-tax, pre-discount charges that will be assessed at the next renewal
            </summary>
        </member>
        <member name="P:ChargifyNET.IRenewalDetails.Subtotal">
            <summary>
            An decimal representing the amount of the total pre-tax, pre-discount charges that will be assessed at the next renewal
            </summary>
        </member>
        <member name="P:ChargifyNET.IRenewalDetails.TotalTaxInCents">
            <summary>
            An integer representing the total tax charges that will be assessed at the next renewal
            </summary>
        </member>
        <member name="P:ChargifyNET.IRenewalDetails.TotalTax">
            <summary>
            An decimal representing the total tax charges that will be assessed at the next renewal
            </summary>
        </member>
        <member name="P:ChargifyNET.IRenewalDetails.TotalDiscountInCents">
            <summary>
            An integer representing the amount of the coupon discounts that will be applied to the next renewal
            </summary>
        </member>
        <member name="P:ChargifyNET.IRenewalDetails.TotalDiscount">
            <summary>
            An decimal representing the amount of the coupon discounts that will be applied to the next renewal
            </summary>
        </member>
        <member name="P:ChargifyNET.IRenewalDetails.TotalInCents">
            <summary>
            An integer representing the total amount owed, less any discounts, that will be assessed at the next renewal
            </summary>
        </member>
        <member name="P:ChargifyNET.IRenewalDetails.Total">
            <summary>
            An decimal representing the total amount owed, less any discounts, that will be assessed at the next renewal
            </summary>
        </member>
        <member name="P:ChargifyNET.IRenewalDetails.ExistingBalanceInCents">
            <summary>
            An integer representing the amount of the subscription’s current balance
            </summary>
        </member>
        <member name="P:ChargifyNET.IRenewalDetails.ExistingBalance">
            <summary>
            An decimal representing the amount of the subscription’s current balance
            </summary>
        </member>
        <member name="P:ChargifyNET.IRenewalDetails.TotalAmountDueInCents">
            <summary>
            An integer representing the existing_balance_in_cents plus the total_in_cents
            </summary>
        </member>
        <member name="P:ChargifyNET.IRenewalDetails.TotalAmountDue">
            <summary>
            An decimal representing the existing_balance_in_cents plus the total_in_cents
            </summary>
        </member>
        <member name="P:ChargifyNET.IRenewalDetails.UncalculatedTaxes">
            <summary>
            A boolean indicating whether or not additional taxes will be calculated at the time of renewal.
            This will be true if you are using Avalara and the address of the subscription is
            in one of your defined taxable regions.
            </summary>
        </member>
        <member name="P:ChargifyNET.IRenewalDetails.LineItems">
            <summary>
            An array of <see cref="T:ChargifyNET.RenewalLineItem"/> representing the individual transactions that will be created at the next renewal
            </summary>
        </member>
        <member name="T:ChargifyNET.RenewalLineItem">
            <summary>
            The line item included in a renewal preview response
            </summary>
        </member>
        <member name="M:ChargifyNET.RenewalLineItem.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:ChargifyNET.RenewalLineItem.#ctor(System.Xml.XmlNode)">
            <summary>
            Xml parsing constructor
            </summary>
            <param name="node"></param>
        </member>
        <member name="M:ChargifyNET.RenewalLineItem.#ctor(ChargifyNET.Json.JsonObject)">
            <summary>
            Json parsing constructor
            </summary>
            <param name="renewalLineItem"></param>
        </member>
        <member name="P:ChargifyNET.RenewalLineItem.TransactionType">
            <summary>
            The type of transaction
            </summary>
        </member>
        <member name="P:ChargifyNET.RenewalLineItem.Kind">
            <summary>
            The kind of transaction
            </summary>
        </member>
        <member name="P:ChargifyNET.RenewalLineItem.AmountInCents">
            <summary>
            The amount of the transaction in cents
            </summary>
        </member>
        <member name="P:ChargifyNET.RenewalLineItem.Amount">
            <summary>
            The amount of the transaction in dollars and cents
            </summary>
        </member>
        <member name="P:ChargifyNET.RenewalLineItem.Memo">
            <summary>
            The memo of the transaction
            </summary>
        </member>
        <member name="P:ChargifyNET.RenewalLineItem.DiscountAmountInCents">
            <summary>
            The discount amount in cents
            </summary>
        </member>
        <member name="P:ChargifyNET.RenewalLineItem.DiscountAmount">
            <summary>
            The discount amount
            </summary>
        </member>
        <member name="P:ChargifyNET.RenewalLineItem.TaxableAmountInCents">
            <summary>
            The taxable amount in cents
            </summary>
        </member>
        <member name="P:ChargifyNET.RenewalLineItem.TaxableAmount">
            <summary>
            The taxable amount
            </summary>
        </member>
        <member name="T:ChargifyNET.ISiteStatistics">
            <summary>
            The stats object for a site
            </summary>
        </member>
        <member name="P:ChargifyNET.ISiteStatistics.SellerName">
            <summary>
            The name of the seller who "owns" the site.
            </summary>
        </member>
        <member name="P:ChargifyNET.ISiteStatistics.SiteName">
            <summary>
            The name of the site
            </summary>
        </member>
        <member name="P:ChargifyNET.ISiteStatistics.TotalSubscriptions">
            <summary>
            The total number of active subscriptions
            </summary>
        </member>
        <member name="P:ChargifyNET.ISiteStatistics.SubscriptionsToday">
            <summary>
            The total number of signups today
            </summary>
        </member>
        <member name="P:ChargifyNET.ISiteStatistics.TotalRevenue">
            <summary>
            Total site revenue
            </summary>
        </member>
        <member name="P:ChargifyNET.ISiteStatistics.RevenueToday">
            <summary>
            Today's revenue
            </summary>
        </member>
        <member name="P:ChargifyNET.ISiteStatistics.RevenueThisMonth">
            <summary>
            The site revenue for this month
            </summary>
        </member>
        <member name="P:ChargifyNET.ISiteStatistics.RevenueThisYear">
            <summary>
            The site revenue for this year
            </summary>
        </member>
        <member name="T:ChargifyNET.IStatement">
            <summary>
            The statment object.
            http://docs.chargify.com/statements
            </summary>
        </member>
        <member name="P:ChargifyNET.IStatement.ID">
            <summary>
            The unique identifier for this statement within Chargify
            </summary>
        </member>
        <member name="P:ChargifyNET.IStatement.SubscriptionID">
            <summary>
            The unique identifier of the subscription associated with this statement
            </summary>
        </member>
        <member name="P:ChargifyNET.IStatement.OpenedAt">
            <summary>
            The date that the statement was opened
            </summary>
        </member>
        <member name="P:ChargifyNET.IStatement.ClosedAt">
            <summary>
            The date that the statement was closed
            </summary>
        </member>
        <member name="P:ChargifyNET.IStatement.SettledAt">
            <summary>
            The date that the statement was settled
            </summary>
        </member>
        <member name="P:ChargifyNET.IStatement.TextView">
            <summary>
            A text representation of the statement
            </summary>
        </member>
        <member name="P:ChargifyNET.IStatement.BasicHtmlView">
            <summary>
            A simple HTML representation of the statement
            </summary>
        </member>
        <member name="P:ChargifyNET.IStatement.HtmlView">
            <summary>
            A more rebust HTML representation of the statment
            </summary>
        </member>
        <member name="P:ChargifyNET.IStatement.FuturePayments">
            <summary>
            A collection of payments from future sttments that pay charges on this statement
            </summary>
        </member>
        <member name="P:ChargifyNET.IStatement.StartingBalanceInCents">
            <summary>
            The subscription's balance at the time the statement was opened (in cents)
            </summary>
        </member>
        <member name="P:ChargifyNET.IStatement.StartingBalance">
            <summary>
            The subscription's balance at the time the statement was opened (in dollars and cents)
            </summary>
        </member>
        <member name="P:ChargifyNET.IStatement.EndingBalanceInCents">
            <summary>
            The subscription's balance at the time the statement was closed (in cents)
            </summary>
        </member>
        <member name="P:ChargifyNET.IStatement.EndingBalance">
            <summary>
            The subscription's balance at the time the statement was closed (in dollars and cents)
            </summary>
        </member>
        <member name="P:ChargifyNET.IStatement.CustomerFirstName">
            <summary>
            The customer's first name
            </summary>
        </member>
        <member name="P:ChargifyNET.IStatement.CustomerLastName">
            <summary>
            The customer's last name
            </summary>
        </member>
        <member name="P:ChargifyNET.IStatement.CustomerOrganization">
            <summary>
            The customer's organization
            </summary>
        </member>
        <member name="P:ChargifyNET.IStatement.CustomerShippingAddress">
            <summary>
            The customer's shipping address, line 1
            </summary>
        </member>
        <member name="P:ChargifyNET.IStatement.CustomerShippingAddress2">
            <summary>
            The customer's shipping address, line 2
            </summary>
        </member>
        <member name="P:ChargifyNET.IStatement.CustomerShippingCity">
            <summary>
            The customer's shipping city
            </summary>
        </member>
        <member name="P:ChargifyNET.IStatement.CustomerShippingState">
            <summary>
            The customer's shipping state or province
            </summary>
        </member>
        <member name="P:ChargifyNET.IStatement.CustomerShippingCountry">
            <summary>
            The customer's shipping country
            </summary>
        </member>
        <member name="P:ChargifyNET.IStatement.CustomerShippingZip">
            <summary>
            The customer's shipping postal code or zip
            </summary>
        </member>
        <member name="P:ChargifyNET.IStatement.CustomerBillingAddress">
            <summary>
            The customer's billing address, line 1
            </summary>
        </member>
        <member name="P:ChargifyNET.IStatement.CustomerBillingAddress2">
            <summary>
            The customer's billing address, line 2
            </summary>
        </member>
        <member name="P:ChargifyNET.IStatement.CustomerBillingCity">
            <summary>
            The customer's billing city
            </summary>
        </member>
        <member name="P:ChargifyNET.IStatement.CustomerBillingState">
            <summary>
            The customer's billing state or province
            </summary>
        </member>
        <member name="P:ChargifyNET.IStatement.CustomerBillingCountry">
            <summary>
            The customer's billing country
            </summary>
        </member>
        <member name="P:ChargifyNET.IStatement.CustomerBillingZip">
            <summary>
            The customer's billing postal code or zip
            </summary>
        </member>
        <member name="P:ChargifyNET.IStatement.Transactions">
            <summary>
            A collection of the transactions associated with the statement
            </summary>
        </member>
        <member name="P:ChargifyNET.IStatement.Events">
            <summary>
            A collection of the events associated with the statement
            </summary>
        </member>
        <member name="P:ChargifyNET.IStatement.CreatedAt">
            <summary>
            The creation date for this statement
            </summary>
        </member>
        <member name="P:ChargifyNET.IStatement.UpdatedAt">
            <summary>
            The date of last update for this statement
            </summary>
        </member>
        <member name="T:ChargifyNET.PaymentCollectionMethod">
            <summary>
            Subscriptions can have two modes now, automatic and invoicing.
            </summary>
        </member>
        <member name="F:ChargifyNET.PaymentCollectionMethod.Automatic">
            <summary>
            This is normal recurring credit card billing
            </summary>
        </member>
        <member name="F:ChargifyNET.PaymentCollectionMethod.Remittance">
            <summary>
            Invoices are issued to users, paid and organized by staff
            </summary>
        </member>
        <member name="F:ChargifyNET.PaymentCollectionMethod.Unknown">
            <summary>
            The default state if the value could not be parsed, or wasn't sent.
            </summary>
        </member>
        <member name="F:ChargifyNET.PaymentCollectionMethod.Invoice">
            <summary>
            Represents invoice billing type
            </summary>
        </member>
        <member name="T:ChargifyNET.SubscriptionState">
            <summary>
            The state of a Chargify subscription
            http://docs.chargify.com/subscription-states
            </summary>
        </member>
        <member name="F:ChargifyNET.SubscriptionState.Trialing">
            <summary>
            A trialing subscription is valid, and may transition to 'active' once the trial is ended and payment is recieved.
            </summary>
        </member>
        <member name="F:ChargifyNET.SubscriptionState.Trial_Ended">
            <summary>
            Indicates that the subscription was on a trial, and that the trial time has expired.
            </summary>
        </member>
        <member name="F:ChargifyNET.SubscriptionState.Assessing">
            <summary>
            The 'assessing' subscription state
            </summary>
        </member>
        <member name="F:ChargifyNET.SubscriptionState.Active">
            <summary>
            The 'active' subscription state
            </summary>
        </member>
        <member name="F:ChargifyNET.SubscriptionState.Soft_Failure">
            <summary>
            The 'soft_failure' subscription state
            </summary>
        </member>
        <member name="F:ChargifyNET.SubscriptionState.Past_Due">
            <summary>
            The 'past_due' subscription state
            </summary>
        </member>
        <member name="F:ChargifyNET.SubscriptionState.Suspended">
            <summary>
            The 'suspended' subscription state
            </summary>
        </member>
        <member name="F:ChargifyNET.SubscriptionState.Canceled">
            <summary>
            The 'canceled' subscription state
            </summary>
        </member>
        <member name="F:ChargifyNET.SubscriptionState.Expired">
            <summary>
            The 'expired' subscription state
            </summary>
        </member>
        <member name="F:ChargifyNET.SubscriptionState.Unpaid">
            <summary>
            The 'unpaid' subscription state
            </summary>
        </member>
        <member name="F:ChargifyNET.SubscriptionState.Paid">
            <summary>
            The 'paid' subscription state
            </summary>
        </member>
        <member name="F:ChargifyNET.SubscriptionState.Partial">
            <summary>
            The 'parital' subscription state
            </summary>
        </member>
        <member name="F:ChargifyNET.SubscriptionState.On_Hold">
            <summary>
            The 'on_hold' subscription state
            </summary>
        </member>
        <member name="F:ChargifyNET.SubscriptionState.Paused">
            <summary>
            The 'paused' subscription state
            </summary>
        </member>
        <member name="F:ChargifyNET.SubscriptionState.Unknown">
            <summary>
            The 'unknown' subscription state, only internal to this wrapper
            </summary>
        </member>
        <member name="T:ChargifyNET.ISubscription">
            <summary>
            Interface representing an existing Chargify subscription
            </summary>
        </member>
        <member name="P:ChargifyNET.ISubscription.ActivatedAt">
            <summary>
            Timestamp for when the subscription began
            <remarks>When it came out of trial, or when it began in the case of no trial period</remarks>
            </summary>
        </member>
        <member name="P:ChargifyNET.ISubscription.BalanceInCents">
            <summary>
            Get the current outstanding subscription balance, in the number of cents.
            </summary>
        </member>
        <member name="P:ChargifyNET.ISubscription.Balance">
            <summary>
            Get the current outstanding subscription balance, in dollars and cents.
            </summary>
        </member>
        <member name="P:ChargifyNET.ISubscription.CancelAtEndOfPeriod">
            <summary>
            Is this subscription going to automatically cancel at the end of the current period?
            </summary>
        </member>
        <member name="P:ChargifyNET.ISubscription.CancellationMessage">
            <summary>
            Seller-provided reason for, or note about, the cancellation.
            </summary>
        </member>
        <member name="P:ChargifyNET.ISubscription.Created">
            <summary>
            Get the date and time the subscription was created a Chargify
            </summary>
        </member>
        <member name="P:ChargifyNET.ISubscription.CurrentPeriodEndsAt">
            <summary>
            Get the date and time relating to the end of the current (recurring) period
            <remarks>(ie. when the next regularily scheduled attemped charge will occur)</remarks>
            </summary>
        </member>
        <member name="P:ChargifyNET.ISubscription.ExpiresAt">
            <summary>
            Timestamp giving the expiration date of this subscription (if any)
            </summary>
        </member>
        <member name="P:ChargifyNET.ISubscription.SubscriptionID">
            <summary>
            Get the subscription unique id within Chargify
            </summary>
        </member>
        <member name="P:ChargifyNET.ISubscription.NextAssessmentAt">
            <summary>
            Get the date and time that indicates when capture of payment will be tried or retried.
            </summary>
        </member>
        <member name="P:ChargifyNET.ISubscription.PaymentCollectionMethod">
            <summary>
            The type of billing used for this subscription
            </summary>
        </member>
        <member name="P:ChargifyNET.ISubscription.State">
            <summary>
            Get the current state of the subscription.
            </summary>
        </member>
        <member name="P:ChargifyNET.ISubscription.TrialEndedAt">
            <summary>
            Get the date and time relating to when the trial period (if any) ended
            </summary>
        </member>
        <member name="P:ChargifyNET.ISubscription.TrialStartedAt">
            <summary>
            Get the date and time relating to when the trial period (if any) began
            </summary>
        </member>
        <member name="P:ChargifyNET.ISubscription.LastUpdated">
            <summary>
            Get the date and time the subscription was last updated at chargify
            </summary>
        </member>
        <member name="P:ChargifyNET.ISubscription.CurrentPeriodStartedAt">
            <summary>
            Get the date and time relating to the start of the current (recurring) period.
            </summary>
        </member>
        <member name="P:ChargifyNET.ISubscription.PreviousState">
            <summary>
             The previous state of this subscription
            </summary>
        </member>
        <member name="P:ChargifyNET.ISubscription.SignupPaymentID">
            <summary>
            The ID of the corresponding payment transaction
            </summary>
        </member>
        <member name="P:ChargifyNET.ISubscription.TotalRevenue">
            <summary>
            The total subscription revenue (in dollars and cents)
            </summary>
        </member>
        <member name="P:ChargifyNET.ISubscription.TotalRevenueInCents">
            <summary>
            The total subscription revenue (in cents)
            </summary>
        </member>
        <member name="P:ChargifyNET.ISubscription.SignupRevenue">
            <summary>
            The revenue accepted upon signup
            </summary>
        </member>
        <member name="P:ChargifyNET.ISubscription.DelayedCancelAt">
            <summary>
            Get the date and time relating to the time the subscription was cancelled due to a "delayed cancel"
            </summary>
        </member>
        <member name="P:ChargifyNET.ISubscription.Product">
            <summary>
            Get the product for this subscription
            </summary>
        </member>
        <member name="P:ChargifyNET.ISubscription.PaymentProfile">
            <summary>
            Get the credit card details for this subscription
            </summary>
        </member>
        <member name="P:ChargifyNET.ISubscription.Customer">
            <summary>
            Get the customer details for this subscription
            </summary>
        </member>
        <member name="P:ChargifyNET.ISubscription.CanceledAt">
            <summary>
            Get the date the subscription was cancelled
            </summary>
        </member>
        <member name="P:ChargifyNET.ISubscription.CouponCode">
            <summary>
            Get the coupon code currently applied (if applicable) to the subscription
            </summary>
        </member>
        <member name="P:ChargifyNET.ISubscription.ProductVersionNumber">
            <summary>
            The version of the product currently subscribed. NOTE: we have not exposed versions 
            (yet) elsewhere in the API, but if you change the price of your product the versions 
            will increment and existing subscriptions will remain on prior versions (by default, 
            to support price grandfathering).
            </summary>
        </member>
        <member name="P:ChargifyNET.ISubscription.ProductPriceInCents">
            <summary>
            At what price was the product on when initial subscribed? (in cents)
            </summary>
        </member>
        <member name="P:ChargifyNET.ISubscription.ProductPrice">
            <summary>
            At what price was the product on when initial subscribed? (in dollars and cents)
            </summary>
        </member>
        <member name="P:ChargifyNET.ISubscription.NextProductId">
            <summary>
            If a delayed product change is scheduled, the ID of the product that the subscription 
            will be changed to at the next renewal.
            </summary>
        </member>
        <member name="P:ChargifyNET.ISubscription.ReferralCode">
            <summary>
            Referral code field
            </summary>
        </member>
        <member name="T:ChargifyNET.ISubscriptionCreateOptions">
            <summary>
            The options that allow you to create a subscription. You must set at least a product (by ID or by handle) and a customer (by ID, by attributes or by reference value)
            </summary>
        </member>
        <member name="P:ChargifyNET.ISubscriptionCreateOptions.ProductHandle">
            <summary>
            The API Handle of the product for which you are creating a subscription. 
            Required, unless a product_id is given instead.
            </summary>
        </member>
        <member name="P:ChargifyNET.ISubscriptionCreateOptions.ProductID">
            <summary>
            The Product ID of the product for which you are creating a subscription. 
            The product ID is not currently published, so we recommend using the API 
            Handle instead.
            </summary>
        </member>
        <member name="P:ChargifyNET.ISubscriptionCreateOptions.CustomerID">
            <summary>
            The ID of an existing customer within Chargify. Required, 
            unless a customer_reference or a set of customer_attributes is given.
            </summary>
        </member>
        <member name="P:ChargifyNET.ISubscriptionCreateOptions.CustomerReference">
            <summary>
            The reference value (provided by your app) of an existing customer 
            within Chargify. Required, unless a customer_id or a set of 
            customer_attributes is given.
            </summary>
        </member>
        <member name="P:ChargifyNET.ISubscriptionCreateOptions.CustomerAttributes">
            <summary>
            Details about the new customer
            </summary>
        </member>
        <member name="P:ChargifyNET.ISubscriptionCreateOptions.PaymentProfileID">
            <summary>
            The Payment Profile ID of an existing card or bank account, which belongs 
            to an existing customer to use for payment for this subscription
            </summary>
        </member>
        <member name="P:ChargifyNET.ISubscriptionCreateOptions.PaymentProfileAttributes">
            <summary>
            Details of the payment profile to use with this new subscription
            </summary>
        </member>
        <member name="P:ChargifyNET.ISubscriptionCreateOptions.CreditCardAttributes">
            <summary>
            Details of the credit card to use with this new subscription
            </summary>
        </member>
        <member name="P:ChargifyNET.ISubscriptionCreateOptions.CancellationMessage">
            <summary>
            (Optional) Can be used when canceling a subscription (via the HTTP 
            DELETE method) to make a note about the reason for cancellation.
            </summary>
        </member>
        <member name="P:ChargifyNET.ISubscriptionCreateOptions.NextBillingAt">
            <summary>
            (Optional) Set this attribute to a future date/time to sync imported subscriptions 
            to your existing renewal schedule.
            </summary>
        </member>
        <member name="P:ChargifyNET.ISubscriptionCreateOptions.ExpirationTracksNextBillingChange">
            <summary>
            (Optional, default false) When set to true, and when next_billing_at is present, 
            if the subscription expires, the expires_at will be shifted by the same amount of 
            time as the difference between the old and new “next billing” dates.
            </summary>
        </member>
        <member name="P:ChargifyNET.ISubscriptionCreateOptions.VatNumber">
            <summary>
            (Optional) Supplying the VAT number allows EU customer’s to opt-out of 
            the Value Added Tax assuming the merchant address and customer billing 
            address are not within the same EU country.
            </summary>
        </member>
        <member name="P:ChargifyNET.ISubscriptionCreateOptions.CouponCode">
            <summary>
            (Optional) The coupon code of the coupon to apply
            </summary>
        </member>
        <member name="P:ChargifyNET.ISubscriptionCreateOptions.CouponCodes">
            <summary>
            (Optional) The coupon codes of the coupons to apply
            </summary>
        </member>
        <member name="P:ChargifyNET.ISubscriptionCreateOptions.PaymentCollectionMethod">
            <summary>
            (Optional) The type of payment collection to be used in the subscription. May be 
            automatic, or invoice.
            </summary>
        </member>
        <member name="P:ChargifyNET.ISubscriptionCreateOptions.AgreementTerms">
            <summary>
            The ACH agreements terms
            </summary>
        </member>
        <member name="P:ChargifyNET.ISubscriptionCreateOptions.ProductChangeDelayed">
            <summary>
            (Optional, used only for Delayed Product Change) When set to true, 
            indicates that a changed value for product_handle should schedule 
            the product change to the next subscription renewal.
            </summary>
        </member>
        <member name="P:ChargifyNET.ISubscriptionCreateOptions.ReferralCode">
            <summary>
            A valid referral code. (optional, see Referrals for more details). 
            If supplied, must be valid, or else subscription creation will fail.
            </summary>
        </member>
        <member name="P:ChargifyNET.ISubscriptionCreateOptions.CalendarBilling">
            <summary>
            The ability to specify what specific day of the month that the billing
            should be done on. Cannot be used when also specifying NextBillingAt.
            </summary>
        </member>
        <member name="P:ChargifyNET.ISubscriptionCreateOptions.Components">
            <summary>
            The list of components to set when creating the subscription
            </summary>
        </member>
        <member name="T:ChargifyNET.ComponentDetails">
            <summary>
            Components
            </summary>
        </member>
        <member name="P:ChargifyNET.ComponentDetails.ComponentID">
            <summary>
            The ID of the component
            </summary>
        </member>
        <member name="M:ChargifyNET.ComponentDetails.ShouldSerializeComponentID">
            <summary>
            Ignore, used to determine if the field should be serialized
            </summary>
        </member>
        <member name="P:ChargifyNET.ComponentDetails.Enabled">
            <summary>
            Enabled?
            </summary>
        </member>
        <member name="M:ChargifyNET.ComponentDetails.ShouldSerializeEnabled">
            <summary>
            Ignore, used to determine if the field should be serialized
            </summary>
        </member>
        <member name="P:ChargifyNET.ComponentDetails.AllocatedQuantity">
            <summary>
            The allocated quantity
            </summary>
        </member>
        <member name="M:ChargifyNET.ComponentDetails.ShouldSerializeAllocatedQuantity">
            <summary>
            Ignore, used to determine if the field should be serialized
            </summary>
        </member>
        <member name="P:ChargifyNET.ComponentDetails.UnitBalance">
            <summary>
            The Unit Balance
            </summary>
        </member>
        <member name="M:ChargifyNET.ComponentDetails.ShouldSerializeUnitBalance">
            <summary>
            Ignore, used to determine if the field should be serialized
            </summary>
        </member>
        <member name="T:ChargifyNET.CalendarBillingAttributes">
            <summary>
            Calendar billing
            </summary>
        </member>
        <member name="P:ChargifyNET.CalendarBillingAttributes.SnapDay">
            <summary>
            The day that processing is performed
            </summary>
        </member>
        <member name="M:ChargifyNET.CalendarBillingAttributes.ShouldSerializeSnapDay">
            <summary>
            Ignore, used to determine if the field should be serialized
            </summary>
        </member>
        <member name="T:ChargifyNET.SubscriptionCreateOptions">
            <summary>
            Subscription creation options
            </summary>
        </member>
        <member name="P:ChargifyNET.SubscriptionCreateOptions.Components">
            <summary>
            The list of components to set when creating the subscription
            </summary>
        </member>
        <member name="M:ChargifyNET.SubscriptionCreateOptions.ShouldSerializeComponents">
            <summary>
            Ignore, used to determine if the field should be serialized
            </summary>
        </member>
        <member name="P:ChargifyNET.SubscriptionCreateOptions.CalendarBilling">
            <summary>
            The ability to specify what specific day of the month that the billing
            should be done on. Cannot be used when also specifying NextBillingAt.
            </summary>
        </member>
        <member name="M:ChargifyNET.SubscriptionCreateOptions.ShouldSerializeCalendarBilling">
            <summary>
            Ignore, used to determine if the field should be serialized
            </summary>
        </member>
        <member name="P:ChargifyNET.SubscriptionCreateOptions.AgreementTerms">
            <summary>
            The ACH agreements terms
            </summary>
        </member>
        <member name="M:ChargifyNET.SubscriptionCreateOptions.ShouldSerializeAgreementTerms">
            <summary>
            Ignore, used to determine if the field should be serialized
            </summary>
        </member>
        <member name="P:ChargifyNET.SubscriptionCreateOptions.CancellationMessage">
            <summary>
            (Optional) Can be used when canceling a subscription (via the HTTP 
            DELETE method) to make a note about the reason for cancellation.
            </summary>
        </member>
        <member name="M:ChargifyNET.SubscriptionCreateOptions.ShouldSerializeCancellationMessage">
            <summary>
            Ignore, used to determine if the field should be serialized
            </summary>
        </member>
        <member name="P:ChargifyNET.SubscriptionCreateOptions.CouponCode">
            <summary>
            (Optional) The coupon code of the coupon to apply
            </summary>
        </member>
        <member name="M:ChargifyNET.SubscriptionCreateOptions.ShouldSerializeCouponCode">
            <summary>
            Ignore, used to determine if the field should be serialized
            </summary>
        </member>
        <member name="P:ChargifyNET.SubscriptionCreateOptions.CouponCodes">
            <summary>
            (Optional) The coupon codes of the coupons to apply
            </summary>
        </member>
        <member name="M:ChargifyNET.SubscriptionCreateOptions.ShouldSerializeCouponCodes">
            <summary>
            Ignore, used to determine if the field should be serialized
            </summary>
        </member>
        <member name="P:ChargifyNET.SubscriptionCreateOptions.CustomerAttributes">
            <summary>
            Details about the new customer
            </summary>
        </member>
        <member name="P:ChargifyNET.SubscriptionCreateOptions.CustomerID">
            <summary>
            The ID of an existing customer within Chargify. Required, 
            unless a customer_reference or a set of customer_attributes is given.
            </summary>
        </member>
        <member name="M:ChargifyNET.SubscriptionCreateOptions.ShouldSerializeCustomerID">
            <summary>
            Ignore, used to determine if the field should be serialized
            </summary>
        </member>
        <member name="P:ChargifyNET.SubscriptionCreateOptions.CustomerReference">
            <summary>
            The reference value (provided by your app) of an existing customer 
            within Chargify. Required, unless a customer_id or a set of 
            customer_attributes is given.
            </summary>
        </member>
        <member name="M:ChargifyNET.SubscriptionCreateOptions.ShouldSerializeCustomerReference">
            <summary>
            Ignore, used to determine if the field should be serialized
            </summary>
        </member>
        <member name="P:ChargifyNET.SubscriptionCreateOptions.ExpirationTracksNextBillingChange">
            <summary>
            (Optional, default false) When set to true, and when next_billing_at is present, 
            if the subscription expires, the expires_at will be shifted by the same amount of 
            time as the difference between the old and new “next billing” dates.
            </summary>
        </member>
        <member name="M:ChargifyNET.SubscriptionCreateOptions.ShouldSerializeExpirationTracksNextBillingChange">
            <summary>
            Ignore, used to determine if the field should be serialized
            </summary>
        </member>
        <member name="P:ChargifyNET.SubscriptionCreateOptions.NextBillingAt">
            <summary>
            (Optional) Set this attribute to a future date/time to sync imported subscriptions 
            to your existing renewal schedule.
            </summary>
        </member>
        <member name="M:ChargifyNET.SubscriptionCreateOptions.ShouldSerializeNextBillingAt">
            <summary>
            Ignore, used to determine if the field should be serialized
            </summary>
        </member>
        <member name="P:ChargifyNET.SubscriptionCreateOptions.PaymentCollectionMethod">
            <summary>
            (Optional) The type of payment collection to be used in the subscription. May be 
            automatic, or invoice.
            </summary>
        </member>
        <member name="M:ChargifyNET.SubscriptionCreateOptions.ShouldSerializePaymentCollectionMethod">
            <summary>
            Ignore, used to determine if the field should be serialized
            </summary>
        </member>
        <member name="P:ChargifyNET.SubscriptionCreateOptions.PaymentProfileAttributes">
            <summary>
            Details of the payment profile to use with this new subscription
            </summary>
        </member>
        <member name="P:ChargifyNET.SubscriptionCreateOptions.CreditCardAttributes">
            <summary>
            Details of the credit card to use with this new subscription
            </summary>
        </member>
        <member name="P:ChargifyNET.SubscriptionCreateOptions.PaymentProfileID">
            <summary>
            The Payment Profile ID of an existing card or bank account, which belongs 
            to an existing customer to use for payment for this subscription
            </summary>
        </member>
        <member name="M:ChargifyNET.SubscriptionCreateOptions.ShouldSerializePaymentProfileID">
            <summary>
            Ignore, used to determine if the field should be serialized
            </summary>
        </member>
        <member name="P:ChargifyNET.SubscriptionCreateOptions.ProductChangeDelayed">
            <summary>
            (Optional, used only for Delayed Product Change) When set to true, 
            indicates that a changed value for product_handle should schedule 
            the product change to the next subscription renewal.
            </summary>
        </member>
        <member name="M:ChargifyNET.SubscriptionCreateOptions.ShouldSerializeProductChangeDelayed">
            <summary>
            Ignore, used to determine if the field should be serialized
            </summary>
        </member>
        <member name="P:ChargifyNET.SubscriptionCreateOptions.ProductHandle">
            <summary>
            The API Handle of the product for which you are creating a subscription. 
            Required, unless a product_id is given instead.
            </summary>
        </member>
        <member name="M:ChargifyNET.SubscriptionCreateOptions.ShouldSerializeProductHandle">
            <summary>
            Ignore, used to determine if the field should be serialized
            </summary>
        </member>
        <member name="P:ChargifyNET.SubscriptionCreateOptions.ProductID">
            <summary>
            The Product ID of the product for which you are creating a subscription. 
            The product ID is not currently published, so we recommend using the API 
            Handle instead.
            </summary>
        </member>
        <member name="M:ChargifyNET.SubscriptionCreateOptions.ShouldSerializeProductID">
            <summary>
            Ignore, used to determine if the field should be serialized
            </summary>
        </member>
        <member name="P:ChargifyNET.SubscriptionCreateOptions.ReferralCode">
            <summary>
            A valid referral code. (optional, see Referrals for more details). 
            If supplied, must be valid, or else subscription creation will fail.
            </summary>
        </member>
        <member name="M:ChargifyNET.SubscriptionCreateOptions.ShouldSerializeReferralCode">
            <summary>
            Ignore, used to determine if the field should be serialized
            </summary>
        </member>
        <member name="P:ChargifyNET.SubscriptionCreateOptions.VatNumber">
            <summary>
            (Optional) Supplying the VAT number allows EU customer’s to opt-out of 
            the Value Added Tax assuming the merchant address and customer billing 
            address are not within the same EU country. This is part of the customer
            record but is only included in the input as part of this object, and 
            not in the customer attributes (if specified).
            </summary>
        </member>
        <member name="M:ChargifyNET.SubscriptionCreateOptions.ShouldSerializeVatNumber">
            <summary>
            Ignore, used to determine if the field should be serialized
            </summary>
        </member>
        <member name="T:ChargifyNET.ISubscriptionOverride">
            <summary>
            Interface for properties that can be overridden at Chargify, in the context of a subscription.
            </summary>
        </member>
        <member name="P:ChargifyNET.ISubscriptionOverride.ActivatedAt">
            <summary>
            Can be used to record an external signup date. Chargify uses this field to record when a subscription first goes active (either at signup or at trial end)
            </summary>
        </member>
        <member name="P:ChargifyNET.ISubscriptionOverride.CanceledAt">
            <summary>
            Can be used to record an external cancellation date. Chargify sets this field automatically when a subscription is canceled, whether by request or via dunning.
            </summary>
        </member>
        <member name="P:ChargifyNET.ISubscriptionOverride.CancellationMessage">
            <summary>
            Can be used to record a reason for the original cancellation.
            </summary>
        </member>
        <member name="P:ChargifyNET.ISubscriptionOverride.ExpiresAt">
            <summary>
            Can be used to record an external expiration date. Chargify sets this field automatically when a subscription expires (ceases billing) after a prescribed amount of time.
            </summary>
        </member>
        <member name="T:ChargifyNET.ISubscriptionPreview">
            <summary>
            Subscription preview
            </summary>
        </member>
        <member name="P:ChargifyNET.ISubscriptionPreview.SubscriptionPreviewResult">
            <summary>
            Subscription preview result
            </summary>
        </member>
        <member name="T:ChargifyNET.ISubscriptionPreviewResult">
            <summary>
            Subscription preview result
            </summary>
        </member>
        <member name="P:ChargifyNET.ISubscriptionPreviewResult.CurrentBillingManifest">
            <summary>
            Current billing manifest
            </summary>
        </member>
        <member name="P:ChargifyNET.ISubscriptionPreviewResult.NextBillingManifest">
            <summary>
            Next billing manifest
            </summary>
        </member>
        <member name="T:ChargifyNET.ISubscriptionPreviewBillingManifest">
            <summary>
            Subscription preview billing manifest
            </summary>
        </member>
        <member name="T:ChargifyNET.TransactionChargeKind">
            <summary>
            The specific "subtype" for the transaction_type
            </summary>
        </member>
        <member name="F:ChargifyNET.TransactionChargeKind.Baseline">
            <summary>
            A normal charge
            </summary>
        </member>
        <member name="F:ChargifyNET.TransactionChargeKind.One_Time">
            <summary>
            A one-time charge, captured immediately from payment source (credit card)
            </summary>
        </member>
        <member name="F:ChargifyNET.TransactionChargeKind.Delay_Capture">
            <summary>
            A one-time charge accrued to the subscription to be captured at next normal billing/renewal
            </summary>
        </member>
        <member name="F:ChargifyNET.TransactionChargeKind.Initial">
            <summary>
            A initial/upfront/startup charge added according to the product setup settings
            </summary>
        </member>
        <member name="F:ChargifyNET.TransactionChargeKind.Metered">
            <summary>
            A charge from usage of a metered component
            </summary>
        </member>
        <member name="F:ChargifyNET.TransactionChargeKind.Metered_Component">
            <summary>
            A charge from usage of a metered component
            </summary>
        </member>
        <member name="F:ChargifyNET.TransactionChargeKind.Quantity_Based_Component">
            <summary>
            A charge from a quantity-based component allocation
            </summary>
        </member>
        <member name="F:ChargifyNET.TransactionChargeKind.On_Off_Component">
            <summary>
            A charge from an on/off component allocation
            </summary>
        </member>
        <member name="F:ChargifyNET.TransactionChargeKind.Tax">
            <summary>
            A calculated tax charge
            </summary>
        </member>
        <member name="T:ChargifyNET.TransactionType">
            <summary>
            The following is a list of available transaction types
            </summary>
        </member>
        <member name="F:ChargifyNET.TransactionType.Charge">
            <summary>
            Charge Transaction
            </summary>
        </member>
        <member name="F:ChargifyNET.TransactionType.Refund">
            <summary>
            Refund Transaction
            </summary>
        </member>
        <member name="F:ChargifyNET.TransactionType.Payment">
            <summary>
            Payment Transaction
            </summary>
        </member>
        <member name="F:ChargifyNET.TransactionType.Credit">
            <summary>
            Credit Transaction
            </summary>
        </member>
        <member name="F:ChargifyNET.TransactionType.Payment_Authorization">
            <summary>
            Transaction Authorization
            </summary>
        </member>
        <member name="F:ChargifyNET.TransactionType.Info">
            <summary>
            Info Transaction
            </summary>
        </member>
        <member name="F:ChargifyNET.TransactionType.Adjustment">
            <summary>
            Adjustment Transaction
            </summary>
        </member>
        <member name="F:ChargifyNET.TransactionType.Unknown">
            <summary>
            Unknown Transaction Type
            </summary>
        </member>
        <member name="T:ChargifyNET.ITransaction">
            <summary>
            Transaction for a subscription/product for a customer.
            </summary>
        </member>
        <member name="P:ChargifyNET.ITransaction.Type">
            <summary>
            The type of transaction
            </summary>
        </member>
        <member name="P:ChargifyNET.ITransaction.ID">
            <summary>
            The unique identifier for the Transaction
            </summary>
        </member>
        <member name="P:ChargifyNET.ITransaction.AmountInCents">
            <summary>
            The amount in cents for the Transaction
            </summary>
        </member>
        <member name="P:ChargifyNET.ITransaction.Amount">
            <summary>
             The amount (in dollars and cents) for the Transaction
            </summary>
        </member>
        <member name="P:ChargifyNET.ITransaction.CreatedAt">
            <summary>
            Timestamp indicating when the Transaction was created
            </summary>
        </member>
        <member name="P:ChargifyNET.ITransaction.StartingBalanceInCents">
            <summary>
            The initial balance on the subscription before the Transaction has been processed, in cents.
            </summary>
        </member>
        <member name="P:ChargifyNET.ITransaction.StartingBalance">
            <summary>
            The initial balance on the subscription before the Transaction has been processed, in dollars and cents.
            </summary>
        </member>
        <member name="P:ChargifyNET.ITransaction.EndingBalanceInCents">
            <summary>
            The remaining balance on the subscription after the Transaction has been processed, in cents.
            </summary>
        </member>
        <member name="P:ChargifyNET.ITransaction.EndingBalance">
            <summary>
            The remaining balance on the subscription after the Transaction has been processed, in dollars and cents.
            </summary>
        </member>
        <member name="P:ChargifyNET.ITransaction.Memo">
            <summary>
            A note about the Transaction
            </summary>
        </member>
        <member name="P:ChargifyNET.ITransaction.SubscriptionID">
            <summary>
            The unique identifier for the associated Subscription
            </summary>
        </member>
        <member name="P:ChargifyNET.ITransaction.ProductID">
            <summary>
            The unique identifier for the associated Product
            </summary>
        </member>
        <member name="P:ChargifyNET.ITransaction.Success">
            <summary>
            Whether or not the Transaction was successful.
            </summary>
        </member>
        <member name="P:ChargifyNET.ITransaction.PaymentID">
            <summary>
            The ID of the payment
            </summary>
        </member>
        <member name="P:ChargifyNET.ITransaction.Kind">
            <summary>
            The type (kind) of transaction
            </summary>
        </member>
        <member name="P:ChargifyNET.ITransaction.GatewayTransactionID">
            <summary>
            The gateway's ID for this transaction (will be different than the Chargify ID)
            </summary>
        </member>
        <member name="P:ChargifyNET.ITransaction.GatewayOrderID">
            <summary>
            The gateway's order ID for this transaction
            </summary>
        </member>
        <member name="T:ChargifyNET.IUsage">
            <summary>
            A usage is a record of a customer using a metered component
            </summary>
        </member>
        <member name="P:ChargifyNET.IUsage.ID">
            <summary>
            The ID of the usage element
            </summary>
        </member>
        <member name="P:ChargifyNET.IUsage.Quantity">
            <summary>
            The usage quantity
            </summary>
        </member>
        <member name="P:ChargifyNET.IUsage.Memo">
            <summary>
            A note containing information about the usage
            </summary>
        </member>
        <member name="T:ChargifyNET.Invoice">
            <summary>
            Invoice Billing allows you to bill your customers manually by sending them an invoice each month. Subscriptions with invoice billing enabled will not be charged automatically.
            </summary>
        </member>
        <member name="M:ChargifyNET.Invoice.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:ChargifyNET.Invoice.#ctor(System.String)">
            <summary>
            Constructor
            </summary>
            <param name="invoiceXml">An XML string containing a invoice node</param>
        </member>
        <member name="M:ChargifyNET.Invoice.#ctor(System.Xml.XmlNode)">
            <summary>
            Constructor
            </summary>
            <param name="invoiceNode">An xml node with invoice information</param>
        </member>
        <member name="M:ChargifyNET.Invoice.#ctor(ChargifyNET.Json.JsonObject)">
            <summary>
            Constructor
            </summary>
            <param name="invoiceObject">An JsonObject with invoice information</param>
        </member>
        <member name="P:ChargifyNET.Invoice.SubscriptionID">
            <summary>
            The subscription unique id within Chargify
            </summary>
        </member>
        <member name="P:ChargifyNET.Invoice.StatementID">
            <summary>
            The statement unique id within Chargify
            </summary>
        </member>
        <member name="P:ChargifyNET.Invoice.SiteID">
            <summary>
            The site unique id within Chargify
            </summary>
        </member>
        <member name="P:ChargifyNET.Invoice.State">
            <summary>
            The current state of the subscription associated with this invoice. Please see the documentation for Subscription States
            </summary>
        </member>
        <member name="P:ChargifyNET.Invoice.TotalAmountInCents">
            <summary>
            Gives the current invoice amount in the number of cents (ie. the sum of charges, in cents)
            </summary>
        </member>
        <member name="P:ChargifyNET.Invoice.TotalAmount">
            <summary>
            Gives the current invoice amount in the number of cents (ie. the sum of charges, in dollars and cents)
            </summary>
        </member>
        <member name="P:ChargifyNET.Invoice.PaidAt">
            <summary>
            The date/time when the invoice was paid in full
            </summary>
        </member>
        <member name="P:ChargifyNET.Invoice.CreatedAt">
            <summary>
            The creation date/time for this invoice
            </summary>
        </member>
        <member name="P:ChargifyNET.Invoice.UpdatedAt">
            <summary>
            The date/time of last update for this invoice
            </summary>
        </member>
        <member name="P:ChargifyNET.Invoice.AmountDueInCents">
            <summary>
            Gives the current outstanding invoice balance in the number of cents
            </summary>
        </member>
        <member name="P:ChargifyNET.Invoice.AmountDue">
            <summary>
            Gives the current outstanding invoice balance in the number of dollars and cents
            </summary>
        </member>
        <member name="P:ChargifyNET.Invoice.Number">
            <summary>
            The unique (to this site) identifier for this invoice
            </summary>
        </member>
        <member name="P:ChargifyNET.Invoice.Charges">
            <summary>
            A list of charges applied to this invoice
            </summary>
        </member>
        <member name="P:ChargifyNET.Invoice.PaymentsAndCredits">
            <summary>
            A list of the financial transactions that modify the amount due
            </summary>
        </member>
        <member name="T:ChargifyNET.Json.JsonArray">
            <summary>
            Object representing a JsonArray
            </summary>
        </member>
        <member name="P:ChargifyNET.Json.JsonArray.Items">
            <summary>
            The JsonValue items in the array
            </summary>
        </member>
        <member name="P:ChargifyNET.Json.JsonArray.Length">
            <summary>
            The number of items in the JSON array
            </summary>
        </member>
        <member name="T:ChargifyNET.Json.JsonBoolean">
            <summary>
            Object representing JSON boolean value
            </summary>
        </member>
        <member name="P:ChargifyNET.Json.JsonBoolean.Value">
            <summary>
            The value of this object (as bool)
            </summary>
        </member>
        <member name="M:ChargifyNET.Json.JsonBoolean.#ctor(System.Boolean)">
            <summary>
            Constructor
            </summary>
            <param name="value">The value of this object</param>
        </member>
        <member name="M:ChargifyNET.Json.JsonBoolean.ToString">
            <summary>
            Returns the boolean string of this object
            </summary>
            <returns></returns>
        </member>
        <member name="T:ChargifyNET.Json.JsonException">
            <summary>
            Exception for dealing with Json
            </summary>
        </member>
        <member name="M:ChargifyNET.Json.JsonException.#ctor(System.String)">
            <summary>
            JsonException constructor
            </summary>
            <param name="message">The message to display</param>
        </member>
        <member name="T:ChargifyNET.Json.JsonParseException">
            <summary>
            Exception for dealing with Json parsing
            </summary>
        </member>
        <member name="M:ChargifyNET.Json.JsonParseException.#ctor(System.String)">
            <summary>
            JsonParseException Constructor
            </summary>
            <param name="message">The message to display</param>
        </member>
        <member name="M:ChargifyNET.Json.JsonParseException.#ctor(System.String,System.Int32)">
            <summary>
            JsonParseException constructor
            </summary>
            <param name="input">The JSON being parsed</param>
            <param name="position">The position where an error occurred parsing it</param>
        </member>
        <member name="T:ChargifyNET.Json.JsonHelper">
            <summary>
            Methods useful for parsing and getting types
            </summary>
        </member>
        <member name="M:ChargifyNET.Json.JsonHelper.GetJsonStringAsString(ChargifyNET.Json.JsonObject,System.String)">
            <summary>
            Method for getting a JsonString as a System.String
            </summary>
            <param name="jsonObject">The object to get a string from</param>
            <param name="fieldName">The field to retrieve</param>
            <returns>The string if applicable, null otherwise.</returns>
        </member>
        <member name="M:ChargifyNET.Json.JsonHelper.GetJsonStringAsString(ChargifyNET.Json.JsonObject,System.String,System.String)">
            <summary>
            Method for getting a System.String from a JsonString
            </summary>
            <param name="jsonObject">The object to get a string from</param>
            <param name="fieldName">The field to retrieve</param>
            <param name="defaultValue">The default value to return if not found.</param>
            <returns>The string if applicable, defaultValue otherwise.</returns>
        </member>
        <member name="M:ChargifyNET.Json.JsonHelper.ValidateJsonField(ChargifyNET.Json.JsonObject,System.String,System.Type)">
            <summary>
            Method useful for validating that an object can be converted into a type
            </summary>
            <param name="jsonObject">The jsonObject to validate</param>
            <param name="fieldName">The field of the JsonObject to validate</param>
            <param name="fieldType">The type to try to validate against</param>
        </member>
        <member name="T:ChargifyNET.Json.JsonNumber">
            <summary>
            Object representing a JsonNumber
            </summary>
        </member>
        <member name="P:ChargifyNET.Json.JsonNumber.LongValue">
            <summary>
            The long value of this JsonNumber object (if applicable)
            </summary>
        </member>
        <member name="P:ChargifyNET.Json.JsonNumber.IntValue">
            <summary>
            The Integer value of this JsonNumber object (if applicable)
            </summary>
        </member>
        <member name="P:ChargifyNET.Json.JsonNumber.DoubleValue">
            <summary>
            The double value of this JsonNumber object (if applicable)
            </summary>
        </member>
        <member name="M:ChargifyNET.Json.JsonNumber.#ctor(System.Double)">
            <summary>
            Constructor
            </summary>
            <param name="value">The double value of the object</param>
        </member>
        <member name="M:ChargifyNET.Json.JsonNumber.IsNumberPart(System.Char)">
            <summary>
            Static method used to determine if a character is a digit or part of a number
            </summary>
            <param name="ch">The character to examine</param>
            <returns>True if it is part of a number, false otherwise.</returns>
        </member>
        <member name="M:ChargifyNET.Json.JsonNumber.ToString">
            <summary>
            Method for getting the string representation of the double value
            </summary>
            <returns></returns>
        </member>
        <member name="T:ChargifyNET.Json.JsonObject">
            <summary>
            Object representing a JsonObject
            </summary>
        </member>
        <member name="P:ChargifyNET.Json.JsonObject.Item(System.String)">
            <summary>
            Enumerator into this object
            </summary>
            <param name="key">The string key to evaluate</param>
            <returns>The JsonValue at key</returns>
        </member>
        <member name="P:ChargifyNET.Json.JsonObject.Keys">
            <summary>
            Returns the collection of keys from this object
            </summary>
        </member>
        <member name="M:ChargifyNET.Json.JsonObject.TryGetValue(System.String,ChargifyNET.Json.JsonValue@)">
            <summary>
            Method used to attempt to get a value from this Object
            </summary>
            <param name="key">The proposed key</param>
            <param name="value">The value to retrieve it to</param>
            <returns>True if successful, false otherwise.</returns>
        </member>
        <member name="M:ChargifyNET.Json.JsonObject.ContainsKey(System.String)">
            <summary>
            Does this object contain the specified key?
            </summary>
            <param name="key">The key in question</param>
            <returns>True if found, false otherwise. NullReferenceException if no key passed in.</returns>
        </member>
        <member name="M:ChargifyNET.Json.JsonObject.Parse(System.String)">
            <summary>
            Parsing method, used to parse JSON string into JsonObject
            </summary>
            <param name="str">The string to parse</param>
            <returns>JsonObject if applicable, null otherwise. JsonParseException if not properly formatted.</returns>
        </member>
        <member name="T:ChargifyNET.Json.JsonString">
            <summary>
            Object representing the JsonString
            </summary>
        </member>
        <member name="P:ChargifyNET.Json.JsonString.Value">
            <summary>
            The value of this JsonString
            </summary>
        </member>
        <member name="M:ChargifyNET.Json.JsonString.#ctor(System.String)">
            <summary>
            Constructor
            </summary>
            <param name="value">The value of this JsonString</param>
        </member>
        <member name="M:ChargifyNET.Json.JsonString.ToString">
            <summary>
            String value of this JsonString (same as Value)
            </summary>
            <returns></returns>
        </member>
        <member name="T:ChargifyNET.Json.JsonValue">
            <summary>
            Object representing JSON value
            </summary>
        </member>
        <member name="M:ChargifyNET.Json.JsonValue.EatSpaces(System.String,System.Int32@)">
            <summary>
            Eats spaces in the string
            </summary>
            <param name="str">The string to eat spaces from</param>
            <param name="position">The current position</param>
        </member>
        <member name="M:ChargifyNET.Json.JsonValue.ParseValue(System.String,System.Int32@)">
            <summary>
            Parses the JSON value into the JsonValue object
            </summary>
            <param name="str">The string to parse</param>
            <param name="position">The current position</param>
            <returns>The JsonValue if parsed, null otherwise.</returns>
        </member>
        <member name="T:ChargifyNET.Json.XmlToJsonConverter">
            <summary>
            Class used to convert an XmlDocument into JSON to send back to Chargify
            </summary>
        </member>
        <member name="M:ChargifyNET.Json.XmlToJsonConverter.HasChildren(System.Xml.XmlElement)">
            <summary>
            Does the node have children?
            </summary>
            <param name="node">The xml element node</param>
            <returns>True if the element has children, false otherwise.</returns>
        </member>
        <member name="M:ChargifyNET.Json.XmlToJsonConverter.XmlToJson(System.Xml.XmlDocument)">
            <summary>
            Method converts XmlDocument to JSON
            </summary>
            <param name="xmlDoc">The document to convert</param>
            <returns>The JSON equivalent string</returns>
        </member>
        <member name="T:ChargifyNET.Metadata">
            <summary>
            Chargify Metadata is used to add your own meaningful values to subscription or customer records.
            Metadata is associated to a customer or subscription, and corresponds to a Metafield. 
            When creating a new metadata object for a given record, if the metafield is not present 
            it will be created.
            </summary>
            <remarks>
            Metadata values are limited to 2kB in size. 
            Additonally, there are limits on the number of unique "names" available per resource.
            </remarks>
        </member>
        <member name="M:ChargifyNET.Metadata.#ctor">
            <summary>
            Meaningful values to subscription or customer records
            </summary>
        </member>
        <member name="M:ChargifyNET.Metadata.#ctor(System.String)">
            <summary>
            Meaningful values to subscription or customer records
            </summary>
            <param name="metadataXml">The XML to parse into a metadata result</param>
        </member>
        <member name="M:ChargifyNET.Metadata.#ctor(System.Xml.XmlNode)">
            <summary>
            Meaningful values to subscription or customer records
            </summary>
            <param name="metadataNode">The XML document node to use to parse into a metadata result</param>
        </member>
        <member name="P:ChargifyNET.Metadata.ResourceID">
            <summary>
            The resource id that the metadata belongs to
            </summary>
        </member>
        <member name="P:ChargifyNET.Metadata.Value">
            <summary>
            The value of the attribute that was added to the resource
            </summary>
        </member>
        <member name="P:ChargifyNET.Metadata.Name">
            <summary>
            The name of the attribute that is added to the resource
            </summary>
        </member>
        <member name="M:ChargifyNET.Metadata.GetHashCode">
            <summary>
            GetHashCode
            </summary>
            <returns></returns>
        </member>
        <member name="M:ChargifyNET.Metadata.Equals(ChargifyNET.Metadata)">
            <summary>
            Equality operator
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:ChargifyNET.Metadata.Equals(System.Object)">
            <summary>
            Equality operator
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="T:ChargifyNET.MetadataResult">
            <summary>
            An array of Metadata
            </summary>
        </member>
        <member name="M:ChargifyNET.MetadataResult.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:ChargifyNET.MetadataResult.#ctor(System.String)">
            <summary>
            Constructor (xml)
            </summary>
            <param name="metadataResultXml"></param>
        </member>
        <member name="M:ChargifyNET.MetadataResult.#ctor(System.Xml.XmlNode)">
            <summary>
            Constructor (xml)
            </summary>
            <param name="metadataResultNode"></param>
        </member>
        <member name="M:ChargifyNET.MetadataResult.#ctor(ChargifyNET.Json.JsonObject)">
            <summary>
            Constructor (json)
            </summary>
            <param name="metadataResultObject"></param>
        </member>
        <member name="P:ChargifyNET.MetadataResult.TotalCount">
            <summary>
            The total number of metadatum
            </summary>
        </member>
        <member name="P:ChargifyNET.MetadataResult.CurrentPage">
            <summary>
            The current page being returned
            </summary>
        </member>
        <member name="P:ChargifyNET.MetadataResult.TotalPages">
            <summary>
            The total number of pages (based on per-page and total count)
            </summary>
        </member>
        <member name="P:ChargifyNET.MetadataResult.PerPage">
            <summary>
            How many metadata are being returned per paged result
            </summary>
        </member>
        <member name="P:ChargifyNET.MetadataResult.Metadata">
            <summary>
            The list of metadata contained in this response
            </summary>
        </member>
        <member name="T:ChargifyNET.Migration">
            <summary>
            One-time (or one-off) migration for arbitrary amount
            </summary>
        </member>
        <member name="M:ChargifyNET.Migration.#ctor">
            <summary>
            Constructor.  Values set to default
            </summary>
        </member>
        <member name="M:ChargifyNET.Migration.#ctor(System.String)">
            <summary>
            Constructor
            </summary>
            <param name="migrationPreviewXml">XML containing migration info (in expected format)</param>
        </member>
        <member name="M:ChargifyNET.Migration.#ctor(System.Xml.XmlNode)">
            <summary>
            Constructor
            </summary>
            <param name="migrationNode">XML containing migration info (in expected format)</param>
        </member>
        <member name="M:ChargifyNET.Migration.#ctor(ChargifyNET.Json.JsonObject)">
            <summary>
            Constructor
            </summary>
            <param name="migrationObject">JsonObject containing migration info (in expected format)</param>
        </member>
        <member name="M:ChargifyNET.Migration.LoadFromJson(ChargifyNET.Json.JsonObject)">
            <summary>
            Load data from a JsonObject
            </summary>
            <param name="obj">The JsonObject with migration data</param>
        </member>
        <member name="M:ChargifyNET.Migration.LoadFromNode(System.Xml.XmlNode)">
            <summary>
            Load data from a migration node
            </summary>
            <param name="migrationNode">The migration node</param>
        </member>
        <member name="P:ChargifyNET.Migration.ProratedAdjustmentInCents">
            <summary>
            
            </summary>
        </member>
        <member name="P:ChargifyNET.Migration.ChargeInCents">
            <summary>
            Get the charge, in cents
            </summary>
        </member>
        <member name="P:ChargifyNET.Migration.PaymentDueInCents">
            <summary>
            Get the charge, in cents
            </summary>
        </member>
        <member name="P:ChargifyNET.Migration.CreditAppliedInCents">
            <summary>
            Credit applied in cents
            </summary>
        </member>
        <member name="M:ChargifyNET.Migration.CompareTo(ChargifyNET.IMigration)">
            <summary>
            Compare this migration to another
            </summary>
        </member>
        <member name="M:ChargifyNET.Migration.CompareTo(ChargifyNET.Migration)">
            <summary>
            Compare this migration to another
            </summary>
        </member>
        <member name="T:ChargifyNET.Note">
            <summary>
            https://docs.chargify.com/api-notes
            </summary>
        </member>
        <member name="M:ChargifyNET.Note.#ctor">
            <summary>
            Constructor.  Values set to default
            </summary>
        </member>
        <member name="M:ChargifyNET.Note.#ctor(System.String)">
            <summary>
            Constructor
            </summary>
            <param name="noteXml">XML containing note info (in expected format)</param>
        </member>
        <member name="M:ChargifyNET.Note.#ctor(System.Xml.XmlNode)">
            <summary>
            Constructor
            </summary>
            <param name="noteNode">XML containing note info (in expected format)</param>
        </member>
        <member name="M:ChargifyNET.Note.#ctor(ChargifyNET.Json.JsonObject)">
            <summary>
            Constructor
            </summary>
            <param name="noteObject">Json containing note info (in expected format)</param>
        </member>
        <member name="M:ChargifyNET.Note.LoadFromNode(System.Xml.XmlNode)">
            <summary>
            Load data from a note node
            </summary>
            <param name="noteNode">The note node</param>
        </member>
        <member name="P:ChargifyNET.Note.Body">
            <summary>
            The main text content of the note
            </summary>
        </member>
        <member name="P:ChargifyNET.Note.CreatedAt">
            <summary>
            Date and time the note was created
            </summary>
        </member>
        <member name="P:ChargifyNET.Note.ID">
            <summary>
            The note's unique id
            </summary>
        </member>
        <member name="P:ChargifyNET.Note.Sticky">
            <summary>
            Whether or not it is pinned to the top of the list of notes
            </summary>
        </member>
        <member name="P:ChargifyNET.Note.SubscriptionID">
            <summary>
            The id of the related subscription
            </summary>
        </member>
        <member name="P:ChargifyNET.Note.UpdatedAt">
            <summary>
            Last update timestamp
            </summary>
        </member>
        <member name="M:ChargifyNET.Note.CompareTo(ChargifyNET.INote)">
            <summary>
            Method for comparing two notes
            </summary>
            <param name="other">The note to compare with</param>
            <returns>The comparison value</returns>
        </member>
        <member name="M:ChargifyNET.Note.CompareTo(ChargifyNET.Note)">
            <summary>
            Method for comparing two notes
            </summary>
            <param name="other">The note to compare with</param>
            <returns>The comparison value</returns>
        </member>
        <member name="T:ChargifyNET.Payment">
            <summary>
            Chargify allows you to record payments that occur outside of the normal flow of payment processing.
            These payments are considered external payments.A common case to apply such a payment is when a customer pays by check or some other means for their subscription.
            </summary>
        </member>
        <member name="M:ChargifyNET.Payment.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:ChargifyNET.Payment.#ctor(System.String)">
            <summary>
            Constructor
            </summary>
            <param name="paymentXml">XML containing payment info (in expected format)</param>
        </member>
        <member name="M:ChargifyNET.Payment.#ctor(System.Xml.XmlNode)">
            <summary>
            Constructor
            </summary>
            <param name="paymentNode">XML containing payment info (in expected format)</param>
        </member>
        <member name="M:ChargifyNET.Payment.#ctor(ChargifyNET.Json.JsonObject)">
            <summary>
            Constructor
            </summary>
            <param name="paymentObject">JsonObject containing payment info (in expected format)</param>
        </member>
        <member name="M:ChargifyNET.Payment.LoadFromJson(ChargifyNET.Json.JsonObject)">
            <summary>
            Load data from a JsonObject
            </summary>
            <param name="obj">The JsonObject containing object data</param>
        </member>
        <member name="M:ChargifyNET.Payment.LoadFromNode(System.Xml.XmlNode)">
            <summary>
            Load data from a payment node
            </summary>
            <param name="paymentNode">The payment node</param>
        </member>
        <member name="P:ChargifyNET.Payment.AmountInCents">
            <summary>
            The amount of the payment
            </summary>
        </member>
        <member name="P:ChargifyNET.Payment.Amount">
            <summary>
            The amount of the payment
            </summary>
        </member>
        <member name="P:ChargifyNET.Payment.CreatedAt">
            <summary>
            The date the payment was created
            </summary>
        </member>
        <member name="P:ChargifyNET.Payment.EndingBalanceInCents">
            <summary>
            The ending balance of the subscription after the payment
            </summary>
        </member>
        <member name="P:ChargifyNET.Payment.ID">
            <summary>
            The ID of the payment
            </summary>
        </member>
        <member name="P:ChargifyNET.Payment.Kind">
            <summary>
            The kind of payment
            </summary>
        </member>
        <member name="P:ChargifyNET.Payment.Memo">
            <summary>
            The payment memo
            </summary>
        </member>
        <member name="P:ChargifyNET.Payment.PaymentID">
            <summary>
            The ID of the payment
            </summary>
        </member>
        <member name="P:ChargifyNET.Payment.ProductID">
            <summary>
            The ID of the product
            </summary>
        </member>
        <member name="P:ChargifyNET.Payment.StartingBalanceInCents">
            <summary>
            The balance of the subscription before the payment
            </summary>
        </member>
        <member name="P:ChargifyNET.Payment.SubscriptionID">
            <summary>
            The subscription ID
            </summary>
        </member>
        <member name="P:ChargifyNET.Payment.Success">
            <summary>
            Was the payment successful?
            </summary>
        </member>
        <member name="P:ChargifyNET.Payment.Type">
            <summary>
            The type of payment
            </summary>
        </member>
        <member name="P:ChargifyNET.Payment.TransactionType">
            <summary>
            The type of transaction
            </summary>
        </member>
        <member name="P:ChargifyNET.Payment.GatewayTransactionID">
            <summary>
            The related gateway transaction ID
            </summary>
        </member>
        <member name="M:ChargifyNET.Payment.CompareTo(ChargifyNET.IPayment)">
            <summary>
            Compare the payments
            </summary>
            <param name="other">The other payment</param>
            <returns></returns>
        </member>
        <member name="M:ChargifyNET.Payment.CompareTo(ChargifyNET.Payment)">
            <summary>
            Compare the payments
            </summary>
            <param name="other">The other payment</param>
            <returns></returns>
        </member>
        <member name="T:ChargifyNET.PaymentProfileAttributes">
            <summary>
            Class which can be used to "import" subscriptions via the API into Chargify
            Info here: http://support.chargify.com/faqs/api/api-subscription-and-stored-card-token-imports
            </summary>
        </member>
        <member name="M:ChargifyNET.PaymentProfileAttributes.#ctor">
            <summary>
            Class which can be used to "import" subscriptions via the API into Chargify
            </summary>
        </member>
        <member name="M:ChargifyNET.PaymentProfileAttributes.#ctor(System.String,System.String,ChargifyNET.VaultType,System.Int32,System.Int32,ChargifyNET.CardType,System.String)">
            <summary>
            Class which can be used to "import" subscriptions via the API into Chargify
            </summary>
            <param name="vaultToken">The "token" provided by your vault storage for an already stored payment profile</param>
            <param name="customerVaultToken">The "customerProfileId" for the owner of the "customerPaymentProfileId" provided as the VaultToken</param>
            <param name="currentVault">The vault that stores the payment profile with the provided VaultToken</param>
            <param name="expYear">The year of expiration</param>
            <param name="expMonth">The month of expiration</param>
            <param name="cardType">If you know the card type, you may supply it here so that Chargify may display it in the AdminUI</param>
            <param name="lastFourDigits">The last four digits of the credit card for use in masked numbers</param>
        </member>
        <member name="P:ChargifyNET.PaymentProfileAttributes.VaultToken">
            <summary>
            The "token" provided by your vault storage for an already stored payment profile
            </summary>
        </member>
        <member name="P:ChargifyNET.PaymentProfileAttributes.CustomerVaultToken">
            <summary>
            (Only for Authorize.NET CIM storage) The "customerProfileId" for the owner of the
            "customerPaymentProfileId" provided as the VaultToken
            </summary>
        </member>
        <member name="P:ChargifyNET.PaymentProfileAttributes.CurrentVault">
            <summary>
            The vault that stores the payment profile with the provided VaultToken
            </summary>
        </member>
        <member name="P:ChargifyNET.PaymentProfileAttributes.ExpirationYear">
            <summary>
            The year of expiration
            </summary>
        </member>
        <member name="P:ChargifyNET.PaymentProfileAttributes.ExpirationMonth">
            <summary>
            The month of expiration
            </summary>
        </member>
        <member name="P:ChargifyNET.PaymentProfileAttributes.CardType">
            <summary>
            (Optional) If you know the card type, you may supply it here so that we may display 
            the card type in the UI.
            </summary>
        </member>
        <member name="P:ChargifyNET.PaymentProfileAttributes.LastFour">
            <summary>
            (Optional) If you have the last 4 digits of the credit card number, you may supply
            them here so we may create a masked card number for display in the UI
            </summary>
        </member>
        <member name="P:ChargifyNET.PaymentProfileAttributes.BankName">
            <summary>
            The name of the bank where the customer's account resides
            </summary>
        </member>
        <member name="P:ChargifyNET.PaymentProfileAttributes.BankRoutingNumber">
            <summary>
            The routing number of the bank
            </summary>
        </member>
        <member name="P:ChargifyNET.PaymentProfileAttributes.BankAccountNumber">
            <summary>
            The customer's bank account number
            </summary>
        </member>
        <member name="P:ChargifyNET.PaymentProfileAttributes.BankAccountType">
            <summary>
            Either checking or savings
            </summary>
        </member>
        <member name="P:ChargifyNET.PaymentProfileAttributes.BankAccountHolderType">
            <summary>
            Either personal or business
            </summary>
        </member>
        <member name="M:ChargifyNET.PaymentProfileAttributes.CompareTo(ChargifyNET.IPaymentProfileAttributes)">
            <summary>
            Method for comparing one IPaymentProfileAttributes to another (by vault token)
            </summary>
            <param name="other">The other IPaymentProfileAttributes to compare with</param>
            <returns>The result of the comparison</returns>
        </member>
        <member name="M:ChargifyNET.PaymentProfileAttributes.CompareTo(ChargifyNET.PaymentProfileAttributes)">
            <summary>
            Method for comparing one PaymentProfileAttributes to another (by vault token)
            </summary>
            <param name="other">The other PaymentProfileAttributes to compare with</param>
            <returns>The result of the comparison</returns>
        </member>
        <member name="T:ChargifyNET.PaymentProfileBase">
            <summary>
            Base class for the payment profiles
            </summary>
        </member>
        <member name="M:ChargifyNET.PaymentProfileBase.#ctor">
            <summary>
            Protected Constructor
            </summary>
        </member>
        <member name="M:ChargifyNET.PaymentProfileBase.#ctor(System.String,System.String,System.String,System.Int32,System.Int32)">
            <summary>
            Protected Constructor
            </summary>
            <param name="firstName">The first name on the credit card</param>
            <param name="lastName">The last name on the credit card</param>
            <param name="fullNumber">The full credit card number</param>
            <param name="expirationYear">The expiration year</param>
            <param name="expirationMonth">The expiration month</param>
        </member>
        <member name="P:ChargifyNET.PaymentProfileBase.Id">
            <summary>
            The Chargify-assigned ID of the stored card.
            </summary>
        </member>
        <member name="P:ChargifyNET.PaymentProfileBase.FirstName">
            <summary>
            Get or set the first name on the card
            </summary>
        </member>
        <member name="M:ChargifyNET.PaymentProfileBase.ShouldSerializeFirstName">
            <summary>
            Ignore, used for determining if the value should be serialized
            </summary>
        </member>
        <member name="P:ChargifyNET.PaymentProfileBase.LastName">
            <summary>
            Get or set the last name on the card
            </summary>
        </member>
        <member name="M:ChargifyNET.PaymentProfileBase.ShouldSerializeLastName">
            <summary>
            Ignore, used for determining if the value should be serialized
            </summary>
        </member>
        <member name="P:ChargifyNET.PaymentProfileBase.FullNumber">
            <summary>
            Get or set the full credit card number
            </summary>
        </member>
        <member name="M:ChargifyNET.PaymentProfileBase.ShouldSerializeFullNumber">
            <summary>
            Ignore, used for determining if the value should be serialized
            </summary>
        </member>
        <member name="P:ChargifyNET.PaymentProfileBase.ExpirationMonth">
            <summary>
            Get or set the expiration month
            </summary>
        </member>
        <member name="M:ChargifyNET.PaymentProfileBase.ShouldSerializeExpirationMonth">
            <summary>
            Ignore, used for determining if the value should be serialized
            </summary>
        </member>
        <member name="P:ChargifyNET.PaymentProfileBase.ExpirationYear">
            <summary>
            Get or set the expiration year
            </summary>
        </member>
        <member name="M:ChargifyNET.PaymentProfileBase.ShouldSerializeExpirationYear">
            <summary>
            Ignore, used for determining if the value should be serialized
            </summary>
        </member>
        <member name="P:ChargifyNET.PaymentProfileBase.BillingAddress">
            <summary>
            Get or set the billing address of the credit card
            </summary>
        </member>
        <member name="M:ChargifyNET.PaymentProfileBase.ShouldSerializeBillingAddress">
            <summary>
            Ignore, used for determining if the value should be serialized
            </summary>
        </member>
        <member name="P:ChargifyNET.PaymentProfileBase.BillingAddress2">
            <summary>
            Get or set the billing address 2 of the credit card
            </summary>
        </member>
        <member name="M:ChargifyNET.PaymentProfileBase.ShouldSerializeBillingAddress2">
            <summary>
            Ignore, used for determining if the value should be serialized
            </summary>
        </member>
        <member name="P:ChargifyNET.PaymentProfileBase.BillingCity">
            <summary>
            Get or set the billing city of the credit card
            </summary>
        </member>
        <member name="M:ChargifyNET.PaymentProfileBase.ShouldSerializeBillingCity">
            <summary>
            Ignore, used for determining if the value should be serialized
            </summary>
        </member>
        <member name="P:ChargifyNET.PaymentProfileBase.BillingState">
            <summary>
            Get or set the billing state or province of the credit card
            </summary>
        </member>
        <member name="M:ChargifyNET.PaymentProfileBase.ShouldSerializeBillingState">
            <summary>
            Ignore, used for determining if the value should be serialized
            </summary>
        </member>
        <member name="P:ChargifyNET.PaymentProfileBase.BillingZip">
            <summary>
            Get or set the billing zip code or postal code of the credit card
            </summary>
        </member>
        <member name="M:ChargifyNET.PaymentProfileBase.ShouldSerializeBillingZip">
            <summary>
            Ignore, used for determining if the value should be serialized
            </summary>
        </member>
        <member name="P:ChargifyNET.PaymentProfileBase.BillingCountry">
            <summary>
            Get or set the billing country of the credit card
            </summary>
        </member>
        <member name="M:ChargifyNET.PaymentProfileBase.ShouldSerializeBillingCountry">
            <summary>
            Ignore, used for determining if the value should be serialized
            </summary>
        </member>
        <member name="T:ChargifyNET.PaymentProfileView">
            <summary>
            Class representing view information for a credit card
            </summary>
        </member>
        <member name="M:ChargifyNET.PaymentProfileView.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:ChargifyNET.PaymentProfileView.#ctor(System.String)">
            <summary>
            Constructor
            </summary>
            <param name="paymentProfileXml"></param>
        </member>
        <member name="M:ChargifyNET.PaymentProfileView.#ctor(System.Xml.XmlNode)">
            <summary>
            Constructor
            </summary>
            <param name="paymentProfileNode">XML containing payment_profile info (in expected format)</param>
        </member>
        <member name="M:ChargifyNET.PaymentProfileView.#ctor(ChargifyNET.Json.JsonObject)">
            <summary>
            Json Constructor
            </summary>
            <param name="paymentProfileObject">The json object containing payment profile information</param>
        </member>
        <member name="P:ChargifyNET.PaymentProfileView.PaymentType">
            <summary>
            Default is credit_card. May be bank_account or credit_card or paypal_account
            </summary>
        </member>
        <member name="P:ChargifyNET.PaymentProfileView.CustomerID">
            <summary>
            The ID to the customer associated with this payment profile
            </summary>
        </member>
        <member name="P:ChargifyNET.PaymentProfileView.CVV">
            <summary>
            The card verification value
            </summary>
        </member>
        <member name="P:ChargifyNET.PaymentProfileView.CardType">
            <summary>
            Get or set the type of the credit card (Visa, Mastercard. etc.)
            </summary>
        </member>
        <member name="P:ChargifyNET.PaymentProfileView.BankName">
            <summary>
            The name of the bank where the customer's account resides
            </summary>
        </member>
        <member name="P:ChargifyNET.PaymentProfileView.MaskedBankRoutingNumber">
            <summary>
            The masked routing number of the bank
            </summary>
        </member>
        <member name="P:ChargifyNET.PaymentProfileView.BankRoutingNumber">
            <summary>
            The routing number of the bank
            </summary>
        </member>
        <member name="P:ChargifyNET.PaymentProfileView.MaskedBankAccountNumber">
            <summary>
            The customer's masked bank account number
            </summary>
        </member>
        <member name="P:ChargifyNET.PaymentProfileView.BankAccountNumber">
            <summary>
            The customer's bank account number
            </summary>
        </member>
        <member name="P:ChargifyNET.PaymentProfileView.BankAccountType">
            <summary>
            Either checking or savings
            </summary>
        </member>
        <member name="P:ChargifyNET.PaymentProfileView.BankAccountHolderType">
            <summary>
            Either personal or business
            </summary>
        </member>
        <member name="P:ChargifyNET.PaymentProfileView.MaskedCardNumber">
            <summary>
            The customer's masked credit card number
            </summary>
        </member>
        <member name="P:ChargifyNET.PaymentProfileView.PaymentMethodNonce">
            <summary>
            The nonce value
            </summary>
        </member>
        <member name="P:ChargifyNET.PaymentProfileView.PayPalEmail">
            <summary>
            The paypal account attributed to this profile
            </summary>
        </member>
        <member name="M:ChargifyNET.PaymentProfileView.ToString">
            <summary>
            Represent this object as a string
            </summary>
            <returns>A string representation of the object</returns>
        </member>
        <member name="T:ChargifyNET.Product">
            <summary>
            Class representing a product.  Subscriptions will subscribe to a product
            </summary>
        </member>
        <member name="M:ChargifyNET.Product.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:ChargifyNET.Product.#ctor(System.String)">
            <summary>
            Constructor
            </summary>
            <param name="productXml">An XML string containing a product node</param>
        </member>
        <member name="M:ChargifyNET.Product.#ctor(System.Xml.XmlNode)">
            <summary>
            Constructor
            </summary>
            <param name="productNode">An aml node with product information</param>
        </member>
        <member name="M:ChargifyNET.Product.#ctor(ChargifyNET.Json.JsonObject)">
            <summary>
            Constructor
            </summary>
            <param name="productObject">JsonObject containing product info (in expected format)</param>
        </member>
        <member name="M:ChargifyNET.Product.LoadFromJson(ChargifyNET.Json.JsonObject)">
            <summary>
            Load data from a JsonObject
            </summary>
            <param name="obj">The JsonObject containing product data</param>
        </member>
        <member name="P:ChargifyNET.Product.PriceInCents">
            <summary>
            Get the price (in cents)
            </summary>
        </member>
        <member name="P:ChargifyNET.Product.Price">
            <summary>
            Get the price, in dollars and cents.
            </summary>
        </member>
        <member name="P:ChargifyNET.Product.Name">
            <summary>
            Get the name of this product
            </summary>
        </member>
        <member name="P:ChargifyNET.Product.ID">
            <summary>
            The ID of the product
            </summary>
        </member>
        <member name="P:ChargifyNET.Product.Handle">
            <summary>
            Get the handle to this product
            </summary>
        </member>
        <member name="P:ChargifyNET.Product.Description">
            <summary>
            Get the description of the product
            </summary>
        </member>
        <member name="P:ChargifyNET.Product.ProductFamily">
            <summary>
            Get the product family for this product
            </summary>
        </member>
        <member name="P:ChargifyNET.Product.AccountingCode">
            <summary>
            Get the accounting code for this product
            </summary>
        </member>
        <member name="P:ChargifyNET.Product.IntervalUnit">
            <summary>
            Get the interval unit (day, month) for this product
            </summary>
        </member>
        <member name="P:ChargifyNET.Product.Interval">
            <summary>
            Get the renewal interval for this product
            </summary>
        </member>
        <member name="P:ChargifyNET.Product.InitialChargeInCents">
            <summary>
            Get the up front charge you have specified, in cents. 
            </summary>
        </member>
        <member name="P:ChargifyNET.Product.InitialCharge">
            <summary>
            Get the up front charge for this product, in dollars and cents.
            </summary>
        </member>
        <member name="P:ChargifyNET.Product.TrialPriceInCents">
            <summary>
            Get the price of the trial period for a subscription to this product, in cents.
            </summary>
        </member>
        <member name="P:ChargifyNET.Product.TrialPrice">
            <summary>
            Get the price of the trial period for a subscription to this product, in dollars and cents.
            </summary>
        </member>
        <member name="P:ChargifyNET.Product.TrialInterval">
            <summary>
            A numerical interval for the length of the trial period of a subscription to this product.
            </summary>
        </member>
        <member name="P:ChargifyNET.Product.TrialIntervalUnit">
            <summary>
            A string representing the trial interval unit for this product, either "month" or "day"
            </summary>
        </member>
        <member name="P:ChargifyNET.Product.ExpirationInterval">
            <summary>
            A numerical interval for the length a subscription to this product will run before it expires.
            </summary>
        </member>
        <member name="P:ChargifyNET.Product.ExpirationIntervalUnit">
            <summary>
            A string representing the expiration interval for this product, either "month" or "day"
            </summary>
        </member>
        <member name="P:ChargifyNET.Product.ReturnURL">
            <summary>
            The URL the buyer is returned to after successful purchase.
            </summary>
        </member>
        <member name="P:ChargifyNET.Product.UpdateReturnUrl">
            <summary>
            The URL the buyer is returned to after successful purchase.
            </summary>
        </member>
        <member name="P:ChargifyNET.Product.ReturnParams">
            <summary>
            The parameter string chargify will use in constructing the return URL.
            </summary>
        </member>
        <member name="P:ChargifyNET.Product.RequireCreditCard">
            <summary>
            This product requires a credit card
            </summary>
        </member>
        <member name="P:ChargifyNET.Product.RequestCreditCard">
            <summary>
            This product requests a credit card
            </summary>
        </member>
        <member name="P:ChargifyNET.Product.CreatedAt">
            <summary>
            Timestamp indicating when this product was created.
            </summary>
        </member>
        <member name="P:ChargifyNET.Product.UpdatedAt">
            <summary>
            Timestamp indicating when this product was updated.
            </summary>
        </member>
        <member name="P:ChargifyNET.Product.ArchivedAt">
            <summary>
            Timestamp indicating when this product was updated.
            </summary>
        </member>
        <member name="P:ChargifyNET.Product.PublicSignupPages">
            <summary>
            List of public signup page URLs and the associated ID
            </summary>
        </member>
        <member name="P:ChargifyNET.Product.ProductVersion">
            <summary>
            The product version number
            </summary>
        </member>
        <member name="P:ChargifyNET.Product.Taxable">
            <summary>
            Is this product taxable?
            </summary>
        </member>
        <member name="P:ChargifyNET.Product.UpdateReturnParams">
            <summary>
            Paramters for update
            </summary>
        </member>
        <member name="P:ChargifyNET.Product.InitialChargeAfterTrial">
            <summary>
            Will the setup/initial charge be processed after the trial?
            </summary>
        </member>
        <member name="M:ChargifyNET.Product.op_Equality(ChargifyNET.Product,ChargifyNET.Product)">
            <summary>
            Equals operator for two products
            </summary>
            <returns>True if the products are equal</returns>
        </member>
        <member name="M:ChargifyNET.Product.op_Inequality(ChargifyNET.Product,ChargifyNET.Product)">
            <summary>
            Unequal operator for two products
            </summary>
            <returns>True if the products are unequal</returns>
        </member>
        <member name="M:ChargifyNET.Product.op_Equality(ChargifyNET.Product,ChargifyNET.IProduct)">
            <summary>
            Equals operator for two products
            </summary>
            <returns>True if the products are equal</returns>
        </member>
        <member name="M:ChargifyNET.Product.op_Inequality(ChargifyNET.Product,ChargifyNET.IProduct)">
            <summary>
            Unequals operator for two products
            </summary>
            <returns>True if the products are unequal</returns>
        </member>
        <member name="M:ChargifyNET.Product.op_Equality(ChargifyNET.IProduct,ChargifyNET.Product)">
            <summary>
            Equals operator for two products
            </summary>
            <returns>True if the products are equal</returns>
        </member>
        <member name="M:ChargifyNET.Product.op_Inequality(ChargifyNET.IProduct,ChargifyNET.Product)">
            <summary>
            Unequal operator for two products
            </summary>
            <returns>True if the products are unequal</returns>
        </member>
        <member name="M:ChargifyNET.Product.GetHashCode">
            <summary>
            Get Hash code
            </summary>
        </member>
        <member name="M:ChargifyNET.Product.Equals(System.Object)">
            <summary>
            Equals
            </summary>
            <param name="obj"></param>
        </member>
        <member name="M:ChargifyNET.Product.ToString">
            <summary>
            Convert object to a string
            </summary>
            <returns>The string representation of the object</returns>
        </member>
        <member name="M:ChargifyNET.Product.CompareTo(ChargifyNET.IProductFamily)">
            <summary>
            Compare this instance to another (by FullName)
            </summary>
            <param name="other">The other instance</param>
            <returns>The result of the comparison</returns>
        </member>
        <member name="M:ChargifyNET.Product.CompareTo(ChargifyNET.Product)">
            <summary>
            Compare this instance to another (by FullName)
            </summary>
            <param name="other">The other instance</param>
            <returns>The result of the comparison</returns>
        </member>
        <member name="T:ChargifyNET.ProductFamily">
            <summary>
            Class representing a product family
            </summary>
        </member>
        <member name="M:ChargifyNET.ProductFamily.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:ChargifyNET.ProductFamily.#ctor(System.String,System.String,System.String,System.String)">
            <summary>
            Constructor, values specified.
            </summary>
            <param name="name">The name of the product family</param>
            <param name="description">The description of the product family</param>
            <param name="accountingCode">The accounting number of the product family</param>
            <param name="handle">The handle of the product family</param>
        </member>
        <member name="M:ChargifyNET.ProductFamily.#ctor(System.String)">
            <summary>
            Constructor
            </summary>
            <param name="productFamilyXml">The xml data containing information about the product family (to be parsed)</param>
        </member>
        <member name="M:ChargifyNET.ProductFamily.#ctor(System.Xml.XmlNode)">
            <summary>
            Constructor
            </summary>
            <param name="productFamilyNode">An xml node containing product family information</param>
        </member>
        <member name="M:ChargifyNET.ProductFamily.#ctor(ChargifyNET.Json.JsonObject)">
            <summary>
            Constructor
            </summary>
            <param name="productFamilyObject">JsonObject containing product family info (in expected format)</param>
        </member>
        <member name="M:ChargifyNET.ProductFamily.LoadJsonData(ChargifyNET.Json.JsonObject)">
            <summary>
            Load product family data from a JsonObject
            </summary>
            <param name="obj">The JsonObject containing product family data</param>
        </member>
        <member name="P:ChargifyNET.ProductFamily.ID">
            <summary>
            Get the id of the product family
            </summary>
        </member>
        <member name="M:ChargifyNET.ProductFamily.op_Equality(ChargifyNET.ProductFamily,ChargifyNET.ProductFamily)">
            <summary>
            Equals operator for two product families
            </summary>
            <returns>True if the products are equal</returns>
        </member>
        <member name="M:ChargifyNET.ProductFamily.op_Equality(ChargifyNET.ProductFamily,ChargifyNET.IProductFamily)">
            <summary>
            Equals operator for two product families
            </summary>
            <returns>True if the products are equal</returns>
        </member>
        <member name="M:ChargifyNET.ProductFamily.op_Equality(ChargifyNET.IProductFamily,ChargifyNET.ProductFamily)">
            <summary>
            Equals operator for two product families
            </summary>
            <returns>True if the products are equal</returns>
        </member>
        <member name="M:ChargifyNET.ProductFamily.op_Inequality(ChargifyNET.ProductFamily,ChargifyNET.ProductFamily)">
            <summary>
            Not Equals operator for two product families
            </summary>
            <returns>True if the products are not equal</returns>
        </member>
        <member name="M:ChargifyNET.ProductFamily.op_Inequality(ChargifyNET.ProductFamily,ChargifyNET.IProductFamily)">
            <summary>
            Not Equals operator for two product families
            </summary>
            <returns>True if the products are not equal</returns>
        </member>
        <member name="M:ChargifyNET.ProductFamily.op_Inequality(ChargifyNET.IProductFamily,ChargifyNET.ProductFamily)">
            <summary>
            Not Equals operator for two product families
            </summary>
            <returns>True if the products are not equal</returns>
        </member>
        <member name="M:ChargifyNET.ProductFamily.GetHashCode">
            <summary>
            Get Hash code
            </summary>
        </member>
        <member name="M:ChargifyNET.ProductFamily.Equals(System.Object)">
            <summary>
            Equals
            </summary>
            <param name="obj"></param>
        </member>
        <member name="M:ChargifyNET.ProductFamily.ToString">
            <summary>
            Convert object to a string
            </summary>
            <returns>The string representation of the object</returns>
        </member>
        <member name="M:ChargifyNET.ProductFamily.CompareTo(ChargifyNET.IProductFamily)">
            <summary>
            Compare this instance to another (by Handle)
            </summary>
            <param name="other">The other instance</param>
            <returns>The result of the comparison</returns>
        </member>
        <member name="M:ChargifyNET.ProductFamily.CompareTo(ChargifyNET.ProductFamily)">
            <summary>
            Compare this instance to another (by Handle)
            </summary>
            <param name="other">The other instance</param>
            <returns>The result of the comparison</returns>
        </member>
        <member name="T:ChargifyNET.ProductFamilyAttributes">
            <summary>
            Class representing basic attributes for a customer
            </summary>
        </member>
        <member name="M:ChargifyNET.ProductFamilyAttributes.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:ChargifyNET.ProductFamilyAttributes.#ctor(System.String,System.String,System.String,System.String)">
            <summary>
            Constructor, all values specified.
            </summary>
            <param name="name">The name of the product family</param>
            <param name="description">The description of the product family</param>
            <param name="accountingCode">The accounting code of the product family</param>
            <param name="handle">The handle of the product family</param>
        </member>
        <member name="M:ChargifyNET.ProductFamilyAttributes.#ctor(System.String)">
            <summary>
            Constructor
            </summary>
            <param name="productFamilyAttributesXml">The XML which corresponds to this classes members, to be parsed</param>
        </member>
        <member name="M:ChargifyNET.ProductFamilyAttributes.#ctor(System.Xml.XmlNode)">
            <summary>
            Constructor
            </summary>
            <param name="productFamilyAttributesNode">The product family XML node</param>
        </member>
        <member name="M:ChargifyNET.ProductFamilyAttributes.#ctor(ChargifyNET.Json.JsonObject)">
            <summary>
            Constructor
            </summary>
            <param name="productFamilyAttributesObject">The product family JSON object</param>
        </member>
        <member name="M:ChargifyNET.ProductFamilyAttributes.LoadFromJson(ChargifyNET.Json.JsonObject)">
            <summary>
            Load data from a JsonObject
            </summary>
            <param name="obj">The JsonObject containing product family attribute data</param>
        </member>
        <member name="M:ChargifyNET.ProductFamilyAttributes.LoadFromNode(System.Xml.XmlNode)">
            <summary>
            Load data from a product family  node
            </summary>
            <param name="customerNode">The product family node</param>
        </member>
        <member name="M:ChargifyNET.ProductFamilyAttributes.CompareTo(ChargifyNET.IProductFamilyAttributes)">
            <summary>
            Compare this instance to another (by Handle)
            </summary>
            <param name="other">The other instance to compare against</param>
            <returns>The result of the comparison</returns>
        </member>
        <member name="M:ChargifyNET.ProductFamilyAttributes.CompareTo(ChargifyNET.ProductFamilyAttributes)">
            <summary>
            Compare this instance to another (by Handle)
            </summary>
            <param name="other">The other instance to compare against</param>
            <returns>The result of the comparison</returns>
        </member>
        <member name="P:ChargifyNET.ProductFamilyAttributes.AccountingCode">
            <summary>
            The accounting code of the product family
            </summary>
        </member>
        <member name="P:ChargifyNET.ProductFamilyAttributes.Description">
            <summary>
            The descrition of the product family
            </summary>
        </member>
        <member name="P:ChargifyNET.ProductFamilyAttributes.Handle">
            <summary>
            The handle of the product family
            </summary>
        </member>
        <member name="P:ChargifyNET.ProductFamilyAttributes.Name">
            <summary>
            The name of the product family
            </summary>
        </member>
        <member name="T:ChargifyNET.PublicSignupPage">
            <summary>
            Public Pages (formerly known as Hosted Pages) are highly customizable white label pages
            that you can use as the public-facing side of your subscription business.
            </summary>
        </member>
        <member name="M:ChargifyNET.PublicSignupPage.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:ChargifyNET.PublicSignupPage.#ctor(System.String)">
            <summary>
            Constructor
            </summary>
            <param name="publicSignupPageXml">An XML string containing a node</param>
        </member>
        <member name="M:ChargifyNET.PublicSignupPage.#ctor(System.Xml.XmlNode)">
            <summary>
            Constructor
            </summary>
            <param name="publicSignupPageNode">An xml node with data</param>
        </member>
        <member name="M:ChargifyNET.PublicSignupPage.#ctor(ChargifyNET.Json.JsonObject)">
            <summary>
            Constructor
            </summary>
            <param name="publicSignupPageJson">JsonObject containing json info (in expected format)</param>
        </member>
        <member name="P:ChargifyNET.PublicSignupPage.ID">
            <summary>
            The ID of the public signup page
            </summary>
        </member>
        <member name="P:ChargifyNET.PublicSignupPage.URL">
            <summary>
            The URL to the public signup page
            </summary>
        </member>
        <member name="P:ChargifyNET.PublicSignupPage.ReturnURL">
            <summary>
            The url to which a customer will be returned after a successful signup
            </summary>
        </member>
        <member name="P:ChargifyNET.PublicSignupPage.ReturnParams">
            <summary>
            The params to be appended to the return_url
            </summary>
        </member>
        <member name="M:ChargifyNET.PublicSignupPage.CompareTo(ChargifyNET.IPublicSignupPage)">
            <summary>
            Compare
            </summary>
            <param name="other">The object to compare to</param>
            <returns></returns>
        </member>
        <member name="M:ChargifyNET.PublicSignupPage.CompareTo(ChargifyNET.PublicSignupPage)">
            <summary>
            Compare
            </summary>
            <param name="other">The object to compare to</param>
            <returns></returns>
        </member>
        <member name="T:ChargifyNET.ReferralCode">
            <summary>
            Object representing coupon in Chargify
            </summary>
        </member>
        <member name="M:ChargifyNET.ReferralCode.#ctor">
            <summary>
            Constructor.  Values set to default
            </summary>
        </member>
        <member name="M:ChargifyNET.ReferralCode.#ctor(System.String)">
            <summary>
            Constructor
            </summary>
            <param name="ReferralCodeXML">XML containing referral code info (in expected format)</param>
        </member>
        <member name="M:ChargifyNET.ReferralCode.#ctor(System.Xml.XmlNode)">
            <summary>
            Constructor
            </summary>
            <param name="couponNode">XML containing coupon info (in expected format)</param>
        </member>
        <member name="M:ChargifyNET.ReferralCode.#ctor(ChargifyNET.Json.JsonObject)">
            <summary>
            Constructor
            </summary>
            <param name="couponObject">JsonObject containing coupon info (in expected format)</param>
        </member>
        <member name="M:ChargifyNET.ReferralCode.LoadFromJSON(ChargifyNET.Json.JsonObject)">
            <summary>
            Load data from a JsonObject
            </summary>
            <param name="obj">The JsonObject containing referral code data</param>
        </member>
        <member name="M:ChargifyNET.ReferralCode.LoadFromNode(System.Xml.XmlNode)">
            <summary>
            Load data from a coupon node
            </summary>
            <param name="couponNode">The coupon node</param>
        </member>
        <member name="P:ChargifyNET.ReferralCode.ID">
            <summary>
            The referral id
            </summary>
        </member>
        <member name="P:ChargifyNET.ReferralCode.SiteID">
            <summary>
            The site id
            </summary>
        </member>
        <member name="P:ChargifyNET.ReferralCode.SubscriptionID">
            <summary>
            The subscription id
            </summary>
        </member>
        <member name="P:ChargifyNET.ReferralCode.Code">
            <summary>
            The string code that represents this coupon
            </summary>
        </member>
        <member name="M:ChargifyNET.ReferralCode.CompareTo(ChargifyNET.IReferralCode)">
            <summary>
            Method for comparing one coupon to another
            </summary>
        </member>
        <member name="M:ChargifyNET.ReferralCode.CompareTo(ChargifyNET.ReferralCode)">
            <summary>
            Method for comparing one coupon to another
            </summary>
        </member>
        <member name="T:ChargifyNET.Refund">
            <summary>
            A representation of a refund with details about it
            Info here: http://support.chargify.com/faqs/api/api-refunds
            </summary>
        </member>
        <member name="M:ChargifyNET.Refund.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:ChargifyNET.Refund.#ctor(System.String)">
            <summary>
            Constructor
            </summary>
            <param name="refundXml">An XML string containing a refund node</param>
        </member>
        <member name="M:ChargifyNET.Refund.#ctor(System.Xml.XmlNode)">
            <summary>
            Constructor
            </summary>
            <param name="refundNode">An xml node with refund information</param>
        </member>
        <member name="M:ChargifyNET.Refund.#ctor(ChargifyNET.Json.JsonObject)">
            <summary>
            Constructor
            </summary>
            <param name="refundObject">An JsonObject with refund information</param>
        </member>
        <member name="P:ChargifyNET.Refund.PaymentID">
            <summary>
            (Required) The ID of the Payment that the credit will be applied to
            </summary>
        </member>
        <member name="P:ChargifyNET.Refund.Success">
            <summary>
            Was the refund successful?
            </summary>
        </member>
        <member name="P:ChargifyNET.Refund.AmountInCents">
            <summary>
            The amount of the refund and captured payment, represented in cents
            </summary>
        </member>
        <member name="P:ChargifyNET.Refund.Amount">
            <summary>
            The amount of the refund and captured payment, represented in dollars and cents
            </summary>
        </member>
        <member name="P:ChargifyNET.Refund.Memo">
            <summary>
            The memo created for the refund
            </summary>
        </member>
        <member name="M:ChargifyNET.Refund.CompareTo(ChargifyNET.IRefund)">
            <summary>
            Method for comparing this IRefund object to another (using AmountInCents)
            </summary>
            <param name="other">The other IRefund object to compare against.</param>
            <returns>The result of the comparison</returns>
        </member>
        <member name="M:ChargifyNET.Refund.CompareTo(ChargifyNET.Refund)">
            <summary>
            Method for comparing this Refund object to another (using AmountInCents)
            </summary>
            <param name="other">The other Refund object to compare against.</param>
            <returns>The result of the comparison</returns>
        </member>
        <member name="T:ChargifyNET.RenewalDetails">
            <summary>
            Information that is returned when performing a renewal preview
            </summary>
        </member>
        <member name="M:ChargifyNET.RenewalDetails.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:ChargifyNET.RenewalDetails.#ctor(System.String)">
            <summary>
            Constructor
            </summary>
            <param name="renewalXml"></param>
        </member>
        <member name="M:ChargifyNET.RenewalDetails.#ctor(System.Xml.XmlNode)">
            <summary>
            Xml parsing constructor
            </summary>
            <param name="renewalNode"></param>
        </member>
        <member name="M:ChargifyNET.RenewalDetails.#ctor(ChargifyNET.Json.JsonObject)">
            <summary>
            Json parsing constructor
            </summary>
            <param name="obj"></param>
        </member>
        <member name="P:ChargifyNET.RenewalDetails.ExistingBalance">
            <summary>
            A decimal representing the amount of the subscription’s current balance
            </summary>
        </member>
        <member name="P:ChargifyNET.RenewalDetails.ExistingBalanceInCents">
            <summary>
            An integer representing the amount of the subscription’s current balance
            </summary>
        </member>
        <member name="P:ChargifyNET.RenewalDetails.LineItems">
            <summary>
            An array of <see cref="T:ChargifyNET.RenewalLineItem"/> representing the individual transactions that will be created at the next renewal
            </summary>
        </member>
        <member name="P:ChargifyNET.RenewalDetails.NextAssessmentAt">
            <summary>
            The timestamp for the subscription’s next renewal
            </summary>
        </member>
        <member name="P:ChargifyNET.RenewalDetails.Subtotal">
            <summary>
            A decimal representing the amount of the total pre-tax, pre-discount charges that will be assessed at the next renewal
            </summary>
        </member>
        <member name="P:ChargifyNET.RenewalDetails.SubtotalInCents">
            <summary>
            An integer representing the amount of the total pre-tax, pre-discount charges that will be assessed at the next renewal
            </summary>
        </member>
        <member name="P:ChargifyNET.RenewalDetails.Total">
            <summary>
            A decimal representing the total amount owed, less any discounts, that will be assessed at the next renewal
            </summary>
        </member>
        <member name="P:ChargifyNET.RenewalDetails.TotalAmountDue">
            <summary>
            A decimal representing the existing_balance_in_cents plus the total_in_cents
            </summary>
        </member>
        <member name="P:ChargifyNET.RenewalDetails.TotalAmountDueInCents">
            <summary>
            An integer representing the existing_balance_in_cents plus the total_in_cents
            </summary>
        </member>
        <member name="P:ChargifyNET.RenewalDetails.TotalDiscount">
            <summary>
            A decimal representing the amount of the coupon discounts that will be applied to the next renewal
            </summary>
        </member>
        <member name="P:ChargifyNET.RenewalDetails.TotalDiscountInCents">
            <summary>
            An integer representing the amount of the coupon discounts that will be applied to the next renewal
            </summary>
        </member>
        <member name="P:ChargifyNET.RenewalDetails.TotalInCents">
            <summary>
            An integer representing the total amount owed, less any discounts, that will be assessed at the next renewal
            </summary>
        </member>
        <member name="P:ChargifyNET.RenewalDetails.TotalTax">
            <summary>
            A decimal representing the total tax charges that will be assessed at the next renewal
            </summary>
        </member>
        <member name="P:ChargifyNET.RenewalDetails.TotalTaxInCents">
            <summary>
            An integer representing the total tax charges that will be assessed at the next renewal
            </summary>
        </member>
        <member name="P:ChargifyNET.RenewalDetails.UncalculatedTaxes">
            <summary>
            A boolean indicating whether or not additional taxes will be calculated at the time of renewal. 
            This will be true if you are using Avalara and the address of the subscription is 
            in one of your defined taxable regions.
            </summary>
        </member>
        <member name="M:ChargifyNET.RenewalDetails.CompareTo(ChargifyNET.RenewalDetails)">
            <summary>
            Compare to
            </summary>
            <param name="other">The other details to compare</param>
            <returns></returns>
        </member>
        <member name="T:ChargifyNET.SiteCleanupScope">
            <summary>
            The type of cleanup being performed
            </summary>
        </member>
        <member name="F:ChargifyNET.SiteCleanupScope.Customers">
            <summary>
            Only customer related information will be purged
            </summary>
        </member>
        <member name="F:ChargifyNET.SiteCleanupScope.All">
            <summary>
            All customers, subscriptions, products, families, coupons, components, etc. Everything.
            </summary>
        </member>
        <member name="T:ChargifyNET.SiteStatistics">
            <summary>
            The statistics object for a site
            </summary>
        </member>
        <member name="M:ChargifyNET.SiteStatistics.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:ChargifyNET.SiteStatistics.#ctor(ChargifyNET.Json.JsonObject)">
            <summary>
            Constructor
            </summary>
            <param name="statsObject">An JsonObject with stats information</param>
        </member>
        <member name="P:ChargifyNET.SiteStatistics.SellerName">
            <summary>
            The name of the seller who "owns" the site.
            </summary>
        </member>
        <member name="P:ChargifyNET.SiteStatistics.SiteName">
            <summary>
            The name of the site
            </summary>
        </member>
        <member name="P:ChargifyNET.SiteStatistics.TotalSubscriptions">
            <summary>
            The total number of active subscriptions
            </summary>
        </member>
        <member name="P:ChargifyNET.SiteStatistics.SubscriptionsToday">
            <summary>
            The total number of signups today
            </summary>
        </member>
        <member name="P:ChargifyNET.SiteStatistics.TotalRevenue">
            <summary>
            Total site revenue
            </summary>
        </member>
        <member name="P:ChargifyNET.SiteStatistics.RevenueToday">
            <summary>
            Today's revenue
            </summary>
        </member>
        <member name="P:ChargifyNET.SiteStatistics.RevenueThisMonth">
            <summary>
            The site revenue for this month
            </summary>
        </member>
        <member name="P:ChargifyNET.SiteStatistics.RevenueThisYear">
            <summary>
            The site revenue for this year
            </summary>
        </member>
        <member name="T:ChargifyNET.Statement">
            <summary>
            The statement object
            http://docs.chargify.com/statements
            </summary>
        </member>
        <member name="M:ChargifyNET.Statement.#ctor">
            <summary>
            Constructor.  Values set to default
            </summary>
        </member>
        <member name="M:ChargifyNET.Statement.#ctor(System.String)">
            <summary>
            Constructor
            </summary>
            <param name="statementXml">XML containing statement info (in expected format)</param>
        </member>
        <member name="M:ChargifyNET.Statement.#ctor(System.Xml.XmlNode)">
            <summary>
            Constructor
            </summary>
            <param name="statementNode">XML containing statement info (in expected format)</param>
        </member>
        <member name="M:ChargifyNET.Statement.#ctor(ChargifyNET.Json.JsonObject)">
            <summary>
            Constructor
            </summary>
            <param name="statementObject">Json containing statement info (in expected format)</param>
        </member>
        <member name="M:ChargifyNET.Statement.LoadFromJson(ChargifyNET.Json.JsonObject)">
            <summary>
            Loads the values for this object from the Json
            </summary>
            <param name="obj">The JsonObject to retrieve the values from</param>
        </member>
        <member name="M:ChargifyNET.Statement.LoadFromNode(System.Xml.XmlNode)">
            <summary>
            Load data from a statement node
            </summary>
            <param name="statementNode">The statement node</param>
        </member>
        <member name="P:ChargifyNET.Statement.ID">
            <summary>
            The unique identifier for this statement within Chargify
            </summary>
        </member>
        <member name="P:ChargifyNET.Statement.SubscriptionID">
            <summary>
            The unique identifier of the subscription associated with this statement
            </summary>
        </member>
        <member name="P:ChargifyNET.Statement.OpenedAt">
            <summary>
            The date that the statement was opened
            </summary>
        </member>
        <member name="P:ChargifyNET.Statement.ClosedAt">
            <summary>
            The date that the statement was closed
            </summary>
        </member>
        <member name="P:ChargifyNET.Statement.SettledAt">
            <summary>
            The date that the statement was settled
            </summary>
        </member>
        <member name="P:ChargifyNET.Statement.TextView">
            <summary>
            A text representation of the statement
            </summary>
        </member>
        <member name="P:ChargifyNET.Statement.BasicHtmlView">
            <summary>
            A simple HTML representation of the statement
            </summary>
        </member>
        <member name="P:ChargifyNET.Statement.HtmlView">
            <summary>
            A more rebust HTML representation of the statment
            </summary>
        </member>
        <member name="P:ChargifyNET.Statement.FuturePayments">
            <summary>
            A collection of payments from future sttments that pay charges on this statement
            </summary>
        </member>
        <member name="P:ChargifyNET.Statement.StartingBalanceInCents">
            <summary>
            The subscription's balance at the time the statement was opened (in cents)
            </summary>
        </member>
        <member name="P:ChargifyNET.Statement.StartingBalance">
            <summary>
            The subscription's balance at the time the statement was opened (in dollars and cents)
            </summary>
        </member>
        <member name="P:ChargifyNET.Statement.EndingBalanceInCents">
            <summary>
            The subscription's balance at the time the statement was closed (in cents)
            </summary>
        </member>
        <member name="P:ChargifyNET.Statement.EndingBalance">
            <summary>
            The subscription's balance at the time the statement was closed (in dollars and cents)
            </summary>
        </member>
        <member name="P:ChargifyNET.Statement.CustomerFirstName">
            <summary>
            The customer's first name
            </summary>
        </member>
        <member name="P:ChargifyNET.Statement.CustomerLastName">
            <summary>
            The customer's last name
            </summary>
        </member>
        <member name="P:ChargifyNET.Statement.CustomerOrganization">
            <summary>
            The customer's organization
            </summary>
        </member>
        <member name="P:ChargifyNET.Statement.CustomerShippingAddress">
            <summary>
            The customer's shipping address, line 1
            </summary>
        </member>
        <member name="P:ChargifyNET.Statement.CustomerShippingAddress2">
            <summary>
            The customer's shipping address, line 2
            </summary>
        </member>
        <member name="P:ChargifyNET.Statement.CustomerShippingCity">
            <summary>
            The customer's shipping city
            </summary>
        </member>
        <member name="P:ChargifyNET.Statement.CustomerShippingState">
            <summary>
            The customer's shipping state or province
            </summary>
        </member>
        <member name="P:ChargifyNET.Statement.CustomerShippingCountry">
            <summary>
            The customer's shipping country
            </summary>
        </member>
        <member name="P:ChargifyNET.Statement.CustomerShippingZip">
            <summary>
            The customer's shipping postal code or zip
            </summary>
        </member>
        <member name="P:ChargifyNET.Statement.CustomerBillingAddress">
            <summary>
            The customer's billing address, line 1
            </summary>
        </member>
        <member name="P:ChargifyNET.Statement.CustomerBillingAddress2">
            <summary>
            The customer's billing address, line 2
            </summary>
        </member>
        <member name="P:ChargifyNET.Statement.CustomerBillingCity">
            <summary>
            The customer's billing city
            </summary>
        </member>
        <member name="P:ChargifyNET.Statement.CustomerBillingState">
            <summary>
            The customer's billing state or province
            </summary>
        </member>
        <member name="P:ChargifyNET.Statement.CustomerBillingCountry">
            <summary>
            The customer's billing country
            </summary>
        </member>
        <member name="P:ChargifyNET.Statement.CustomerBillingZip">
            <summary>
            The customer's billing postal code or zip
            </summary>
        </member>
        <member name="P:ChargifyNET.Statement.Transactions">
            <summary>
            A collection of the transactions associated with the statement
            </summary>
        </member>
        <member name="P:ChargifyNET.Statement.Events">
            <summary>
            A collection of the events associated with the statement
            </summary>
        </member>
        <member name="P:ChargifyNET.Statement.CreatedAt">
            <summary>
            The creation date for this statement
            </summary>
        </member>
        <member name="P:ChargifyNET.Statement.UpdatedAt">
            <summary>
            The date of last update for this statement
            </summary>
        </member>
        <member name="M:ChargifyNET.Statement.CompareTo(ChargifyNET.IStatement)">
            <summary>
            Method for comparing this IStatement object to another (using ID)
            </summary>
            <param name="other">The other IStatement object to compare against.</param>
            <returns>The result of the comparison</returns>
        </member>
        <member name="M:ChargifyNET.Statement.CompareTo(ChargifyNET.Statement)">
            <summary>
            Method for comparing this Statement object to another (using ID)
            </summary>
            <param name="other">The other Statement object to compare against.</param>
            <returns>The result of the comparison</returns>
        </member>
        <member name="T:ChargifyNET.Subscription">
            <summary>
            Class representing am existing Chargify subscription
            </summary>
        </member>
        <member name="M:ChargifyNET.Subscription.#ctor">
            <summary>
            Constructor.  Values set to default
            </summary>
        </member>
        <member name="M:ChargifyNET.Subscription.#ctor(System.String)">
            <summary>
            Constructor
            </summary>
            <param name="subscriptionXml">XML containing subscription info (in expected format)</param>
        </member>
        <member name="M:ChargifyNET.Subscription.#ctor(System.Xml.XmlNode)">
            <summary>
            Constructor
            </summary>
            <param name="subscriptionNode">XML containing subscription info (in expected format)</param>
        </member>
        <member name="M:ChargifyNET.Subscription.#ctor(ChargifyNET.Json.JsonObject)">
            <summary>
            Constructor
            </summary>
            <param name="subscriptionObject">JsonObject containing subscription info (in expected format)</param>
        </member>
        <member name="M:ChargifyNET.Subscription.LoadFromJson(ChargifyNET.Json.JsonObject)">
            <summary>
            Load data from a JsonObject
            </summary>
            <param name="obj">The JsonObject containing subscription data</param>
        </member>
        <member name="M:ChargifyNET.Subscription.LoadFromNode(System.Xml.XmlNode)">
            <summary>
            Load data from a subscription node
            </summary>
            <param name="subscriptionNode">The subscription node</param>
        </member>
        <member name="P:ChargifyNET.Subscription.SubscriptionID">
            <summary>
            The subscription unique ID within Chargify
            </summary>
        </member>
        <member name="P:ChargifyNET.Subscription.State">
            <summary>
            The current state of the subscription. 
            It may be "trailing", "active", "soft_failure", "past_due", "suspended", "closed" or "expired"
            </summary>
        </member>
        <member name="P:ChargifyNET.Subscription.BalanceInCents">
            <summary>
            Gives the current outstanding subscription balance, in the number of cents
            </summary>
        </member>
        <member name="P:ChargifyNET.Subscription.Balance">
            <summary>
            Gives the current outstanding subscription balance, in the number of dollars and cents
            </summary>
        </member>
        <member name="P:ChargifyNET.Subscription.CancellationMessage">
            <summary>
            Seller-provided reason for, or note about, the cancellation
            </summary>
        </member>
        <member name="P:ChargifyNET.Subscription.ActivatedAt">
            <summary>
            Timestamp for when the subscription began
            <remarks>i.e. when it came out of trial, or when it began in the case of no trial</remarks>
            </summary>
        </member>
        <member name="P:ChargifyNET.Subscription.Created">
            <summary>
            Get the date and time the customer was created a Chargify
            </summary>
        </member>
        <member name="P:ChargifyNET.Subscription.ExpiresAt">
            <summary>
            Timestamp giving the expiration date of this subscription (if any)
            </summary>
        </member>
        <member name="P:ChargifyNET.Subscription.LastUpdated">
            <summary>
            Get the date and time the customer was last updated at chargify
            </summary>
        </member>
        <member name="P:ChargifyNET.Subscription.CanceledAt">
            <summary>
            Get the date the subscription was cancelled
            </summary>
        </member>
        <member name="P:ChargifyNET.Subscription.CouponCode">
            <summary>
            Get the coupon code currently applied (if applicable) to the subscription
            </summary>
        </member>
        <member name="P:ChargifyNET.Subscription.CurrentPeriodStartedAt">
            <summary>
            Timestamp relating to the start of the current (recurring) period
            </summary>
        </member>
        <member name="P:ChargifyNET.Subscription.CurrentPeriodEndsAt">
            <summary>
            Timestamp relating to the end of the current (recurring) period
            <remarks>i.e. when the next regularily scheduled attemped charge will occur</remarks>
            </summary>
        </member>
        <member name="P:ChargifyNET.Subscription.NextAssessmentAt">
            <summary>
            Get the date and time that indicates when capture of payment will be tried or retried.
            </summary>
        </member>
        <member name="P:ChargifyNET.Subscription.TrialStartedAt">
            <summary>
            Timestamp for when the trial period (if any) began
            </summary>
        </member>
        <member name="P:ChargifyNET.Subscription.TrialEndedAt">
            <summary>
            Timestamp for when the trial period (if any) ended
            </summary>
        </member>
        <member name="P:ChargifyNET.Subscription.Product">
            <summary>
            Get the product for this subscription
            </summary>
        </member>
        <member name="P:ChargifyNET.Subscription.PaymentProfile">
            <summary>
            Get the credit card information for this subscription
            </summary>
        </member>
        <member name="P:ChargifyNET.Subscription.Customer">
            <summary>
            Get the customer information for this subscription
            </summary>
        </member>
        <member name="P:ChargifyNET.Subscription.CancelAtEndOfPeriod">
            <summary>
            Is this subscription going to automatically cancel at the end of the current period?
            </summary>
        </member>
        <member name="P:ChargifyNET.Subscription.SignupPaymentID">
            <summary>
            The ID of the corresponding payment transaction
            </summary>
        </member>
        <member name="P:ChargifyNET.Subscription.SignupRevenue">
            <summary>
            The revenue accepted upon signup
            </summary>
        </member>
        <member name="P:ChargifyNET.Subscription.DelayedCancelAt">
            <summary>
            Get the date and time relating to the time the subscription was cancelled due to a "delayed cancel"
            </summary>
        </member>
        <member name="P:ChargifyNET.Subscription.PreviousState">
            <summary>
             The previous state of this subscription
            </summary>
        </member>
        <member name="P:ChargifyNET.Subscription.TotalRevenue">
            <summary>
            The total subscription revenue (in dollars and cents)
            </summary>
        </member>
        <member name="P:ChargifyNET.Subscription.TotalRevenueInCents">
            <summary>
            The total subscription revenue (in cents)
            </summary>
        </member>
        <member name="P:ChargifyNET.Subscription.PaymentCollectionMethod">
            <summary>
            The type of billing used for this subscription
            </summary>
        </member>
        <member name="P:ChargifyNET.Subscription.ProductVersionNumber">
            <summary>
            The version of the product currently subscribed. NOTE: we have not exposed versions 
            (yet) elsewhere in the API, but if you change the price of your product the versions 
            will increment and existing subscriptions will remain on prior versions (by default, 
            to support price grandfathering).
            </summary>
        </member>
        <member name="P:ChargifyNET.Subscription.ProductPriceInCents">
            <summary>
            At what price was the product on when initial subscribed? (in cents)
            </summary>
        </member>
        <member name="P:ChargifyNET.Subscription.ProductPrice">
            <summary>
            At what price was the product on when initial subscribed? (in dollars and cents)
            </summary>
        </member>
        <member name="P:ChargifyNET.Subscription.NextProductId">
            <summary>
            If a delayed product change is scheduled, the ID of the product that the subscription 
            will be changed to at the next renewal.
            </summary>
        </member>
        <member name="M:ChargifyNET.Subscription.op_Equality(ChargifyNET.Subscription,ChargifyNET.Subscription)">
            <summary>
            Equals operator for two subscriptions
            </summary>
            <returns>True if the subscriptions are equal</returns>
        </member>
        <member name="M:ChargifyNET.Subscription.op_Equality(ChargifyNET.Subscription,ChargifyNET.ISubscription)">
            <summary>
            Equals operator for two subscriptions
            </summary>
            <returns>True if the subscriptions are equal</returns>
        </member>
        <member name="M:ChargifyNET.Subscription.op_Equality(ChargifyNET.ISubscription,ChargifyNET.Subscription)">
            <summary>
            Equals operator for two subscriptions
            </summary>
            <returns>True if the subscriptions are equal</returns>
        </member>
        <member name="M:ChargifyNET.Subscription.op_Inequality(ChargifyNET.Subscription,ChargifyNET.Subscription)">
            <summary>
            Not Equals operator for two subscriptions
            </summary>
            <returns>True if the subscriptions are not equal</returns>
        </member>
        <member name="M:ChargifyNET.Subscription.op_Inequality(ChargifyNET.Subscription,ChargifyNET.ISubscription)">
            <summary>
            Not Equals operator for two subscriptions
            </summary>
            <returns>True if the subscriptions are not equal</returns>
        </member>
        <member name="M:ChargifyNET.Subscription.op_Inequality(ChargifyNET.ISubscription,ChargifyNET.Subscription)">
            <summary>
            Not Equals operator for two subscriptions
            </summary>
            <returns>True if the subscriptions are not equal</returns>
        </member>
        <member name="M:ChargifyNET.Subscription.GetHashCode">
            <summary>
            Get Hash code
            </summary>
        </member>
        <member name="M:ChargifyNET.Subscription.Equals(System.Object)">
            <summary>
            Equals
            </summary>
            <param name="obj"></param>
        </member>
        <member name="M:ChargifyNET.Subscription.ToString">
            <summary>
            Returns a string representation of the Subscription object.
            </summary>
        </member>
        <member name="M:ChargifyNET.Subscription.CompareTo(ChargifyNET.ISubscription)">
            <summary>
            Compare this instance to another (by SubscriptionID)
            </summary>
            <param name="other">The other instance</param>
            <returns>The result of the comparison</returns>
        </member>
        <member name="M:ChargifyNET.Subscription.CompareTo(ChargifyNET.Subscription)">
            <summary>
            Compare this instance to another (by SubscriptionID)
            </summary>
            <param name="other">The other instance</param>
            <returns>The result of the comparison</returns>
        </member>
        <member name="T:ChargifyNET.SubscriptionOverride">
            <summary>
            A subscription override (values which cannot be set normally without specifically performing a special call)
            </summary>
        </member>
        <member name="M:ChargifyNET.SubscriptionOverride.#ctor">
            <summary>
            Constructor.  Values set to default
            </summary>
        </member>
        <member name="M:ChargifyNET.SubscriptionOverride.#ctor(System.String)">
            <summary>
            Constructor
            </summary>
            <param name="subscriptionOverrideXml">XML containing subscription override info (in expected format)</param>
        </member>
        <member name="M:ChargifyNET.SubscriptionOverride.#ctor(System.Xml.XmlNode)">
            <summary>
            Constructor
            </summary>
            <param name="subscriptionOverrideNode">XML containing subscription override info (in expected format)</param>
        </member>
        <member name="M:ChargifyNET.SubscriptionOverride.#ctor(ChargifyNET.Json.JsonObject)">
            <summary>
            Constructor
            </summary>
            <param name="subscriptionOverrideObject">JsonObject containing subscription override info (in expected format)</param>
        </member>
        <member name="M:ChargifyNET.SubscriptionOverride.LoadFromJson(ChargifyNET.Json.JsonObject)">
            <summary>
            Load data from a JsonObject
            </summary>
            <param name="obj">The JsonObject containing subscription data</param>
        </member>
        <member name="M:ChargifyNET.SubscriptionOverride.LoadFromNode(System.Xml.XmlNode)">
            <summary>
            Load data from a subscription node
            </summary>
            <param name="subscriptionNode">The subscription node</param>
        </member>
        <member name="P:ChargifyNET.SubscriptionOverride.ActivatedAt">
            <summary>
            Can be used to record an external signup date. Chargify uses this field to record when a subscription first goes active (either at signup or at trial end)
            </summary>
        </member>
        <member name="P:ChargifyNET.SubscriptionOverride.CanceledAt">
            <summary>
            Can be used to record an external cancellation date. Chargify sets this field automatically when a subscription is canceled, whether by request or via dunning.
            </summary>
        </member>
        <member name="P:ChargifyNET.SubscriptionOverride.CancellationMessage">
            <summary>
            Can be used to record a reason for the original cancellation.
            </summary>
        </member>
        <member name="P:ChargifyNET.SubscriptionOverride.ExpiresAt">
            <summary>
            Can be used to record an external expiration date. Chargify sets this field automatically when a subscription expires (ceases billing) after a prescribed amount of time.
            </summary>
        </member>
        <member name="M:ChargifyNET.SubscriptionPreview.#ctor(System.String)">
            <summary>
            Constructor
            </summary>
            <param name="xml"></param>
        </member>
        <member name="P:ChargifyNET.SubscriptionPreview.SubscriptionPreviewResult">
            <summary>
            
            </summary>
        </member>
        <member name="T:ChargifyNET.Transaction">
            <summary>
            Transaction for a subscription/product for a customer.
            </summary>
        </member>
        <member name="M:ChargifyNET.Transaction.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:ChargifyNET.Transaction.#ctor(System.String)">
            <summary>
            Constructor
            </summary>
            <param name="transactionXml">An XML string containing a transaction node</param>
        </member>
        <member name="M:ChargifyNET.Transaction.#ctor(System.Xml.XmlNode)">
            <summary>
            Constructor
            </summary>
            <param name="transactionNode">An xml node with transaction information</param>
        </member>
        <member name="M:ChargifyNET.Transaction.#ctor(ChargifyNET.Json.JsonObject)">
            <summary>
            Constructor
            </summary>
            <param name="transactionObject">JsonObject containing transaction info (in expected format)</param>
        </member>
        <member name="M:ChargifyNET.Transaction.LoadFromJson(ChargifyNET.Json.JsonObject)">
            <summary>
            Load data from a JsonObject
            </summary>
            <param name="obj">The JsonObject containing transaction data</param>
        </member>
        <member name="M:ChargifyNET.Transaction.LoadFromNode(System.Xml.XmlNode)">
            <summary>
            Load data from a transaction node
            </summary>
            <param name="transactionNode">The transaction node</param>
        </member>
        <member name="P:ChargifyNET.Transaction.Type">
            <summary>
            The type of transaction
            </summary>
        </member>
        <member name="P:ChargifyNET.Transaction.ID">
            <summary>
            The unique identifier for the Transaction
            </summary>
        </member>
        <member name="P:ChargifyNET.Transaction.AmountInCents">
            <summary>
            The amount in cents for the Transaction
            </summary>
        </member>
        <member name="P:ChargifyNET.Transaction.Amount">
            <summary>
             The amount (in dollars and cents) for the Transaction
            </summary>
        </member>
        <member name="P:ChargifyNET.Transaction.CreatedAt">
            <summary>
            Timestamp indicating when the Transaction was created
            </summary>
        </member>
        <member name="P:ChargifyNET.Transaction.StartingBalanceInCents">
            <summary>
            he initial balance on the subscription before the Transaction has been processed, in cents.
            </summary>
        </member>
        <member name="P:ChargifyNET.Transaction.StartingBalance">
            <summary>
            he initial balance on the subscription before the Transaction has been processed, in dollars and cents.
            </summary>
        </member>
        <member name="P:ChargifyNET.Transaction.EndingBalanceInCents">
            <summary>
            The remaining balance on the subscription after the Transaction has been processed, in cents.
            </summary>
        </member>
        <member name="P:ChargifyNET.Transaction.EndingBalance">
            <summary>
            The remaining balance on the subscription after the Transaction has been processed, in dollars and cents.
            </summary>
        </member>
        <member name="P:ChargifyNET.Transaction.Memo">
            <summary>
            A note about the Transaction
            </summary>
        </member>
        <member name="P:ChargifyNET.Transaction.SubscriptionID">
            <summary>
            The unique identifier for the associated Subscription
            </summary>
        </member>
        <member name="P:ChargifyNET.Transaction.ProductID">
            <summary>
            The unique identifier for the associated Product
            </summary>
        </member>
        <member name="P:ChargifyNET.Transaction.Success">
            <summary>
            Whether or not the Transaction was successful.
            </summary>
        </member>
        <member name="P:ChargifyNET.Transaction.PaymentID">
            <summary>
            The unique identifier for the payment being explicitly refunded (in whole or in part) by this transaction. 
            Will be null for all transaction types except for “Refund”. May be null even for Refunds. 
            For partial refunds, more than one Refund transaction may reference the same payment_id
            </summary>
        </member>
        <member name="P:ChargifyNET.Transaction.Kind">
            <summary>
            The specific "subtype" for the transaction_type
            </summary>
        </member>
        <member name="P:ChargifyNET.Transaction.GatewayTransactionID">
            <summary>
            The transaction ID from the remote gateway (i.e. Authorize.Net), if one exists
            </summary>
        </member>
        <member name="P:ChargifyNET.Transaction.GatewayOrderID">
            <summary>
            A gateway-specific identifier for the transaction, separate from the gateway_transaction_id
            </summary>
        </member>
        <member name="M:ChargifyNET.Transaction.CompareTo(ChargifyNET.ITransaction)">
            <summary>
            Compare this instance to another (by ID)
            </summary>
            <param name="other">The other instance</param>
            <returns>The result of the comparison</returns>
        </member>
        <member name="M:ChargifyNET.Transaction.CompareTo(ChargifyNET.Transaction)">
            <summary>
            Compare this instance to another (by ID)
            </summary>
            <param name="other">The other instance</param>
            <returns>The result of the comparison</returns>
        </member>
        <member name="T:ChargifyNET.Usage">
            <summary>
            A usage is a record of a customer using a metered component
            </summary>
        </member>
        <member name="M:ChargifyNET.Usage.#ctor">
            <summary>
            Constructor.  Values set to default
            </summary>
        </member>
        <member name="M:ChargifyNET.Usage.#ctor(System.String)">
            <summary>
            Constructor
            </summary>
            <param name="usageXml">XML containing usage info (in expected format)</param>
        </member>
        <member name="M:ChargifyNET.Usage.#ctor(System.Xml.XmlNode)">
            <summary>
            Constructor
            </summary>
            <param name="usageNode">XML containing usage info (in expected format)</param>
        </member>
        <member name="M:ChargifyNET.Usage.#ctor(ChargifyNET.Json.JsonObject)">
            <summary>
            Constructor
            </summary>
            <param name="usageObject">JsonObject containing usage info (in expected format)</param>
        </member>
        <member name="M:ChargifyNET.Usage.LoadFromJson(ChargifyNET.Json.JsonObject)">
            <summary>
            Load usage data from a JsonObject
            </summary>
            <param name="obj">The JsonObject containing usage data</param>
        </member>
        <member name="M:ChargifyNET.Usage.LoadFromNode(System.Xml.XmlNode)">
            <summary>
            Load data from a subscription node
            </summary>
            <param name="subscriptionNode">The subscription node</param>
        </member>
        <member name="P:ChargifyNET.Usage.ID">
            <summary>
            The ID of the usage element
            </summary>
        </member>
        <member name="P:ChargifyNET.Usage.Quantity">
            <summary>
            The usage quantity
            </summary>
        </member>
        <member name="P:ChargifyNET.Usage.Memo">
            <summary>
            A note containing information about the usage
            </summary>
        </member>
        <member name="M:ChargifyNET.Usage.CompareTo(ChargifyNET.Usage)">
            <summary>
            Compare this usage to another usage
            </summary>
            <param name="other"></param>
            <returns></returns>
        </member>
        <member name="M:ChargifyNET.Usage.CompareTo(ChargifyNET.IUsage)">
            <summary>
            Compare this usage to another usage
            </summary>
            <param name="other"></param>
            <returns></returns>
        </member>
        <member name="T:ChargifyNET.MaskStyle">
            <summary>
            An enumeration of the types of masking styles for the Mask() extension method
            of the string class.
            </summary>
        </member>
        <member name="F:ChargifyNET.MaskStyle.All">
            <summary>
            Masks all characters within the masking region, regardless of type.
            </summary>
        </member>
        <member name="F:ChargifyNET.MaskStyle.AlphaNumericOnly">
            <summary>
            Masks only alphabetic and numeric characters within the masking region.
            </summary>
        </member>
        <member name="T:ChargifyNET.StringExtensions">
            <summary>
            Utility class for string manipulation.
            </summary>
        </member>
        <member name="F:ChargifyNET.StringExtensions.DefaultMaskCharacter">
            <summary>
            Default masking character used in a mask.
            </summary>
        </member>
        <member name="M:ChargifyNET.StringExtensions.IsLengthAtLeast(System.String,System.Int32)">
            <summary>
            Returns true if the string is non-null and at least the specified number of characters.
            </summary>
            <param name="value">The string to check.</param>
            <param name="length">The minimum length.</param>
            <returns>True if string is non-null and at least the length specified.</returns>
            <exception>throws ArgumentOutOfRangeException if length is not a non-negative number.</exception>
        </member>
        <member name="M:ChargifyNET.StringExtensions.Mask(System.String,System.Char,System.Int32,ChargifyNET.MaskStyle)">
            <summary>
            Mask the source string with the mask char except for the last exposed digits.
            </summary>
            <param name="sourceValue">Original string to mask.</param>
            <param name="maskChar">The character to use to mask the source.</param>
            <param name="numExposed">Number of characters exposed in masked value.</param>
            <param name="style">The masking style to use (all characters or just alpha-nums).</param>
            <returns>The masked account number.</returns>
        </member>
        <member name="M:ChargifyNET.StringExtensions.Mask(System.String,System.Char,System.Int32)">
            <summary>
            Mask the source string with the mask char except for the last exposed digits.
            </summary>
            <param name="sourceValue">Original string to mask.</param>
            <param name="maskChar">The character to use to mask the source.</param>
            <param name="numExposed">Number of characters exposed in masked value.</param>
            <returns>The masked account number.</returns>
        </member>
        <member name="M:ChargifyNET.StringExtensions.Mask(System.String,System.Char)">
            <summary>
            Mask the source string with the mask char.
            </summary>
            <param name="sourceValue">Original string to mask.</param>
            <param name="maskChar">The character to use to mask the source.</param>
            <returns>The masked account number.</returns>
        </member>
        <member name="M:ChargifyNET.StringExtensions.Mask(System.String,System.Int32)">
            <summary>
            Mask the source string with the default mask char except for the last exposed digits.
            </summary>
            <param name="sourceValue">Original string to mask.</param>
            <param name="numExposed">Number of characters exposed in masked value.</param>
            <returns>The masked account number.</returns>
        </member>
        <member name="M:ChargifyNET.StringExtensions.Mask(System.String)">
            <summary>
            Mask the source string with the default mask char.
            </summary>
            <param name="sourceValue">Original string to mask.</param>
            <returns>The masked account number.</returns>
        </member>
        <member name="M:ChargifyNET.StringExtensions.Mask(System.String,System.Char,ChargifyNET.MaskStyle)">
            <summary>
            Mask the source string with the mask char.
            </summary>
            <param name="sourceValue">Original string to mask.</param>
            <param name="maskChar">The character to use to mask the source.</param>
            <param name="style">The masking style to use (all characters or just alpha-nums).</param>
            <returns>The masked account number.</returns>
        </member>
        <member name="M:ChargifyNET.StringExtensions.Mask(System.String,System.Int32,ChargifyNET.MaskStyle)">
            <summary>
            Mask the source string with the default mask char except for the last exposed digits.
            </summary>
            <param name="sourceValue">Original string to mask.</param>
            <param name="numExposed">Number of characters exposed in masked value.</param>
            <param name="style">The masking style to use (all characters or just alpha-nums).</param>
            <returns>The masked account number.</returns>
        </member>
        <member name="M:ChargifyNET.StringExtensions.Mask(System.String,ChargifyNET.MaskStyle)">
            <summary>
            Mask the source string with the default mask char.
            </summary>
            <param name="sourceValue">Original string to mask.</param>
            <param name="style">The masking style to use (all characters or just alpha-nums).</param>
            <returns>The masked account number.</returns>
        </member>
        <member name="M:ChargifyNET.StringExtensions.CreateAlphaNumMask(System.Text.StringBuilder,System.String,System.Char,System.Int32)">
            <summary>
            Masks all characters for the specified length.
            </summary>
            <param name="buffer">String builder to store result in.</param>
            <param name="source">The source string to pull non-alpha numeric characters.</param>
            <param name="mask">Masking character to use.</param>
            <param name="length">Length of the mask.</param>
        </member>
        <member name="T:ChargifyNET.Utf8StringWriter">
            <summary>
            Utf8 String Writer
            </summary>
        </member>
        <member name="P:ChargifyNET.Utf8StringWriter.Encoding">
            <summary>
            The encoding for this writer
            </summary>
        </member>
        <member name="T:ChargifyNET.UsefulExtensions">
            <summary>
            Extension class
            </summary>
        </member>
        <member name="M:ChargifyNET.UsefulExtensions.ToHtmlEncoded(System.String)">
            <summary>
            Retunrs the HtmlEncoded string
            </summary>
            <param name="input">The string to encode</param>
            <returns>The Html-encoded string (using the PCLWebUtility.WebUtility.HtmlEncode method)</returns>
        </member>
        <member name="M:ChargifyNET.UsefulExtensions.CopyStream(System.IO.Stream,System.IO.Stream)">
            <summary>
            Extension method used to copy the response stream for the purposes of parsing
            </summary>
            <param name="input">The input stream</param>
            <param name="output">The output stream</param>
        </member>
        <member name="M:ChargifyNET.UsefulExtensions.IsWebhookRequestValid(System.IO.Stream,System.String,System.String)">
            <summary>
            Determine if the webhook request is valid by calculating the expected signature and comparing it
            </summary>
            <param name="requestStream">The request stream</param>
            <param name="sharedKey">The site shared key from Chargify</param>
            <param name="givenSignature">The signature returned along side the webhook for verification</param>
            <returns>True if verified, false otherwise.</returns>
        </member>
        <member name="M:ChargifyNET.UsefulExtensions.CalculateHMAC256Signature(System.String,System.String)">
            <summary>
            Method to calculate the expected HMAC-SHA256 signture of a body of text using the site's sharedKey
            </summary>
            <param name="text">The text to run through the hashing algorithm</param>
            <param name="secret">The secret used to seed the hash</param>
            <returns>The hex hash of the passed in text</returns>
        </member>
        <member name="M:ChargifyNET.UsefulExtensions.IsChargifyWebhookContentValid(System.String,System.String,System.String)">
            <summary>
            Method for checking if the data passed back via the webhook interface are valid
            </summary>
            <param name="text">The body of the webhook message</param>
            <param name="signature">The signature in the header of the message</param>
            <param name="sharedKey">The site shared key (used to validate)</param>
            <returns>True if the signature matches the calculated value, false otherwise.</returns>
        </member>
        <member name="M:ChargifyNET.UsefulExtensions.IsChargifyWebhookContentValidHMAC(System.String,System.String,System.String)">
            <summary>
            Method for checking if the data passed back via the webhook interface are valid (using HMAC-SHA-256)
            </summary>
            <param name="text">The body of the webhook message</param>
            <param name="signature">The signature in the header of the message</param>
            <param name="sharedKey">The site shared key (used to validate)</param>
            <returns>True if the signature matches the calculated value, false otherwise.</returns>
        </member>
        <member name="M:ChargifyNET.UsefulExtensions.GetChargifyDirectSignature(System.String,System.String)">
            <summary>
            Method for calculating the chargify direct signature
            </summary>
            <param name="text">Should be the concatenation of api_id, timestamp, nonce and data parameters</param>
            <param name="api_secret">The api secret issued to the API user by Chargify</param>
            <returns>The HMAC-SHA1 signature used to send to Chargify while using the API</returns>
        </member>
        <member name="M:ChargifyNET.UsefulExtensions.GetChargifyHostedToken(System.String)">
            <summary>
            Extension method to change concatenated string into token used in hosted page url's
            </summary>
            <param name="text">The concatenated sting to tokenize</param>
            <returns>The first 10 characters of the hex digest SHA-1 of the message string.</returns>
        </member>
        <member name="M:ChargifyNET.UsefulExtensions.ToCustomerAttributes(ChargifyNET.ICustomer)">
            <summary>
            Convert a customer into the attributes structure to use when creating a subscrition
            </summary>
            <param name="customer">The customer to convert</param>
            <returns>The converted result</returns>
        </member>
        <member name="M:ChargifyNET.UsefulExtensions.IsXml(System.String)">
            <summary>
            Method for determining if a string is parsable XML
            </summary>
            <param name="value">The string value to test</param>
            <returns>Returns true if the string is XML parsable, false otherwise.</returns>
        </member>
        <member name="M:ChargifyNET.UsefulExtensions.IsJSON(System.String)">
            <summary>
            Method for determining if a string is parsable JSON
            </summary>
            <param name="value">The value to test</param>
            <returns>True if the string is JSON parsable, false otherwise.</returns>
        </member>
        <member name="M:ChargifyNET.UsefulExtensions.IsGuid(System.String)">
            <summary>
            Method for determining if a string is a valid GUID
            </summary>
            <param name="value">The value to examine</param>
            <returns>True if the value is a guid, false otherwise.</returns>
        </member>
        <member name="M:ChargifyNET.UsefulExtensions.ConvertToGuid(System.String)">
            <summary>
            Method for converting a string to a guid.
            </summary>
            <param name="value">The value to convert.</param>
            <returns>The guid object of value.</returns>
        </member>
        <member name="M:ChargifyNET.UsefulExtensions.ToJson(System.Xml.XmlDocument)">
            <summary>
            Method for converting an XmlDocument to JSON
            </summary>
            <param name="doc">The XmlDocument to convert</param>
            <returns>The JSON result</returns>
        </member>
        <member name="M:ChargifyNET.UsefulExtensions.ToChargifyCurrencyFormat(System.Decimal)">
            <summary>
            Method that will change format money fields to something chargify can use.
            </summary>
            <param name="value">An amount, as a decimal type, to format for Chargify</param>
            <returns>The formatted amount.</returns>
        </member>
        <member name="M:ChargifyNET.UsefulExtensions.GetJSONContentAsProrationDowngradeScheme(ChargifyNET.Json.JsonObject,System.String)">
            <summary>
            Method for getting the content of a JsonObject as an enum value of type ComponentDowngradeProrationScheme
            </summary>
            <param name="obj">The object whose value needs to be extracted</param>
            <param name="key">The key of the value to extract</param>
            <returns>The enumerated value that corresponds to the keyed extracted value</returns>
        </member>
        <member name="M:ChargifyNET.UsefulExtensions.GetNodeContentAsProrationDowngradeScheme(System.Xml.XmlNode)">
            <summary>
            Method for getting the content of an XmlNode as a ComponentDowngradeProrationScheme
            </summary>
            <param name="node">The node whose value needs to be extracted</param>
            <returns>The ComponentDowngradeProrationScheme value of the node, ComponentDowngradeProrationScheme.Unknown otherwise.</returns>
        </member>
        <member name="M:ChargifyNET.UsefulExtensions.GetJSONContentAsProrationUpgradeScheme(ChargifyNET.Json.JsonObject,System.String)">
            <summary>
            Method for getting the content of a JsonObject as an enum value of type ComponentUpgradeProrationScheme
            </summary>
            <param name="obj">The object whose value needs to be extracted</param>
            <param name="key">The key of the value to extract</param>
            <returns>The enumerated value that corresponds to the keyed extracted value, ComponentUpgradeProrationScheme.Unknown otherwise.</returns>
        </member>
        <member name="M:ChargifyNET.UsefulExtensions.GetNodeContentAsProrationUpgradeScheme(System.Xml.XmlNode)">
            <summary>
            Method for getting the content of an XmlNode as a ComponentUpgradeProrationScheme
            </summary>
            <param name="node">The node whose value needs to be extracted</param>
            <returns>The ComponentUpgradeProrationScheme value of the node, ComponentUpgradeProrationScheme.Unknown otherwise.</returns>
        </member>
        <member name="M:ChargifyNET.UsefulExtensions.GetNodeContentAsDecimal(System.Xml.XmlNode)">
            <summary>
            Method for getting the content of an XmlNode as a decimal
            </summary>
            <param name="node">The node whose value needs to be extracted</param>
            <returns>The decimal value of the node</returns>
        </member>
        <member name="M:ChargifyNET.UsefulExtensions.GetJSONContentAsDecimal(ChargifyNET.Json.JsonObject,System.String)">
            <summary>
            Method for getting the content of a JsonObject as a decimal
            </summary>
            <param name="obj">The object whose value needs to be extracted</param>
            <param name="key">The key of the string to retrieve</param>
            <returns>The decimal value of the object at key</returns>
        </member>
        <member name="M:ChargifyNET.UsefulExtensions.GetNodeContentAsNullableInt(System.Xml.XmlNode)">
            <summary>
            Method for getting the content of an XmlNode as an nullable integer
            </summary>
            <param name="node">The node whose value needs to be extracted</param>
            <returns>The nullable integer value of the node</returns>
        </member>
        <member name="M:ChargifyNET.UsefulExtensions.GetNodeContentAsString(System.Xml.XmlNode)">
            <summary>
            Method for getting the content of an XmlNode as a string
            </summary>
            <param name="node">The node whose value needs to be extracted</param>
            <returns>The string value of the node</returns>
        </member>
        <member name="M:ChargifyNET.UsefulExtensions.GetJSONContentAsString(ChargifyNET.Json.JsonObject,System.String)">
            <summary>
            Method for getting the content of a JsonObject as a string
            </summary>
            <param name="obj">The object whose value needs to be extracted</param>
            <param name="key">The key of the string to retrieve</param>
            <returns>The string value of the object at key</returns>
        </member>
        <member name="M:ChargifyNET.UsefulExtensions.GetNodeContentAsLong(System.Xml.XmlNode)">
            <summary>
            Method for getting the content of an XmlNode as an long
            </summary>
            <param name="node">The node whose value needs to be extracted</param>
            <returns>The long value of the node</returns>
        </member>
        <member name="M:ChargifyNET.UsefulExtensions.GetNodeContentAsInt(System.Xml.XmlNode)">
            <summary>
            Method for getting the content of an XmlNode as an integer
            </summary>
            <param name="node">The node whose value needs to be extracted</param>
            <returns>The integer value of the node</returns>
        </member>
        <member name="M:ChargifyNET.UsefulExtensions.GetJSONContentAsNullableInt(ChargifyNET.Json.JsonObject,System.String)">
            <summary>
            Method for getting the content of a JsonObject as a nullable integer
            </summary>
            <param name="obj">The object whose value/key needs to be extracted</param>
            <param name="key">The key of the int to retrieve</param>
            <returns>The nullable integer value of the keyed object</returns>
        </member>
        <member name="M:ChargifyNET.UsefulExtensions.GetJSONContentAsLong(ChargifyNET.Json.JsonObject,System.String)">
            <summary>
            Method for getting the content of a JsonObject as an integer
            </summary>
            <param name="obj">The object whose value/key needs to be extracted</param>
            <param name="key">The key of the int to retrieve</param>
            <returns>The integer value of the keyed object</returns>
        </member>
        <member name="M:ChargifyNET.UsefulExtensions.GetJSONContentAsInt(ChargifyNET.Json.JsonObject,System.String)">
            <summary>
            Method for getting the content of a JsonObject as an integer
            </summary>
            <param name="obj">The object whose value/key needs to be extracted</param>
            <param name="key">The key of the int to retrieve</param>
            <returns>The integer value of the keyed object</returns>
        </member>
        <member name="M:ChargifyNET.UsefulExtensions.GetJSONContentAsProductFamily(ChargifyNET.Json.JsonObject,System.String)">
            <summary>
            Method for getting the keyed content of a JsonObject as a product family
            </summary>
            <param name="obj">The object whose value needs to be extracted</param>
            <param name="key">The key of the product family to retrieve</param>
            <returns>The product family value of the object as keyed</returns>
        </member>
        <member name="M:ChargifyNET.UsefulExtensions.GetNodeContentAsProductFamily(System.Xml.XmlNode)">
            <summary>
            Method for getting the content of an XmlNode as a product family
            </summary>
            <param name="node">The node whose value needs to be extracted</param>
            <returns>The product family value of the node</returns>
        </member>
        <member name="M:ChargifyNET.UsefulExtensions.GetNodeContentAsRenewalLineItem(System.Xml.XmlNode)">
            <summary>
            Convert the xml node into a renewal line item
            </summary>
            <param name="node">The xml node containing renewal line item data</param>
            <returns>The renewal line item object, or null</returns>
        </member>
        <member name="M:ChargifyNET.UsefulExtensions.ConvertNode``1(System.Xml.XmlNode)">
            <summary>
            Generic node convert method
            </summary>
            <typeparam name="T">The type to convert to</typeparam>
            <param name="node">The xml node to convert</param>
            <returns>The object if successful, null otherwise</returns>
        </member>
        <member name="M:ChargifyNET.UsefulExtensions.GetJSONContentAsRenewalLineItems(ChargifyNET.Json.JsonObject,System.String)">
            <summary>
            Convert the JsonObject to a list of Renewal Line Items
            </summary>
            <param name="obj">The json object to convert</param>
            <param name="key">The key for this object array</param>
            <returns>The list result, or empty list otherwise</returns>
        </member>
        <member name="M:ChargifyNET.UsefulExtensions.GetNodeContentAsRenewalLineItems(System.Xml.XmlNode)">
            <summary>
            Convert the XmlNode to a list of Renewal Line Items
            </summary>
            <param name="node">The xml node to convert</param>
            <returns>The list result, or empty list otherwise</returns>
        </member>
        <member name="M:ChargifyNET.UsefulExtensions.GetNodeContentAsPublicSignupPages(System.Xml.XmlNode)">
            <summary>
            Method of getting the PublicSignupPages object from an XmlNode
            </summary>
            <param name="node">The node whose value needs to be extracted</param>
            <returns>The PublicSignupPages value of the node, empty list otherwise.</returns>
        </member>
        <member name="M:ChargifyNET.UsefulExtensions.GetJSONContentAsPublicSignupPages(ChargifyNET.Json.JsonObject,System.String)">
            <summary>
            Method of getting the public signup pages object from a JsonObject
            </summary>
            <param name="obj">The JsonObject containing the PublicSignupPages data</param>
            <param name="key">They key of the PublicSignupPages object</param>
            <returns>The list of PublicSignupPages if possible, empty list otherwise.</returns>
        </member>
        <member name="M:ChargifyNET.UsefulExtensions.GetJSONContentAsCustomer(ChargifyNET.Json.JsonObject,System.String)">
            <summary>
            Method for getting a Customer object from a JsonObject
            </summary>
            <param name="obj">The JsonObject containing the Customer data</param>
            <param name="key">They key of the customer object</param>
            <returns>The customer object if possible, null otherwise.</returns>
        </member>
        <member name="M:ChargifyNET.UsefulExtensions.GetNodeContentAsCustomer(System.Xml.XmlNode)">
            <summary>
            Method for getting the content of an XmlNode as a customer
            </summary>
            <param name="node">The node whose value needs to be extracted</param>
            <returns>The customer of the node</returns>
        </member>
        <member name="M:ChargifyNET.UsefulExtensions.GetJSONContentAsPaymentProfileView(ChargifyNET.Json.JsonObject,System.String)">
            <summary>
            Method for retrieving the PaymentProfileView from a JsonObject
            </summary>
            <param name="obj">The object to retrieve the PaymentProfileView value from</param>
            <param name="key">The key of the PaymentProfileView field in the JsonObject</param>
            <returns>The PaymentProfileView value, null otherwise.</returns>
        </member>
        <member name="M:ChargifyNET.UsefulExtensions.GetNodeContentAsPaymentProfileView(System.Xml.XmlNode)">
            <summary>
            Method for getting the content of an XmlNode as a PaymentProfileView
            </summary>
            <param name="node">The node whose value needs to be extracted</param>
            <returns>The PaymentProfileView value of the node</returns>
        </member>
        <member name="M:ChargifyNET.UsefulExtensions.GetJSONContentAsProduct(ChargifyNET.Json.JsonObject,System.String)">
            <summary>
            Method for retrieving the Product from a JsonObject
            </summary>
            <param name="obj">The object to retrieve the Product value from</param>
            <param name="key">The key of the Product field in the JsonObject</param>
            <returns>The Product value, null otherwise.</returns>
        </member>
        <member name="M:ChargifyNET.UsefulExtensions.GetNodeContentAsProduct(System.Xml.XmlNode)">
            <summary>
            Method for getting the content of an XmlNode as a Product
            </summary>
            <param name="node">The node whose value needs to be extracted</param>
            <returns>The Product value of the node</returns>
        </member>
        <member name="M:ChargifyNET.UsefulExtensions.GetJSONContentAsBoolean(ChargifyNET.Json.JsonObject,System.String)">
            <summary>
            Method for getting the content of a JsonObject as a boolean
            </summary>
            <param name="obj">The object whose value needs to be extracted</param>
            <param name="key">The key of the JsonObject to get the bool from</param>
            <returns>The boolean value of the object at key</returns>
        </member>
        <member name="M:ChargifyNET.UsefulExtensions.GetNodeContentAsBoolean(System.Xml.XmlNode)">
            <summary>
            Method for getting the content of an XmlNode as a boolean
            </summary>
            <param name="node">The node whose value needs to be extracted</param>
            <returns>The boolean value of the node</returns>
        </member>
        <member name="M:ChargifyNET.UsefulExtensions.GetJSONContentAsDateTime(ChargifyNET.Json.JsonObject,System.String)">
            <summary>
            Method for retrieving the DateTime from a JsonObject
            </summary>
            <param name="obj">The object to retrieve the DateTime value from</param>
            <param name="key">The key of the DateTime field in the JsonObject</param>
            <returns>The DateTime value, DateTime.MinValue otherwise.</returns>
        </member>
        <member name="M:ChargifyNET.UsefulExtensions.GetJSONContentAsNullableDateTime(ChargifyNET.Json.JsonObject,System.String)">
            <summary>
            Method for retrieving the DateTime from a JsonObject
            </summary>
            <param name="obj">The object to retrieve the DateTime value from</param>
            <param name="key">The key of the DateTime field in the JsonObject</param>
            <returns>The DateTime value, DateTime.MinValue otherwise.</returns>
        </member>
        <member name="M:ChargifyNET.UsefulExtensions.GetNodeContentAsDateTime(System.Xml.XmlNode)">
            <summary>
            Method for getting the content of an XmlNode as a DateTime object
            </summary>
            <param name="node">The node whose value needs to be extracted</param>
            <returns>The DateTime value of the node</returns>
        </member>
        <member name="M:ChargifyNET.UsefulExtensions.GetNodeContentAsNullableDateTime(System.Xml.XmlNode)">
            <summary>
            Method for getting the content of an XmlNode as a DateTime object
            </summary>
            <param name="node">The node whose value needs to be extracted</param>
            <returns>The DateTime value of the node</returns>
        </member>
        <member name="M:ChargifyNET.UsefulExtensions.GetJSONContentAsGuid(ChargifyNET.Json.JsonObject,System.String)">
            <summary>
            Method for retrieving the Guid from a JsonObject
            </summary>
            <param name="obj">The object to retrieve the Guid value from</param>
            <param name="key">The key of the Guid field in the JsonObject</param>
            <returns>The Guid value, Guid.Empty otherwise.</returns>
        </member>
        <member name="M:ChargifyNET.UsefulExtensions.GetNodeContentAsGuid(System.Xml.XmlNode)">
            <summary>
            Method for getting the content of an XmlNode as a Guid
            </summary>
            <param name="node">The node whose value needs to be extracted</param>
            <returns>The Guid value of the node</returns>
        </member>
        <member name="M:ChargifyNET.UsefulExtensions.GetJSONContentAsPricingSchemeType(ChargifyNET.Json.JsonObject,System.String)">
            <summary>
            Method for retrieving the PricingSchemeType from a JsonObject
            </summary>
            <param name="obj">The object to retrieve the PricingSchemeType value from</param>
            <param name="key">The key of the PricingSchemeType field in the JsonObject</param>
            <returns>The PricingSchemeType value, PricingSchemeType.Unknown otherwise.</returns>
        </member>
        <member name="M:ChargifyNET.UsefulExtensions.GetNodeContentAsPricingSchemeType(System.Xml.XmlNode)">
            <summary>
            Method for getting the content of an XmlNode as a PricingSchemeType
            </summary>
            <param name="node">The node whose value needs to be extracted</param>
            <returns>The PricingSchemeType value of the node, PricingSchemeType.Unknown otherwise.</returns>
        </member>
        <member name="M:ChargifyNET.UsefulExtensions.GetJSONContentAsComponentType(ChargifyNET.Json.JsonObject,System.String)">
            <summary>
            Method for retrieving the ComponentType from a JsonObject
            </summary>
            <param name="obj">The object to retrieve the ComponentType value from</param>
            <param name="key">The key of the ComponentType field in the JsonObject</param>
            <returns>The ComponentType value, ComponentType.Unknown otherwise.</returns>
        </member>
        <member name="M:ChargifyNET.UsefulExtensions.GetNodeContentAsComponentType(System.Xml.XmlNode)">
            <summary>
            Method for getting the content of an XmlNode as a ComponentType
            </summary>
            <param name="node">The node whose value needs to be extracted</param>
            <returns>The ComponentType value of the node, ComponentType.Unknown otherwise.</returns>
        </member>
        <member name="M:ChargifyNET.UsefulExtensions.GetJSONContentAsPaymentCollectionMethod(ChargifyNET.Json.JsonObject,System.String)">
            <summary>
            Method for retrieving the PaymentCollectionMethod from a JsonObject
            </summary>
            <param name="obj">The object to retrieve the PaymentCollectionMethod value from</param>
            <param name="key">The key of the PaymentCollectionMethod field in the JsonObject</param>
            <returns>The PaymentCollectionMethod value, PaymentCollectionMethod.Unknown otherwise.</returns>
        </member>
        <member name="M:ChargifyNET.UsefulExtensions.GetJSONContentAsTransactionType(ChargifyNET.Json.JsonObject,System.String)">
            <summary>
            Method for retrieving the TransactionType from a JsonObject
            </summary>
            <param name="obj">The object to retrieve the TransactionType value from</param>
            <param name="key">The key of the TransactionType field in the JsonObject</param>
            <returns>The TransactionType value, TransactionType.Unknown otherwise.</returns>
        </member>
        <member name="M:ChargifyNET.UsefulExtensions.GetNodeContentAsTransactionType(System.Xml.XmlNode)">
            <summary>
            Method for getting the content of an XmlNode as a TransactionType
            </summary>
            <param name="node">The node whose value needs to be extracted</param>
            <returns>The TransactionType value of the node</returns>
        </member>
        <member name="M:ChargifyNET.UsefulExtensions.GetNodeContentAsPaymentCollectionMethod(System.Xml.XmlNode)">
            <summary>
            Method for getting the content of an XmlNode as a PaymentCollectionMethod
            </summary>
            <param name="node">The node whose value needs to be extracted</param>
            <returns>The PaymentCollectionMethod value of the node</returns>
        </member>
        <member name="M:ChargifyNET.UsefulExtensions.GetNodeContentAsSubscriptionState(System.Xml.XmlNode)">
            <summary>
            Method for getting the content of an XmlNode as a SubscriptionState
            </summary>
            <param name="node">The node whose value needs to be extracted</param>
            <returns>The SubscriptionState value of the node</returns>
        </member>
        <member name="M:ChargifyNET.UsefulExtensions.GetNodeContentAsEnum``1(System.Xml.XmlNode)">
            <summary>
            Method for getting the content of an XmlNode as it's enum counterpart.
            </summary>
            <param name="node">The node whose value needs to be extracted</param>
            <returns>The enumerated value of the node</returns>
        </member>
        <member name="M:ChargifyNET.UsefulExtensions.GetJSONContentAsEnum``1(ChargifyNET.Json.JsonObject,System.String)">
            <summary>
            Method for retrieving the SubscriptionState from a JsonObject
            </summary>
            <param name="obj">The object to retrieve the SubscriptionState value from</param>
            <param name="key">The key of the SubscriptionState field in the JsonObject</param>
            <returns>The SubscriptionState value, SubscriptionState.Unknown otherwise.</returns>
        </member>
        <member name="M:ChargifyNET.UsefulExtensions.GetJSONContentAsSubscriptionState(ChargifyNET.Json.JsonObject,System.String)">
            <summary>
            Method for retrieving the SubscriptionState from a JsonObject
            </summary>
            <param name="obj">The object to retrieve the SubscriptionState value from</param>
            <param name="key">The key of the SubscriptionState field in the JsonObject</param>
            <returns>The SubscriptionState value, SubscriptionState.Unknown otherwise.</returns>
        </member>
        <member name="M:ChargifyNET.UsefulExtensions.GetNodeContentAsCharge(System.Xml.XmlNode)">
            <summary>
            Method for getting the content of an XmlNode as a Charge
            </summary>
            <param name="node">The node whose value need to be parsed</param>
            <returns>The Charge, null otherwise</returns>
        </member>
        <member name="M:ChargifyNET.UsefulExtensions.GetJSONContentAsCharge(ChargifyNET.Json.JsonObject,System.String)">
            <summary>
            Method for getting the content of a JsonObject as a PublicSignupPage
            </summary>
            <param name="obj">The object to retrieve the PublicSignupPage value from</param>
            <param name="key">The key of the PublicSignupPage field in the JsonObject</param>
            <returns>The PublicSignupPage value, null otherwise.</returns>
        </member>
        <member name="M:ChargifyNET.UsefulExtensions.GetNodeContentAsPublicSignupPage(System.Xml.XmlNode)">
            <summary>
            Method for getting the content of an XmlNode as a PublicSignupPage
            </summary>
            <param name="node">The node whose value need to be parsed</param>
            <returns>The PublicSignupPage, null otherwise</returns>
        </member>
        <member name="M:ChargifyNET.UsefulExtensions.GetJSONContentAsPublicSignupPage(ChargifyNET.Json.JsonObject,System.String)">
            <summary>
            Method for getting the content of a JsonObject as a PublicSignupPage
            </summary>
            <param name="obj">The object to retrieve the PublicSignupPage value from</param>
            <param name="key">The key of the PublicSignupPage field in the JsonObject</param>
            <returns>The PublicSignupPage value, null otherwise.</returns>
        </member>
        <member name="M:ChargifyNET.UsefulExtensions.GetNodeContentAsTransaction(System.Xml.XmlNode)">
            <summary>
            Method for getting the content of an XmlNode as a Transaction
            </summary>
            <param name="node">The node whose value needs to be extracted</param>
            <returns>The Transaction value of the node</returns>
        </member>
        <member name="M:ChargifyNET.UsefulExtensions.GetJSONContentAsTransaction(ChargifyNET.Json.JsonObject,System.String)">
            <summary>
            Method for getting the content of a JsonObject as a Transaction
            </summary>
            <param name="obj">The object to retrieve the Transaction value from</param>
            <param name="key">The key of the Transaction field in the JsonObject</param>
            <returns>The Transaction value, null otherwise.</returns>
        </member>
        <member name="M:ChargifyNET.UsefulExtensions.GetJSONContentAsIntervalUnit(ChargifyNET.Json.JsonObject,System.String)">
            <summary>
            Method for retrieving the IntervalUnit from a JsonObject
            </summary>
            <param name="obj">The object to retrieve the IntervalUnit value from</param>
            <param name="key">The key of the IntervalUnit field in the JsonObject</param>
            <returns>The IntervalUnit value, IntervalUnit.Unknown otherwise.</returns>
        </member>
        <member name="M:ChargifyNET.UsefulExtensions.GetNodeContentAsIntervalUnit(System.Xml.XmlNode)">
            <summary>
            Method for getting the content of an XmlNode as a IntervalUnit
            </summary>
            <param name="node">The node whose value needs to be extracted</param>
            <returns>The IntervalUnit value of the node</returns>
        </member>
        <member name="M:ChargifyNET.UsefulExtensions.CheckEnumIsDefined``1(System.String)">
            <summary>
            Check if the enum is defined
            </summary>
            <typeparam name="T">The type of enum</typeparam>
            <param name="value">The string value</param>
            <returns>True if defined, false otherwise</returns>
        </member>
        <member name="M:ChargifyNET.UsefulExtensions.IsRunningAzure">
            <summary>
            Method for determining if the current application is running under Windows Azure (Dev or Live)
            </summary>
            <returns>RoleEnvironment.IsAvailable result if possible, false otherwise.</returns>
        </member>
        <member name="M:ChargifyNET.UsefulExtensions.GetLateBoundRoleEnvironmentValue(System.String)">
            <summary>
            Method for accessing RoleEnvironment ConfigurationSettingValues without
            needing a reference to the library. These are late bound.
            </summary>
            <param name="settingName">The key of the config setting to retrieve</param>
            <returns>The value of the keyed config string, if applicable. String.Empty otherwise.</returns>
        </member>
        <member name="M:ChargifyNET.UsefulExtensions.ConvertResponseTo``1(System.String,System.String)">
            <summary>
            Method that converts a string to the object, must be supported XML or JSON
            This is used completely internally to ChargifyConnect
            </summary>
            <typeparam name="T">The type of object to parse the string as</typeparam>
            <param name="serverResponse">The XML or JSON response from Chargify</param>
            <param name="key">The JSON key that corresponds to the object to parse</param>
            <returns>The object of type T</returns>
        </member>
        <member name="M:ChargifyNET.UsefulExtensions.Save``1(ChargifyNET.ChargifyConnect,``0)">
            <summary>
            Nifty method for saving an object (aka updating) in Chargify, for user application.
            </summary>
            <typeparam name="T">The type of object you wish to save/update</typeparam>
            <param name="chargify">The ChargifyConnect object</param>
            <param name="objectToBeSaved">The object of type T that is to be saved/updated</param>
            <returns>The updated object if applicable, null otherwise.</returns>
        </member>
        <member name="M:ChargifyNET.UsefulExtensions.Find``1(ChargifyNET.ChargifyConnect,System.Object,System.Nullable{System.Int32})">
            <summary>
            Nifty method for retrieving an object from Chargify, for user application.
            </summary>
            <typeparam name="T">The type of object you wish to find</typeparam>
            <param name="chargify">The ChargifyConnect object</param>
            <param name="id">The ID (or Handle if Product) to find</param>
            <param name="parentId">The ID of the parent, optional</param>
            <returns>The found object if applicable, null otherwise.</returns>
        </member>
        <member name="M:ChargifyNET.UsefulExtensions.CalculateSubscriptionRevenue(ChargifyNET.ChargifyConnect,ChargifyNET.ISubscription)">
            <summary>
            Method for calculating the revenue of a subscription
            </summary>
            <param name="chargify">The ChargifyConnect object to use</param>
            <param name="subscription">The subscription from which to calculate the revenue</param>
            <returns>The decimal value of revenue.</returns>
        </member>
        <member name="M:ChargifyDotNet.ComponentPricePoint.#ctor(System.Xml.XmlNode)">
            <summary>
            Constructor
            </summary>
            <param name="componentPricePointNode">XmlNode containing the data (in expected format)</param>
            <exception cref="T:System.ArgumentNullException"></exception>
            <exception cref="T:System.ArgumentException"></exception>
        </member>
        <member name="M:ChargifyDotNet.ComponentPricePoint.#ctor(ChargifyNET.Json.JsonObject)">
            <summary>
            Constructor
            </summary>
            <param name="componentPricePointObject">JsonObject containing the data (in expected format)</param>
        </member>
        <member name="M:ChargifyDotNet.ComponentPricePoint.LoadFromJson(ChargifyNET.Json.JsonObject)">
            <summary>
            Load data from a JsonObject
            </summary>
            <param name="obj">The JsonObject containing product data</param>
        </member>
        <member name="M:ChargifyDotNet.ComponentPricePoint.CompareTo(ChargifyDotNet.ComponentPricePoint)">
            <summary>
            Compare this ComponentAttributes to another
            </summary>
        </member>
        <member name="M:ChargifyDotNet.ComponentPrice.#ctor(System.Xml.XmlNode)">
            <summary>
            Constructor
            </summary>
            <param name="componentPriceNode">XmlNode containing the data (in expected format)</param>
            <exception cref="T:System.ArgumentNullException"></exception>
            <exception cref="T:System.ArgumentException"></exception>
        </member>
        <member name="M:ChargifyDotNet.ComponentPrice.#ctor(ChargifyNET.Json.JsonObject)">
            <summary>
            Constructor
            </summary>
            <param name="componentPriceObject">JsonObject containing the data (in expected format)</param>
        </member>
        <member name="M:ChargifyDotNet.ComponentPrice.LoadFromJson(ChargifyNET.Json.JsonObject)">
            <summary>
            Load data from a JsonObject
            </summary>
            <param name="obj">The JsonObject containing product data</param>
        </member>
        <member name="T:PCLWebUtility.WebUtility">
            <summary>
            Internal copy of PCLWebUtility which isn't available in netstandard. Working on 
            getting the author to hopefully move his code so I can add netstandard compat.
            </summary>
        </member>
    </members>
</doc>
